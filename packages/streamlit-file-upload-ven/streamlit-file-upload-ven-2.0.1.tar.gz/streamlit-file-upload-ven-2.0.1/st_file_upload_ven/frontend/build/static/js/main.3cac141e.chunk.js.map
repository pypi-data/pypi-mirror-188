{"version":3,"sources":["DashboardComponent.tsx","CardComponent.tsx","index.tsx"],"names":["DashboardComponent","state","score","isUploaded","render","childArr","props","args","map","item","key","label","className","style","display","FormOutlined","width","marginLeft","paddingTop","height","viewBox","fill","xmlns","d","overlayStyle","background","menu","items","children","type","placement","span","borderRadius","textAlign","offset","onClick","handleMenuClick","DownOutlined","e","console","log","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","CardComponent","isUploading","progress","files","onDrop","setState","setInterval","prev","Math","floor","setTimeout","forEach","file","reader","FileReader","onabort","alert","onerror","onload","binaryStr","result","readAsArrayBuffer","justifyContent","centered","open","footer","closable","padding","percent","strokeColor","trailColor","format","color","fontSize","getRootProps","getInputProps","border","cursor","CloudUploadOutlined","id","margin","Button","variant","trackStyle","backgroundColor","min","step","max","defaultValue","marks","0","1","onChange","value","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cac141e.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport './CardComponent.css'\r\nimport { Col, Row } from \"antd/es/grid\";\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { Button, Dropdown, Space } from 'antd';\r\n\r\n\r\n\r\nclass DashboardComponent extends StreamlitComponentBase<any> {\r\n  public state = { score: 0, isUploaded: false }\r\n\r\n  \r\n\r\n  public render = (): ReactNode => {\r\n    const embedList = this.props.args[\"name\"]\r\n    const childArr:any=embedList.map((item:any)=>{\r\n      return {\r\n        key: item,\r\n        label: item,\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div className=\"dashboardParentDiv\" >\r\n        <Row  className=\"NameGroup\">\r\n          <div style={{display:\"flex\"}}>\r\n          <p className=\"groupNameHeading\">Name of the group here </p>\r\n          <FormOutlined style={{width:\"18px\", marginLeft:\"10px\" , paddingTop:\"16px\"}} />\r\n          </div>\r\n          <div style={{display:\"flex\"}}>\r\n         \r\n              <Button className=\"uploadButton\"><svg  width=\"12\" height=\"11\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M9.99984 8.00008V10.0001H1.99984V8.00008H0.666504V10.0001C0.666504 10.7334 1.2665 11.3334 1.99984 11.3334H9.99984C10.7332 11.3334 11.3332 10.7334 11.3332 10.0001V8.00008H9.99984ZM2.6665 4.00008L3.6065 4.94008L5.33317 3.22008V8.66675H6.6665V3.22008L8.39317 4.94008L9.33317 4.00008L5.99984 0.666748L2.6665 4.00008Z\" fill=\"#888C9C\"/>\r\n                </svg>\r\n              </Button>\r\n\r\n              <Dropdown overlayStyle={{background:\"red !important\"}} menu={{ items:[\r\n             \r\n                {\r\n                  key: '1',\r\n                  label: 'Embadded Model Name',\r\n                  children: childArr,\r\n                },\r\n                {\r\n                  key: '2',\r\n                  type: 'group',\r\n                  children: [\r\n                    {\r\n                      key: '2-1',\r\n                      label: 'Temperature',\r\n                    },\r\n                    {\r\n                      key: '2-2',\r\n                      label: 'Similarity_Score ',\r\n                      // danger: true,\r\n                      \r\n                    }\r\n                  ],\r\n                },\r\n              ], }} placement=\"top\">\r\n                <Button className=\"settingButton\"><svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M6.5 8.53125C5.37875 8.53125 4.46875 7.62125 4.46875 6.5C4.46875 5.37875 5.37875 4.46875 6.5 4.46875C7.62125 4.46875 8.53125 5.37875 8.53125 6.5C8.53125 7.62125 7.62125 8.53125 6.5 8.53125ZM6.5 5.28125C5.82833 5.28125 5.28125 5.82833 5.28125 6.5C5.28125 7.17167 5.82833 7.71875 6.5 7.71875C7.17167 7.71875 7.71875 7.17167 7.71875 6.5C7.71875 5.82833 7.17167 5.28125 6.5 5.28125Z\" fill=\"white\"/>\r\n                  <path d=\"M8.23891 12.0197C8.12516 12.0197 8.01141 12.0034 7.89766 11.9763C7.56183 11.8842 7.28016 11.673 7.10141 11.3751L7.03641 11.2667C6.71683 10.7142 6.27808 10.7142 5.9585 11.2667L5.89891 11.3697C5.72016 11.673 5.4385 11.8897 5.10266 11.9763C4.76141 12.0684 4.40933 12.0197 4.11141 11.8409L3.17975 11.3047C2.84933 11.1151 2.611 10.8063 2.50808 10.4326C2.41058 10.0588 2.45933 9.67424 2.64891 9.34382C2.806 9.06757 2.84933 8.81841 2.75725 8.66132C2.66516 8.50424 2.43225 8.41216 2.11266 8.41216C1.32183 8.41216 0.677246 7.76757 0.677246 6.97674V6.02341C0.677246 5.23257 1.32183 4.58799 2.11266 4.58799C2.43225 4.58799 2.66516 4.49591 2.75725 4.33882C2.84933 4.18174 2.81141 3.93257 2.64891 3.65632C2.45933 3.32591 2.41058 2.93591 2.50808 2.56757C2.60558 2.19382 2.84391 1.88507 3.17975 1.69549L4.11683 1.15924C4.72891 0.796324 5.536 1.00757 5.90433 1.63049L5.96933 1.73882C6.28891 2.29132 6.72766 2.29132 7.04725 1.73882L7.10683 1.63591C7.47516 1.00757 8.28225 0.796324 8.89975 1.16466L9.83141 1.70091C10.1618 1.89049 10.4002 2.19924 10.5031 2.57299C10.6006 2.94674 10.5518 3.33132 10.3622 3.66174C10.2052 3.93799 10.1618 4.18716 10.2539 4.34424C10.346 4.50132 10.5789 4.59341 10.8985 4.59341C11.6893 4.59341 12.3339 5.23799 12.3339 6.02882V6.98216C12.3339 7.77299 11.6893 8.41757 10.8985 8.41757C10.5789 8.41757 10.346 8.50966 10.2539 8.66674C10.1618 8.82382 10.1997 9.07299 10.3622 9.34924C10.5518 9.67966 10.606 10.0697 10.5031 10.438C10.4056 10.8117 10.1672 11.1205 9.83141 11.3101L8.89433 11.8463C8.6885 11.9601 8.46641 12.0197 8.23891 12.0197ZM6.50016 10.0155C6.98225 10.0155 7.43183 10.3188 7.74058 10.8551L7.80016 10.958C7.86516 11.0717 7.9735 11.153 8.1035 11.1855C8.2335 11.218 8.3635 11.2017 8.47183 11.1367L9.40891 10.5951C9.54975 10.5138 9.65808 10.3784 9.70141 10.2159C9.74475 10.0534 9.72308 9.88549 9.64183 9.74466C9.33308 9.21382 9.29516 8.66674 9.5335 8.24966C9.77183 7.83257 10.2647 7.59424 10.8822 7.59424C11.2289 7.59424 11.5052 7.31799 11.5052 6.97132V6.01799C11.5052 5.67674 11.2289 5.39507 10.8822 5.39507C10.2647 5.39507 9.77183 5.15674 9.5335 4.73966C9.29516 4.32257 9.33308 3.77549 9.64183 3.24466C9.72308 3.10382 9.74475 2.93591 9.70141 2.77341C9.65808 2.61091 9.55516 2.48091 9.41433 2.39424L8.47725 1.85799C8.24433 1.71716 7.93558 1.79841 7.79475 2.03674L7.73516 2.13966C7.42641 2.67591 6.97683 2.97924 6.49475 2.97924C6.01266 2.97924 5.56308 2.67591 5.25433 2.13966L5.19475 2.03132C5.05933 1.80382 4.756 1.72257 4.52308 1.85799L3.586 2.39966C3.44516 2.48091 3.33683 2.61632 3.2935 2.77882C3.25016 2.94132 3.27183 3.10924 3.35308 3.25007C3.66183 3.78091 3.69975 4.32799 3.46141 4.74507C3.22308 5.16216 2.73016 5.40049 2.11266 5.40049C1.766 5.40049 1.48975 5.67674 1.48975 6.02341V6.97674C1.48975 7.31799 1.766 7.59966 2.11266 7.59966C2.73016 7.59966 3.22308 7.83799 3.46141 8.25507C3.69975 8.67216 3.66183 9.21924 3.35308 9.75007C3.27183 9.89091 3.25016 10.0588 3.2935 10.2213C3.33683 10.3838 3.43975 10.5138 3.58058 10.6005L4.51766 11.1367C4.63141 11.2072 4.76683 11.2234 4.89141 11.1909C5.02141 11.1584 5.12975 11.0717 5.20016 10.958L5.25975 10.8551C5.5685 10.3242 6.01808 10.0155 6.50016 10.0155Z\" fill=\"white\"/>\r\n                  </svg>\r\n              </Button>\r\n            </Dropdown>\r\n            <Button className=\"CSVButton\">Download CSV</Button>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"summarySection\">\r\n          <Col span={22} >\r\n            <p className=\"summary\">Summary</p>\r\n            <p className=\"summaryParagraph\">It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).</p>\r\n            </Col>\r\n            <Col span={2}>\r\n              <div className=\"similarity  p-2 m-2\" style={{background:'#262730', borderRadius:5, textAlign:'center'}}>4/10</div>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col span={12} className=\"topicCard\">\r\n            <p className=\"topics\">Topics</p>\r\n          </Col>\r\n          <Col   offset={1} span={11} className=\"topicCard\">\r\n            <p className=\"similerText\">Similer Text</p>\r\n            <ul className=\"setScroll\" >\r\n              <li className=\"similerTextParagraph\">List 01</li>\r\n   \r\n              </ul>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1 mb-1 p-5 d-flex justify-content-center\">\r\n          <Button  className=\"previousButton\">Previous</Button>\r\n          <Dropdown  className=\"customDropdown\"  menu={{\r\n    items:[\r\n      {\r\n        label: '1',\r\n        key: '1',\r\n        // icon: <UserOutlined />,\r\n      },\r\n      {\r\n        label: '2',\r\n        key: '2',\r\n      },\r\n      {\r\n        label: '3',\r\n        key: '3',\r\n       \r\n      }\r\n     \r\n    ],\r\n    onClick: this.handleMenuClick,\r\n  }}>\r\n      <Button className=\"dropdownButton\">\r\n        <Space>\r\n          4/10\r\n          <DownOutlined />\r\n        </Space>\r\n      </Button>\r\n    </Dropdown >\r\n          <Button  className=\"NextButton\">Next</Button>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n\r\n    private handleMenuClick = (e:any): void => {\r\n      console.log('click', e);\r\n      Streamlit.setComponentValue(e.key)\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(DashboardComponent)\r\n","import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\nimport { Button } from \"@mui/material\";\r\nimport './CardComponent.css'\r\nimport Slider from \"antd/es/slider\";\r\nimport { Col, Row } from \"antd/es/grid\";\r\nimport Modal from \"antd/es/modal\";\r\nimport Progress from \"antd/es/progress\";\r\nimport Dropzone from 'react-dropzone';\r\nimport DashboardComponent from \"./DashboardComponent\";\r\n\r\nclass CardComponent extends StreamlitComponentBase<any> {\r\n \r\n  public state = { \r\n    score: 0.7, \r\n    isUploading: false, \r\n    isUploaded: false, \r\n    progress:1, \r\n    files:[], \r\n    onDrop:(files:any)=>{\r\n    this.setState({files});\r\n    this.setState({isUploading:true})\r\n\r\n    setInterval(()=>{\r\n      if(this.state.progress<=100){\r\n        this.setState((prev:any)=>({progress:Math.floor(prev.progress+(100/30))}))\r\n      }\r\n    }, 100)\r\n    setTimeout(()=>{\r\n      files.forEach((file:any) => {\r\n\r\n        const reader = new FileReader()\r\n  \r\n        reader.onabort = () => {\r\n          alert('file reading was aborted');\r\n          // this.setState({isUploaded:false})\r\n        }\r\n        reader.onerror = () => {\r\n          alert('file reading has failed');\r\n          // this.setState({isUploaded:false})\r\n        }\r\n        reader.onload = () => {\r\n          const binaryStr = reader.result\r\n          console.log(binaryStr)\r\n          Streamlit.setComponentValue(binaryStr)\r\n          this.setState({isUploading:false, isUploaded:true, progress:1})\r\n        }\r\n        reader.readAsArrayBuffer(file)\r\n      })\r\n    }, 2000);\r\n    },\r\n }\r\n\r\n  public render = (): ReactNode => {\r\n    console.log(this.props.args)\r\n    return (\r\n      <div style={{background:\"#11111\", width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\r\n      {\r\n        this.state.isUploaded ?\r\n        <DashboardComponent/>\r\n        :\r\n        <div style={{background:\"#262730\", width:'70%'}}>\r\n        {\r\n          this.state.isUploading &&\r\n          <Modal\r\n           \r\n            centered\r\n            open={this.state.isUploading}\r\n            footer={null}\r\n            closable={false}\r\n          >\r\n            <Progress style={{display:\"flex\", justifyContent:\"center\", padding:\"20px\"}} type=\"circle\" percent={this.state.progress} strokeColor='#FF4B4B' trailColor=\"#888C9C\" format={(percent) => <span style={{color: '#fff'}}>{percent}%</span>} />\r\n            <p style={{textAlign:'center', fontSize:16}}>We are processing the data you have uploaded</p>\r\n          </Modal>\r\n        }\r\n        <div className=\"main-div\">\r\n          <Dropzone onDrop={this.state.onDrop} >\r\n            {({getRootProps, getInputProps}) => (\r\n              <section className=\"container\" style={{border:\"1px solid transparent\",background: \"#32333D\", cursor:'pointer', textAlign:'center', padding:'60px 0px', borderRadius:5}}>\r\n                <div {...getRootProps({className: 'dropzone'})}>\r\n                  <input {...getInputProps()} />\r\n                  <div>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                      <CloudUploadOutlined id=\"CloudUploadOutlined\" />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\" style={{color:'#fff', margin:'unset'}}>Drag and drop files here</p>\r\n                    <p className=\"ant-upload-hint\" style={{color:'grey', fontSize:13}}>\r\n                      Limit 200MB per file\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"primary\" style={{background:'#FF4B4B', width:180, margin:10}}>Browse file</Button>\r\n                    <p className=\"ant-upload-hint\" style={{color:'grey', fontSize:13}}>\r\n                      (CSV file only)\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            )}\r\n          </Dropzone>\r\n        </div>\r\n\r\n          <Row id=\"aaaa\" className=\"p-4\" >\r\n            <Col span={3}>\r\n              <div className=\"similarity my-3 p-3 mr-4\" style={{background:'#262730', borderRadius:5, textAlign:'center'}}>{this.state.score}</div>\r\n            </Col>\r\n            <Col span={21} >\r\n              <p className=\"similarity\">Similarity score</p>\r\n            <Slider \r\n              trackStyle={{backgroundColor:\"#FF4B4B\"}} \r\n              min={0}\r\n              step={.1}\r\n              max={1}\r\n              defaultValue={0.7}\r\n              // railStyle={{backgroundColor:\"#fff\"}} \r\n              marks={{\r\n                \r\n                0: {\r\n                  style: {\r\n                    color: '#888C9C',\r\n                    paddingTop: 10,\r\n                  },\r\n                  label: <strong>0</strong>,\r\n                },\r\n                1: {\r\n                  style: {\r\n                    color: '#888C9C',\r\n                    paddingTop: 10,\r\n                  },\r\n                  label: <strong>1</strong>,\r\n                },\r\n              }} \r\n              onChange={(value) => {\r\n                this.setState({ score: value });\r\n                Streamlit.setComponentValue(value)\r\n              }}\r\n            />\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(CardComponent)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CardComponent from \"./CardComponent\"\r\nimport DashboardComponent from \"./DashboardComponent\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CardComponent />\r\n    {/* <DashboardComponent /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}