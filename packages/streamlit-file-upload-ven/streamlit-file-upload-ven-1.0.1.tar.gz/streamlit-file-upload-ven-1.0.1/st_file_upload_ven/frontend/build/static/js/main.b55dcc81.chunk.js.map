{"version":3,"sources":["DashboardComponent.tsx","CardComponent.tsx","index.tsx"],"names":["DashboardComponent","state","score","isUploaded","render","className","style","display","FormOutlined","width","marginLeft","paddingTop","span","background","borderRadius","textAlign","offset","menu","items","label","key","onClick","handleMenuClick","DownOutlined","e","console","log","StreamlitComponentBase","withStreamlitConnection","CardComponent","isUploading","progress","files","onDrop","setState","setInterval","prev","Math","floor","setTimeout","forEach","file","reader","FileReader","onabort","alert","onerror","onload","binaryStr","result","Streamlit","setComponentValue","readAsArrayBuffer","props","args","centered","open","footer","closable","justifyContent","padding","type","percent","strokeColor","trailColor","format","color","fontSize","getRootProps","getInputProps","border","cursor","CloudUploadOutlined","id","margin","Button","variant","trackStyle","backgroundColor","marks","0","100","onChange","value","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b55dcc81.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport './CardComponent.css'\r\nimport { Col, Row } from \"antd/es/grid\";\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nimport { Button, Dropdown, message, Space, Tooltip } from 'antd';\r\n\r\n\r\nclass DashboardComponent extends StreamlitComponentBase<any> {\r\n  public state = { score: 0, isUploaded: false }\r\n  \r\n\r\n  public render = (): ReactNode => {\r\n    return (\r\n      <div className=\"dashboardParentDiv\" >\r\n        <Row  className=\"NameGroup\">\r\n          <div style={{display:\"flex\"}}>\r\n          <p className=\"groupNameHeading\">Name of the group here </p>\r\n          <FormOutlined style={{width:\"18px\", marginLeft:\"10px\" , paddingTop:\"16px\"}} />\r\n          </div>\r\n          \r\n          <Button className=\"CSVButton\">Download CSV</Button>\r\n        </Row>\r\n        <Row className=\"summarySection\">\r\n          <Col span={22} >\r\n            <p className=\"summary\">Summary</p>\r\n            <p className=\"summaryParagraph\">It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).</p>\r\n            </Col>\r\n            <Col span={2}>\r\n              <div className=\"similarity  p-2 m-2\" style={{background:'#262730', borderRadius:5, textAlign:'center'}}>4/10</div>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col span={12} className=\"topicCard\">\r\n            <p className=\"topics\">Topics</p>\r\n            <p className=\"topicParagraph\">It is a long established fact that a reader will be <br/>distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that.</p>\r\n          </Col>\r\n          <Col offset={1} span={11} className=\"topicCard\">\r\n            <p className=\"similerText\">Similer Text</p>\r\n            <p>\r\n              <li className=\"similerTextParagraph\">hgsagasyudgusya</li>\r\n              <li className=\"similerTextParagraph\">hgsagasyudgusya</li>\r\n              <li className=\"similerTextParagraph\">hgsagasyudgusya</li>\r\n              <li className=\"similerTextParagraph\">hgsagasyudgusya</li>\r\n              </p>\r\n             \r\n          \r\n\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3 mb-3 p-5 d-flex justify-content-center\">\r\n          <Button  className=\"previousButton\">Previous</Button>\r\n          <Dropdown  className=\"customDropdown\"  menu={{\r\n    items:[\r\n      {\r\n        label: '1',\r\n        key: '1',\r\n        // icon: <UserOutlined />,\r\n      },\r\n      {\r\n        label: '2',\r\n        key: '2',\r\n      },\r\n      {\r\n        label: '3',\r\n        key: '3',\r\n       \r\n      }\r\n     \r\n    ],\r\n    onClick: this.handleMenuClick,\r\n  }}>\r\n      <Button className=\"dropdownButton\">\r\n        <Space>\r\n          4/10\r\n          <DownOutlined />\r\n        </Space>\r\n      </Button>\r\n    </Dropdown >\r\n          <Button  className=\"NextButton\">Next</Button>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n\r\n    private handleMenuClick = (e:any): void => {\r\n      console.log('click', e);\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(DashboardComponent)\r\n","import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\nimport { Button } from \"@mui/material\";\r\nimport './CardComponent.css'\r\nimport Slider from \"antd/es/slider\";\r\nimport { Col, Row } from \"antd/es/grid\";\r\nimport Modal from \"antd/es/modal\";\r\nimport Progress from \"antd/es/progress\";\r\nimport Dropzone from 'react-dropzone';\r\nimport DashboardComponent from \"./DashboardComponent\";\r\n\r\nclass CardComponent extends StreamlitComponentBase<any> {\r\n \r\n  public state = { \r\n    score: 0, \r\n    isUploading: false, \r\n    isUploaded: false, \r\n    progress:1, \r\n    files:[], \r\n    onDrop:(files:any)=>{\r\n    this.setState({files});\r\n    this.setState({isUploading:true})\r\n\r\n    setInterval(()=>{\r\n      if(this.state.progress<=100){\r\n        this.setState((prev:any)=>({progress:Math.floor(prev.progress+(100/30))}))\r\n      }\r\n    }, 100)\r\n    setTimeout(()=>{\r\n      files.forEach((file:any) => {\r\n\r\n        const reader = new FileReader()\r\n  \r\n        reader.onabort = () => {\r\n          alert('file reading was aborted');\r\n          // this.setState({isUploaded:false})\r\n        }\r\n        reader.onerror = () => {\r\n          alert('file reading has failed');\r\n          // this.setState({isUploaded:false})\r\n        }\r\n        reader.onload = () => {\r\n          const binaryStr = reader.result\r\n          console.log(binaryStr)\r\n          Streamlit.setComponentValue(binaryStr)\r\n          this.setState({isUploading:false, isUploaded:true, progress:1})\r\n        }\r\n        reader.readAsArrayBuffer(file)\r\n      })\r\n    }, 2000);\r\n    },\r\n }\r\n\r\n  public render = (): ReactNode => {\r\n    console.log(this.props.args)\r\n    return (\r\n      <>\r\n      {\r\n        this.state.isUploaded ?\r\n        <DashboardComponent/>\r\n        :\r\n        <div style={{background:\"#262730\", width:'70%'}}>\r\n        {\r\n          this.state.isUploading &&\r\n          <Modal\r\n           \r\n            centered\r\n            open={this.state.isUploading}\r\n            footer={null}\r\n            closable={false}\r\n          >\r\n            <Progress style={{display:\"flex\", justifyContent:\"center\", padding:\"20px\"}} type=\"circle\" percent={this.state.progress} strokeColor='#FF4B4B' trailColor=\"#888C9C\" format={(percent) => <span style={{color: '#fff'}}>{percent}%</span>} />\r\n            <p style={{textAlign:'center', fontSize:16}}>We are processing the data you have uploaded</p>\r\n          </Modal>\r\n        }\r\n        <div className=\"main-div\">\r\n          <Dropzone onDrop={this.state.onDrop} >\r\n            {({getRootProps, getInputProps}) => (\r\n              <section className=\"container\" style={{border:\"1px solid transparent\",background: \"#32333D\", cursor:'pointer', textAlign:'center', padding:'60px 0px', borderRadius:5}}>\r\n                <div {...getRootProps({className: 'dropzone'})}>\r\n                  <input {...getInputProps()} />\r\n                  <div>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                      <CloudUploadOutlined id=\"CloudUploadOutlined\" />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\" style={{color:'#fff', margin:'unset'}}>Drag and drop files here</p>\r\n                    <p className=\"ant-upload-hint\" style={{color:'grey', fontSize:13}}>\r\n                      Limit 200MB per file\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"primary\" style={{background:'#FF4B4B', width:180, margin:10}}>Browse file</Button>\r\n                    <p className=\"ant-upload-hint\" style={{color:'grey', fontSize:13}}>\r\n                      (CSV file only)\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            )}\r\n          </Dropzone>\r\n        </div>\r\n\r\n          <Row id=\"aaaa\" className=\"p-4\" >\r\n            <Col span={3}>\r\n              <div className=\"similarity my-3 p-3 mr-4\" style={{background:'#262730', borderRadius:5, textAlign:'center'}}>{this.state.score}</div>\r\n            </Col>\r\n            <Col span={21} >\r\n              <p className=\"similarity\">Similarity score</p>\r\n            <Slider \r\n              trackStyle={{backgroundColor:\"#FF4B4B\"}} \r\n              // railStyle={{backgroundColor:\"#fff\"}} \r\n              marks={{\r\n                0: {\r\n                  style: {\r\n                    color: '#888C9C',\r\n                    paddingTop: 10,\r\n                  },\r\n                  label: <strong>0</strong>,\r\n                },\r\n                100: {\r\n                  style: {\r\n                    color: '#888C9C',\r\n                    paddingTop: 10,\r\n                  },\r\n                  label: <strong>100</strong>,\r\n                },\r\n              }} \r\n              onChange={(value) => this.setState({ score: value })}\r\n            />\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n      }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(CardComponent)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CardComponent from \"./CardComponent\"\r\nimport DashboardComponent from \"./DashboardComponent\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CardComponent />\r\n    {/* <DashboardComponent /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}