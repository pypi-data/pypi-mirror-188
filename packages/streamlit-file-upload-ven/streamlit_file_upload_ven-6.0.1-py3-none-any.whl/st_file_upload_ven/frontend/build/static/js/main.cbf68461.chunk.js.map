{"version":3,"sources":["CardComponent.tsx","index.tsx"],"names":["CardComponent","state","score","isUploading","progress","files","onDrop","setState","setInterval","prev","Math","floor","setTimeout","forEach","file","reader","FileReader","onabort","alert","onerror","onload","binaryStr","result","console","log","Streamlit","setComponentValue","readAsText","render","style","background","width","display","justifyContent","centered","open","footer","closable","padding","type","percent","strokeColor","trailColor","format","color","textAlign","fontSize","getRootProps","getInputProps","className","border","cursor","borderRadius","CloudUploadOutlined","id","margin","Button","variant","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"6UAcMA,EAAa,iKAgFhB,OAhFgB,oCACVC,MAAQ,CACbC,MAAO,GACPC,aAAa,EACbC,SAAS,EACTC,MAAM,GACNC,OAAO,SAACD,GACR,EAAKE,SAAS,CAACF,UACf,EAAKE,SAAS,CAACJ,aAAY,IAE3BK,aAAY,WACP,EAAKP,MAAMG,UAAU,KACtB,EAAKG,UAAS,SAACE,GAAQ,MAAI,CAACL,SAASM,KAAKC,MAAMF,EAAKL,SAAU,IAAI,UAEpE,KACHQ,YAAW,WACTP,EAAMQ,SAAQ,SAACC,GACb,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,QAAU,WACfC,MAAM,4BACN,EAAKX,SAAS,CAACJ,aAAY,EAAOC,SAAS,KAE7CW,EAAOI,QAAU,WACfD,MAAM,2BACN,EAAKX,SAAS,CAACJ,aAAY,EAAOC,SAAS,KAE7CW,EAAOK,OAAS,WACd,IAAMC,EAAYN,EAAOO,OACzBC,QAAQC,IAAIH,GACZI,IAAUC,kBAAkBL,GAC5B,EAAKd,SAAS,CAACJ,aAAY,EAAOC,SAAS,KAE7CW,EAAOY,WAAWb,QAEnB,OAEL,EAEOc,OAAS,WACd,OACE,yBAAKC,MAAO,CAACC,WAAW,SAAUC,MAAM,OAAQC,QAAQ,OAAQC,eAAe,WAC7E,yBAAKJ,MAAO,CAACC,WAAW,UAAWC,MAAM,QAEvC,EAAK9B,MAAME,aACX,kBAAC,IAAK,CAEJ+B,UAAQ,EACRC,KAAM,EAAKlC,MAAME,YACjBiC,OAAQ,KACRC,UAAU,GAEV,kBAAC,IAAQ,CAACR,MAAO,CAACG,QAAQ,OAAQC,eAAe,SAAUK,QAAQ,QAASC,KAAK,SAASC,QAAS,EAAKvC,MAAMG,SAAUqC,YAAY,UAAUC,WAAW,UAAUC,OAAQ,SAACH,GAAO,OAAK,0BAAMX,MAAO,CAACe,MAAO,SAAUJ,EAAQ,QAC/N,uBAAGX,MAAO,CAACgB,UAAU,SAAUC,SAAS,KAAK,iDAG/C,kBAAC,IAAQ,CAACxC,OAAQ,EAAKL,MAAMK,SAC1B,gBAAEyC,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAAa,OAC5B,6BAASC,UAAU,YAAYpB,MAAO,CAACqB,OAAO,wBAAwBpB,WAAY,UAAWqB,OAAO,UAAWN,UAAU,SAAUP,QAAQ,WAAYc,aAAa,IAClK,wBAASL,EAAa,CAACE,UAAW,aAChC,0BAAWD,KACX,6BACE,uBAAGC,UAAU,wBACX,kBAACI,EAAA,EAAmB,CAACC,GAAG,yBAE1B,uBAAGL,UAAU,kBAAkBpB,MAAO,CAACe,MAAM,OAAQW,OAAO,UAAU,4BACtE,uBAAGN,UAAU,kBAAkBpB,MAAO,CAACe,MAAM,OAAQE,SAAS,KAAK,wBAGnE,kBAACU,EAAA,EAAM,CAACC,QAAQ,YAAYb,MAAM,UAAUf,MAAO,CAACC,WAAW,UAAWC,MAAM,IAAKwB,OAAO,KAAK,eACjG,uBAAGN,UAAU,kBAAkBpB,MAAO,CAACe,MAAM,OAAQE,SAAS,KAAK,4BAWpF,wBAhFgB,CAASY,KAmFbC,cAAwB3D,GC7FvC4D,IAAShC,OACP,kBAAC,IAAMiC,WAAU,KACf,kBAAC,EAAa,OAEhBC,SAASC,eAAe,W","file":"static/js/main.cbf68461.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\nimport { Button } from \"@mui/material\";\r\nimport './CardComponent.css'\r\nimport Modal from \"antd/es/modal\";\r\nimport Progress from \"antd/es/progress\";\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass CardComponent extends StreamlitComponentBase<any> {\r\n  public state = { \r\n    score: 0.7, \r\n    isUploading: false, \r\n    progress:1, \r\n    files:[], \r\n    onDrop:(files:any)=>{\r\n    this.setState({files});\r\n    this.setState({isUploading:true})\r\n\r\n    setInterval(()=>{\r\n      if(this.state.progress<=100){\r\n        this.setState((prev:any)=>({progress:Math.floor(prev.progress+(100/30))}))\r\n      }\r\n    }, 100)\r\n    setTimeout(()=>{\r\n      files.forEach((file:any) => {\r\n        const reader = new FileReader()\r\n        reader.onabort = () => {\r\n          alert('file reading was aborted');\r\n          this.setState({isUploading:false, progress:1})\r\n        }\r\n        reader.onerror = () => {\r\n          alert('file reading has failed');\r\n          this.setState({isUploading:false, progress:1})\r\n        }\r\n        reader.onload = () => {\r\n          const binaryStr = reader.result\r\n          console.log(binaryStr)\r\n          Streamlit.setComponentValue(binaryStr)\r\n          this.setState({isUploading:false, progress:1})\r\n        }\r\n        reader.readAsText(file)\r\n      })\r\n    }, 2000);\r\n    },\r\n }\r\n\r\n  public render = (): ReactNode => {\r\n    return (\r\n      <div style={{background:\"#11111\", width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\r\n        <div style={{background:\"#262730\", width:'70%'}}>\r\n        {\r\n          this.state.isUploading &&\r\n          <Modal\r\n           \r\n            centered\r\n            open={this.state.isUploading}\r\n            footer={null}\r\n            closable={false}\r\n          >\r\n            <Progress style={{display:\"flex\", justifyContent:\"center\", padding:\"20px\"}} type=\"circle\" percent={this.state.progress} strokeColor='#FF4B4B' trailColor=\"#888C9C\" format={(percent) => <span style={{color: '#fff'}}>{percent}%</span>} />\r\n            <p style={{textAlign:'center', fontSize:16}}>We are processing the data you have uploaded</p>\r\n          </Modal>\r\n        }\r\n          <Dropzone onDrop={this.state.onDrop}>\r\n            {({getRootProps, getInputProps}) => (\r\n              <section className=\"container\" style={{border:\"1px solid transparent\",background: \"#32333D\", cursor:'pointer', textAlign:'center', padding:'60px 0px', borderRadius:5}}>\r\n                <div {...getRootProps({className: 'dropzone'})}>\r\n                  <input {...getInputProps()} />\r\n                  <div>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                      <CloudUploadOutlined id=\"CloudUploadOutlined\" />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\" style={{color:'#fff', margin:'unset'}}>Drag and drop files here</p>\r\n                    <p className=\"ant-upload-hint\" style={{color:'grey', fontSize:13}}>\r\n                      Limit 200MB per file\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"primary\" style={{background:'#FF4B4B', width:180, margin:10}}>Browse file</Button>\r\n                    <p className=\"ant-upload-hint\" style={{color:'grey', fontSize:13}}>\r\n                      (CSV file only)\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            )}\r\n          </Dropzone>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(CardComponent)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CardComponent from \"./CardComponent\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CardComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}