{"version":3,"sources":["OnDisplayData.tsx","index.tsx"],"names":["OnDisplayData","state","selectedTopic","temp","score","model","render","console","log","props","args","embedList","group_names","text_groups","summaries","topics","generated_number_groups","childArr","Buffer","from","toString","map","item","key","label","selectedTopicsOptions","i","push","className","style","display","width","marginLeft","paddingTop","height","viewBox","fill","xmlns","d","menu","items","children","onClick","onModelChange","trackStyle","background","defaultValue","onAfterChange","onTempChange","onScoreChange","placement","span","borderRadius","textAlign","src","alt","offset","onPreviousClick","handleMenuClick","onNextClick","e","setState","prev","end","Streamlit","setComponentValue","val","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.630d81e3.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport './CardComponent.css'\r\nimport { Col, Row } from \"antd/es/grid\";\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { Button, Dropdown, Image, Slider, Space } from 'antd';\r\n// import { TagCloud } from 'react-tagcloud'\r\n// const data = [\r\n\r\n//   { value: 'Express.js', count: 25 },\r\n//   { value: 'HTML5', count: 33 },\r\n//   { value: 'MongoDB', count: 18 },\r\n//   { value: 'CSS3', count: 20 },\r\n//   { value: 'JavaScript', count: 38 },\r\n//   { value: 'React', count: 30 },\r\n//   { value: 'Nodejs', count: 28 },\r\n//   { value: 'Express.js', count: 25 },\r\n//   { value: 'HTML5', count: 33 },\r\n//   { value: 'MongoDB', count: 18 },\r\n//   { value: 'CSS3', count: 20 },\r\n//   { value: 'JavaScript', count: 38 },\r\n//   { value: 'React', count: 30 },\r\n//   { value: 'Nodejs', count: 28 },\r\n//   { value: 'Express.js', count: 25 },\r\n//   { value: 'HTML5', count: 33 },\r\n//   { value: 'MongoDB', count: 18 },\r\n//   { value: 'CSS3', count: 20 },\r\n// ]\r\n\r\nclass OnDisplayData extends StreamlitComponentBase<any> {\r\n  public state = { selectedTopic: 0, temp: 0, score: 0, model:null}\r\n\r\n  public render = (): ReactNode => {\r\n    console.log(this.props.args)\r\n    const embedList = this.props.args[\"menu\"]\r\n    const group_names = this.props.args[\"group_names\"]\r\n    const text_groups = this.props.args[\"text_groups\"]\r\n    const summaries = this.props.args[\"summaries\"]\r\n    const topics = this.props.args[\"topics\"]\r\n    const generated_number_groups = this.props.args[\"generated_number_groups\"]\r\n    const word_cloud_image = Buffer.from(this.props.args[\"word_cloud_image\"], \"base64\").toString()\r\n    const childArr:any=embedList.map((item:any)=>{\r\n      return {\r\n        key: item,\r\n        label: item,\r\n      }\r\n    })\r\n\r\n    const selectedTopicsOptions:any = [];\r\n    for(let i=0; i<generated_number_groups; i++){\r\n      selectedTopicsOptions.push({\r\n        label: (i+1).toString()+\"/\"+generated_number_groups,\r\n        key: i,\r\n      },)\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboardParentDiv\" >\r\n        <Row  className=\"NameGroup\">\r\n          <div style={{display:\"flex\"}}>\r\n          <p className=\"groupNameHeading\">{group_names[this.state.selectedTopic]}</p>\r\n          <FormOutlined style={{width:\"18px\", marginLeft:\"10px\" , paddingTop:\"16px\"}} />\r\n          </div>\r\n          <div style={{display:\"flex\"}}>\r\n         \r\n              <Button className=\"uploadButton\"><svg  width=\"12\" height=\"11\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M9.99984 8.00008V10.0001H1.99984V8.00008H0.666504V10.0001C0.666504 10.7334 1.2665 11.3334 1.99984 11.3334H9.99984C10.7332 11.3334 11.3332 10.7334 11.3332 10.0001V8.00008H9.99984ZM2.6665 4.00008L3.6065 4.94008L5.33317 3.22008V8.66675H6.6665V3.22008L8.39317 4.94008L9.33317 4.00008L5.99984 0.666748L2.6665 4.00008Z\" fill=\"#888C9C\"/>\r\n                </svg>\r\n              </Button>\r\n\r\n              <Dropdown menu={{ items:[\r\n                {\r\n                  key: '1',\r\n                  label: 'Embadded Model Name',\r\n                  children: childArr,\r\n                  onClick: this.onModelChange,\r\n                },\r\n                {\r\n                  key: '2',\r\n                  label: (\r\n                    <div>\r\n                      <p>Temperature</p>\r\n                      <Slider trackStyle={{background:'#FF4B4B'}} defaultValue={this.state.temp} onAfterChange={this.onTempChange}/>\r\n                    </div>\r\n                  ),\r\n                },\r\n                {\r\n                  key: '3',\r\n                  label: (\r\n                    <div>\r\n                      <p>Similarity Score</p>\r\n                      <Slider trackStyle={{background:'#FF4B4B'}} defaultValue={this.state.score} onAfterChange={this.onScoreChange}/>\r\n                    </div>\r\n                  ),\r\n                },\r\n              ], }} placement=\"top\">\r\n                <Button className=\"settingButton\"><svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M6.5 8.53125C5.37875 8.53125 4.46875 7.62125 4.46875 6.5C4.46875 5.37875 5.37875 4.46875 6.5 4.46875C7.62125 4.46875 8.53125 5.37875 8.53125 6.5C8.53125 7.62125 7.62125 8.53125 6.5 8.53125ZM6.5 5.28125C5.82833 5.28125 5.28125 5.82833 5.28125 6.5C5.28125 7.17167 5.82833 7.71875 6.5 7.71875C7.17167 7.71875 7.71875 7.17167 7.71875 6.5C7.71875 5.82833 7.17167 5.28125 6.5 5.28125Z\" fill=\"white\"/>\r\n                  <path d=\"M8.23891 12.0197C8.12516 12.0197 8.01141 12.0034 7.89766 11.9763C7.56183 11.8842 7.28016 11.673 7.10141 11.3751L7.03641 11.2667C6.71683 10.7142 6.27808 10.7142 5.9585 11.2667L5.89891 11.3697C5.72016 11.673 5.4385 11.8897 5.10266 11.9763C4.76141 12.0684 4.40933 12.0197 4.11141 11.8409L3.17975 11.3047C2.84933 11.1151 2.611 10.8063 2.50808 10.4326C2.41058 10.0588 2.45933 9.67424 2.64891 9.34382C2.806 9.06757 2.84933 8.81841 2.75725 8.66132C2.66516 8.50424 2.43225 8.41216 2.11266 8.41216C1.32183 8.41216 0.677246 7.76757 0.677246 6.97674V6.02341C0.677246 5.23257 1.32183 4.58799 2.11266 4.58799C2.43225 4.58799 2.66516 4.49591 2.75725 4.33882C2.84933 4.18174 2.81141 3.93257 2.64891 3.65632C2.45933 3.32591 2.41058 2.93591 2.50808 2.56757C2.60558 2.19382 2.84391 1.88507 3.17975 1.69549L4.11683 1.15924C4.72891 0.796324 5.536 1.00757 5.90433 1.63049L5.96933 1.73882C6.28891 2.29132 6.72766 2.29132 7.04725 1.73882L7.10683 1.63591C7.47516 1.00757 8.28225 0.796324 8.89975 1.16466L9.83141 1.70091C10.1618 1.89049 10.4002 2.19924 10.5031 2.57299C10.6006 2.94674 10.5518 3.33132 10.3622 3.66174C10.2052 3.93799 10.1618 4.18716 10.2539 4.34424C10.346 4.50132 10.5789 4.59341 10.8985 4.59341C11.6893 4.59341 12.3339 5.23799 12.3339 6.02882V6.98216C12.3339 7.77299 11.6893 8.41757 10.8985 8.41757C10.5789 8.41757 10.346 8.50966 10.2539 8.66674C10.1618 8.82382 10.1997 9.07299 10.3622 9.34924C10.5518 9.67966 10.606 10.0697 10.5031 10.438C10.4056 10.8117 10.1672 11.1205 9.83141 11.3101L8.89433 11.8463C8.6885 11.9601 8.46641 12.0197 8.23891 12.0197ZM6.50016 10.0155C6.98225 10.0155 7.43183 10.3188 7.74058 10.8551L7.80016 10.958C7.86516 11.0717 7.9735 11.153 8.1035 11.1855C8.2335 11.218 8.3635 11.2017 8.47183 11.1367L9.40891 10.5951C9.54975 10.5138 9.65808 10.3784 9.70141 10.2159C9.74475 10.0534 9.72308 9.88549 9.64183 9.74466C9.33308 9.21382 9.29516 8.66674 9.5335 8.24966C9.77183 7.83257 10.2647 7.59424 10.8822 7.59424C11.2289 7.59424 11.5052 7.31799 11.5052 6.97132V6.01799C11.5052 5.67674 11.2289 5.39507 10.8822 5.39507C10.2647 5.39507 9.77183 5.15674 9.5335 4.73966C9.29516 4.32257 9.33308 3.77549 9.64183 3.24466C9.72308 3.10382 9.74475 2.93591 9.70141 2.77341C9.65808 2.61091 9.55516 2.48091 9.41433 2.39424L8.47725 1.85799C8.24433 1.71716 7.93558 1.79841 7.79475 2.03674L7.73516 2.13966C7.42641 2.67591 6.97683 2.97924 6.49475 2.97924C6.01266 2.97924 5.56308 2.67591 5.25433 2.13966L5.19475 2.03132C5.05933 1.80382 4.756 1.72257 4.52308 1.85799L3.586 2.39966C3.44516 2.48091 3.33683 2.61632 3.2935 2.77882C3.25016 2.94132 3.27183 3.10924 3.35308 3.25007C3.66183 3.78091 3.69975 4.32799 3.46141 4.74507C3.22308 5.16216 2.73016 5.40049 2.11266 5.40049C1.766 5.40049 1.48975 5.67674 1.48975 6.02341V6.97674C1.48975 7.31799 1.766 7.59966 2.11266 7.59966C2.73016 7.59966 3.22308 7.83799 3.46141 8.25507C3.69975 8.67216 3.66183 9.21924 3.35308 9.75007C3.27183 9.89091 3.25016 10.0588 3.2935 10.2213C3.33683 10.3838 3.43975 10.5138 3.58058 10.6005L4.51766 11.1367C4.63141 11.2072 4.76683 11.2234 4.89141 11.1909C5.02141 11.1584 5.12975 11.0717 5.20016 10.958L5.25975 10.8551C5.5685 10.3242 6.01808 10.0155 6.50016 10.0155Z\" fill=\"white\"/>\r\n                  </svg>\r\n              </Button>\r\n            </Dropdown>\r\n            <Button className=\"CSVButton\">Download CSV</Button>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"summarySection\">\r\n          <Col span={22} >\r\n            <p className=\"summary\">Summary</p>\r\n            </Col>\r\n            <Col span={2}>\r\n              <div className=\"similarity  p-2 m-2\" style={{background:'#262730', borderRadius:5, textAlign:'center'}}>{+this.state.selectedTopic+1}/{generated_number_groups}</div>\r\n            </Col>\r\n            <p className=\"summaryParagraph setScroll\">{summaries[this.state.selectedTopic]}</p>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col span={12} className=\"topicCard\">\r\n            <p className=\"topics\">Topics</p>\r\n            {/* <img src={word_cloud_image} alt=\"wordcloud\"/> */}\r\n            {/* <p>{topics[this.state.selectedTopic]}</p> */}\r\n            {/* <TagCloud\r\n              minSize={12}\r\n              maxSize={35}\r\n              tags={data}\r\n              onClick={(tag:any) => alert(`'${tag.value}' was selected!`)}\r\n            /> */}\r\n            <Image src={`data:image/jpg;base64,${topics[this.state.selectedTopic]}`} alt=\"wordcloud\"/>\r\n          </Col>\r\n          <Col   offset={1} span={11} className=\"topicCard\">\r\n            <p className=\"similerText\">Similer Text</p>\r\n            <ul className=\"setScroll\" >\r\n              {\r\n                text_groups[this.state.selectedTopic].map((item:any)=>{\r\n                  return(\r\n<li className=\"similerTextParagraph\">{item}</li>\r\n                  )\r\n                })\r\n              }\r\n              \r\n   \r\n              </ul>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1 mb-1 p-5 d-flex justify-content-center\">\r\n          <Button  className={this.state.selectedTopic>0?\"NextButton\":\"previousButton\"} onClick={this.onPreviousClick}>Previous</Button>\r\n          <Dropdown  className=\"customDropdown\"  menu={{\r\n            items:selectedTopicsOptions,\r\n            onClick: this.handleMenuClick,\r\n            }}>\r\n              <Button className=\"dropdownButton\" >\r\n                <Space>\r\n                  {`${+this.state.selectedTopic+1}/${generated_number_groups}`}\r\n                  <DownOutlined />\r\n                </Space>\r\n              </Button>\r\n          </Dropdown >\r\n          <Button  className={(this.state.selectedTopic<generated_number_groups-1)?\"NextButton\":\"previousButton\"} onClick={()=>this.onNextClick(generated_number_groups)}>Next</Button>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  private handleMenuClick = (e:any): void => {\r\n    this.setState({selectedTopic:e.key})\r\n  }\r\n  private onPreviousClick = (): void => {\r\n    if(this.state.selectedTopic>0){\r\n      this.setState((prev:any)=>({selectedTopic:prev.selectedTopic-1}))\r\n    }\r\n  }\r\n  private onNextClick = (end:number): void => {\r\n    if(this.state.selectedTopic<end-1){\r\n      this.setState((prev:any)=>({selectedTopic:prev.selectedTopic+1}))\r\n    }\r\n  }\r\n  private onModelChange = (e:any): void => {\r\n    this.setState({model:e.key})\r\n    Streamlit.setComponentValue({\r\n      model:e.key,\r\n      temp:this.state.temp,\r\n      score:this.state.score,\r\n    })\r\n  }\r\n  private onTempChange = (val:number): void => {\r\n    this.setState({temp:val})\r\n    Streamlit.setComponentValue({\r\n      model:this.state.model,\r\n      temp:val,\r\n      score:this.state.score,\r\n    })\r\n  }\r\n  private onScoreChange = (val:number): void => {\r\n    this.setState({score:val})\r\n    Streamlit.setComponentValue({\r\n      model:this.state.model,\r\n      temp:this.state.temp,\r\n      score:val,\r\n    })\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(OnDisplayData)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport OnDisplayData from \"./OnDisplayData\"\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n    <OnDisplayData/>\r\n    </div>\r\n      \r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}