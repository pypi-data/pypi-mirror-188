r"""通用唯一识别码 - uuid.py

此模块提供不可变 〇唯一码 类和 唯一码1()、唯一码3()、唯一码4()、唯一码5() 函数，
用于生成 RFC 4122 所规定的第 1、3、4、5 版 通用唯一识别码.

如果只想要一个唯一 ID, 你或许应该调用 唯一码1() 或 唯一码4().
注意: 唯一码1() 生成的唯一码包含计算机的网络 MAC 地址. 唯一码4() 生成随机的唯一码.

典型用法:

    >>> 导入 唯一码

    # 基于主机 ID 和当前时间生成一个唯一码
    >>> 唯一码.唯一码1()    
    UUID('a8098c1a-f86e-11da-bd1a-00112444be1e')

    # 使用一个命名空间唯一码和一个名称的 MD5 哈希值生成一个唯一码
    >>> 唯一码.唯一码3(唯一码.命名空间_DNS, 'grasspy.cn')
    UUID('6557f266-d6a5-3682-a132-5fcfaab80666')

    # 生成随机的唯一码
    >>> 唯一码.唯一码4()    
    UUID('16fd2706-8baf-433b-82eb-8c7fada847da')

    # 使用一个命名空间唯一码和一个名称的 SHA-1 哈希值生成一个唯一码
    >>> 唯一码.唯一码5(唯一码.命名空间_DNS, 'grasspy.cn')
    UUID('fd1c3f28-c526-527d-81a3-c763e13d2508')

    # 从十六进制数字串 (忽略括号和短划线) 生成一个唯一码
    >>> x = 唯一码.〇唯一码('{00010203-0405-0607-0809-0a0b0c0d0e0f}')

    # 将唯一码转换为标准形式的十六进制数字串
    >>> 串(x)
    '00010203-0405-0607-0809-0a0b0c0d0e0f'

    # 获取唯一码的 16 个原始字节
    >>> x.字节串
    b'\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f'

    # 从一个 16 字节串生成一个唯一码
    >>> 唯一码.〇唯一码(字节串=x.字节串)
    UUID('00010203-0405-0607-0809-0a0b0c0d0e0f')
"""

导入 uuid
从 uuid 导入 UUID

类 〇唯一码(UUID):
    套路 __init__(分身, 十六进制串=空, 字节串=空, 小端字节串=空, 整数元组=空,
                整数128=空, 版本=空, *, 是安全=空):
        super().__init__(hex=十六进制串, bytes=字节串, bytes_le=小端字节串,
                        fields=整数元组, int=整数128, version=版本, is_safe=是安全)

    套路 __repr__(self):
        return '%s(%r)' % ('UUID', str(self))

    @property
    套路 字节串(分身):
        返回 分身.bytes
    
    @property
    套路 小端字节串(分身):
        返回 分身.bytes_le
    
    @property
    套路 整数元组(分身):
        返回 分身.fields
    
    @property
    套路 十六进制串(分身):
        返回 分身.hex
    
    @property
    套路 节点(分身):
        返回 分身.node


套路 唯一码1(节点=空, 时钟序列=空):
    """依据主机 ID, 序列号和当前时间生成一个唯一码. 

    节点 默认为主机硬件地址. 时钟序列 默认值为随机的 14 位序列号.
    """
    返回 uuid.uuid1(node=节点, clock_seq=时钟序列)

套路 唯一码3(命名空间, 名称):
    """使用一个命名空间唯一码和一个名称的 MD5 哈希值生成一个唯一码."""
    返回 uuid.uuid3(命名空间, 名称)

套路 唯一码4():
    """生成一个随机的唯一码."""
    返回 uuid.uuid4()

套路 唯一码5(命名空间, 名称):
    """使用一个命名空间唯一码和一个名称的 SHA-1 哈希值生成一个唯一码."""
    返回 uuid.uuid5(命名空间, 名称)

套路 获取MAC():
    "获取硬件地址"
    返回 十六进制(uuid.getnode())


命名空间_DNS = UUID('6ba7b810-9dad-11d1-80b4-00c04fd430c8')
命名空间_URL = UUID('6ba7b811-9dad-11d1-80b4-00c04fd430c8')
命名空间_OID = UUID('6ba7b812-9dad-11d1-80b4-00c04fd430c8')
命名空间_X500 = UUID('6ba7b814-9dad-11d1-80b4-00c04fd430c8')