[tool.poetry]
name = "aliby"
version = "0.1.54"
description = "Process and analyse live-cell imaging data"
authors = ["Alan Munoz <alan.munoz@ed.ac.uk>"]
packages = [
    { include = "aliby", from="src" },
    { include = "extraction", from="src" },
    { include = "agora", from="src" },
    { include = "postprocessor", from="src" },
    { include = "logfile_parser", from="src" },
]
readme = "README.md"

[tool.poetry.scripts]
aliby-run = "aliby.bin.run:run"

[build-system]
requires = ["setuptools", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.8, <3.11"
PyYAML = "^6.0"
flatten-dict = "^0.4.2"
gaussianprocessderivatives = "^0.1.5"
h5py = "2.10" # File I/O
numpy = ">=1.21.6"
opencv-python = "4.1.2.30"
p-tqdm = "^1.3.3"
pandas = ">=1.3.3"
py-find-1st = "^1.1.5" # Fast indexing
scikit-learn = ">=1.0.2" # Used for an extraction metric
scipy = ">=1.7.3"

# Pipeline + I/O
aliby-baby = "^0.1.15"
dask = "^2021.12.0"
imageio = "2.8.0" # For image-visualisation utilities
requests-toolbelt = "^0.9.1"
scikit-image = ">=0.18.1"
tqdm = "^4.62.3" # progress bars
xmltodict = "^0.13.0" # read ome-tiff metadata

# Postprocessing
leidenalg = "^0.8.8"
more-itertools = "^8.12.0"
pathos = "^0.2.8" # Lambda-friendly multithreading
pycatch22 = "^0.4.2"

# Networking
omero-py = { version = ">=5.6.2", optional = true } # contact omero server
zeroc-ice = { version="3.6.5", optional = true } # networking interface, slow to build
GitPython = "^3.1.27"
Bottleneck = "^1.3.5"

[tool.poetry.extras]
omero = [ "omero-py" ]
network = [ "omero-py", "zeroc-ice" ]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^22.6.0"
mypy = "^0.930"
numpydoc = "^1.3.1"
isort = "^5.10.1"
jupyter = "^1.0.0"
flake8 = "^4.0.1"
pyright = "^1.1.258"
pre-commit = "^2.20.0"
seaborn = "^0.11.2"
debugpy = "^1.6.3"
coverage = "^7.0.4"

# [tool.poetry.group.gui.dependencies]
# napari = ">=0.4.16"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^5.2.0"
sphinx-rtd-theme = "^1.0.0"
sphinx-autodoc-typehints = "^1.19.2"
myst-parser = "^0.18.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^6.2.5"


[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79
include_trailing_comma = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
