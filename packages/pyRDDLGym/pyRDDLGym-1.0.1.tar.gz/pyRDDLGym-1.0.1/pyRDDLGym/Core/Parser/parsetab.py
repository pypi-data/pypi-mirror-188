
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIFleftASSIGN_EQUALleftEXISTSleftFORALLleftAGG_OPERARGMAXARGMINleftEQUIVleftIMPLYleftORleftANDAMPERSANDleftNOTleftCOMP_EQUALNEQLESSLESSEQGREATERGREATEREQleftPLUSMINUSleftTIMESDIVrightUMINUSACTION ACTION_PRECONDITIONS AMPERSAND AND ARGMAX ARGMIN ASSIGN_EQUAL BERNOULLI BETA BINOMIAL BOOL CASE CAUCHY CDFS CHISQUARE COLON COLUMN COMMA COMP_EQUAL CPFS DEFAULT DERIVED_FLUENT DET DIRAC_DELTA DIRICHLET DISCOUNT DISCRETE DIV DOLLAR_SIGN DOMAIN DOT DOUBLE ELSE ENUM_VAL EQUIV EXISTS EXPONENTIAL FALSE FORALL GAMMA GEOMETRIC GOMPERTZ GREATER GREATEREQ GUMBEL HORIZON IDENT IF IMPLY INIT_STATE INSTANCE INT INTEGER INTERMEDIATE INVERSE KRON_DELTA LAPLACE LBRACK LCURLY LESS LESSEQ LEVEL LPAREN MAX_NONDEF_ACTIONS MINUS MULTINOMIAL MULTIVARIATENORMAL MULTIVARIATESTUDENT NEGATIVEBINOMIAL NEG_INF NEQ NON_FLUENT NON_FLUENTS NORMAL NOT OBJECT OBJECTS OBSERVATION OR OTHERWISE PARETO PLUS POISSON POS_INF PVARIABLES QUESTION RBRACK RCURLY REAL REQUIREMENTS REWARD ROW RPAREN SEMI STATE STATE_ACTION_CONSTRAINTS STATE_INVARIANTS STUDENT SWITCH TERMINAL TERMINATE_WHEN TERMINATION THEN TIMES TRUE TYPES UNDERSCORE UNIFORM UNNORMDISCRETE VAR WEIBULLrddl : rddl_blockrddl_block : rddl_block domain_block\n                      | rddl_block instance_block\n                      | rddl_block nonfluent_block\n                      | emptydomain_block : DOMAIN IDENT LCURLY req_section domain_list RCURLYreq_section : REQUIREMENTS ASSIGN_EQUAL LCURLY string_list RCURLY SEMI\n                       | REQUIREMENTS LCURLY string_list RCURLY SEMI\n                       | emptydomain_list : domain_list type_section\n                       | domain_list pvar_section\n                       | domain_list cpf_section\n                       | domain_list reward_section\n                       | domain_list termination_section\n                       | domain_list action_precond_section\n                       | domain_list state_action_constraint_section\n                       | domain_list state_invariant_section\n                       | emptytype_section : TYPES LCURLY type_list RCURLY SEMItype_list : type_list type_def\n                     | emptytype_def : IDENT COLON OBJECT SEMI\n                    | IDENT COLON LCURLY enum_list RCURLY SEMIenum_list : enum_list COMMA ENUM_VAL\n                     | ENUM_VAL\n                     | emptypvar_section : PVARIABLES LCURLY pvar_list RCURLY SEMIpvar_list : pvar_list pvar_def\n                     | emptypvar_def : nonfluent_def\n                    | statefluent_def\n                    | actionfluent_def\n                    | intermfluent_def\n                    | derivedfluent_def\n                    | observfluent_defnonfluent_def : IDENT param_list LCURLY NON_FLUENT COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMIstatefluent_def : IDENT param_list LCURLY STATE COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMIactionfluent_def : IDENT param_list LCURLY ACTION COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMIintermfluent_def : IDENT param_list LCURLY INTERMEDIATE COMMA type_spec COMMA LEVEL ASSIGN_EQUAL range_const RCURLY SEMI\n                            | IDENT param_list LCURLY INTERMEDIATE COMMA type_spec RCURLY SEMIderivedfluent_def : IDENT param_list LCURLY DERIVED_FLUENT COMMA type_spec COMMA LEVEL ASSIGN_EQUAL range_const RCURLY SEMI\n                             | IDENT param_list LCURLY DERIVED_FLUENT COMMA type_spec RCURLY SEMIobservfluent_def : IDENT param_list LCURLY OBSERVATION COMMA type_spec RCURLY SEMIcpf_section : cpf_header LCURLY cpf_list RCURLY SEMIcpf_header : CPFS\n                      | CDFScpf_list : cpf_list cpf_def\n                    | emptycpf_def : pvar_expr ASSIGN_EQUAL expr SEMI\n                   | pvar_expr ASSIGN_EQUAL randomvector_expr SEMIreward_section : REWARD ASSIGN_EQUAL expr SEMItermination_section  : TERMINATION LCURLY termination_list RCURLY SEMI\n                                |  TERMINATION LCURLY RCURLY SEMItermination_list : termination_list termination_cond_def\n                            | termination_cond_deftermination_cond_def : expr SEMIaction_precond_section : ACTION_PRECONDITIONS LCURLY action_precond_list RCURLY SEMI\n                                  | ACTION_PRECONDITIONS LCURLY RCURLY SEMIaction_precond_list : action_precond_list action_precond_def\n                               | action_precond_defaction_precond_def : expr SEMIstate_action_constraint_section : STATE_ACTION_CONSTRAINTS LCURLY state_cons_list RCURLY SEMI\n                                           | STATE_ACTION_CONSTRAINTS LCURLY RCURLY SEMIstate_cons_list : state_cons_list state_cons_def\n                           | state_cons_defstate_cons_def : expr SEMIstate_invariant_section : STATE_INVARIANTS LCURLY state_invariant_list RCURLY SEMI\n                                   | STATE_INVARIANTS LCURLY RCURLY SEMIstate_invariant_list : state_invariant_list state_invariant_def\n                                | state_invariant_defstate_invariant_def : expr SEMIterm_list : term_list COMMA term\n                     | term\n                     | emptyterm : VAR\n                | ENUM_VAL\n                | pvar_expr\n                | argmaxmin_exprexpr : pvar_expr\n                | group_expr\n                | function_expr\n                | relational_expr\n                | boolean_expr\n                | quantifier_expr\n                | numerical_expr\n                | aggregation_expr\n                | argmaxmin_expr\n                | matrix_expr\n                | control_expr\n                | randomvar_expr\n                | randomvar_from_pvar_exprpvar_expr : IDENT LPAREN term_list RPAREN\n                     | IDENT\n                     | ENUM_VAL\n                     | VARgroup_expr : LBRACK expr RBRACK\n                      | LPAREN expr RPARENfunction_expr : IDENT LBRACK expr_list RBRACKrelational_expr : expr COMP_EQUAL expr\n                           | expr NEQ expr\n                           | expr GREATER expr\n                           | expr GREATEREQ expr\n                           | expr LESS expr\n                           | expr LESSEQ exprboolean_expr : expr AND expr\n                        | expr AMPERSAND expr\n                        | expr OR expr\n                        | expr IMPLY expr\n                        | expr EQUIV expr\n                        | NOT expr %prec UMINUS\n                        | bool_typequantifier_expr : FORALL UNDERSCORE LCURLY typed_var_list RCURLY expr %prec FORALL\n                           | EXISTS UNDERSCORE LCURLY typed_var_list RCURLY expr %prec EXISTSnumerical_expr : expr PLUS expr\n                          | expr MINUS expr\n                          | expr TIMES expr\n                          | expr DIV expr\n                          | MINUS expr %prec UMINUS\n                          | PLUS expr %prec UMINUS\n                          | INTEGER\n                          | DOUBLEaggregation_expr : IDENT UNDERSCORE LCURLY typed_var_list RCURLY expr %prec AGG_OPERargmaxmin_expr : ARGMAX UNDERSCORE LCURLY typed_var_list RCURLY expr %prec ARGMAX\n                          | ARGMIN UNDERSCORE LCURLY typed_var_list RCURLY expr %prec ARGMINcontrol_expr : IF LPAREN expr RPAREN THEN expr ELSE expr %prec IF\n                        | SWITCH LPAREN expr RPAREN LCURLY case_list RCURLYrandomvar_expr : BERNOULLI LPAREN expr RPAREN\n                          | DIRAC_DELTA LPAREN expr RPAREN\n                          | KRON_DELTA LPAREN expr RPAREN\n                          | UNIFORM LPAREN expr COMMA expr RPAREN\n                          | NORMAL LPAREN expr COMMA expr RPAREN\n                          | EXPONENTIAL LPAREN expr RPAREN\n                          | DISCRETE LPAREN IDENT COMMA lconst_case_list RPAREN\n                          | UNNORMDISCRETE LPAREN IDENT COMMA lconst_case_list RPAREN\n                          | DIRICHLET LPAREN IDENT COMMA expr RPAREN\n                          | POISSON LPAREN expr RPAREN\n                          | WEIBULL LPAREN expr COMMA expr RPAREN\n                          | GAMMA   LPAREN expr COMMA expr RPAREN\n                          | BINOMIAL   LPAREN expr COMMA expr RPAREN\n                          | NEGATIVEBINOMIAL   LPAREN expr COMMA expr RPAREN\n                          | BETA   LPAREN expr COMMA expr RPAREN\n                          | GEOMETRIC LPAREN expr RPAREN\n                          | PARETO   LPAREN expr COMMA expr RPAREN\n                          | STUDENT LPAREN expr RPAREN\n                          | GUMBEL   LPAREN expr COMMA expr RPAREN\n                          | LAPLACE LPAREN expr COMMA expr RPAREN\n                          | CAUCHY LPAREN expr COMMA expr RPAREN\n                          | GOMPERTZ LPAREN expr COMMA expr RPAREN\n                          | CHISQUARE LPAREN expr RPARENrandomvar_from_pvar_expr : DISCRETE UNDERSCORE LCURLY typed_var_list RCURLY LPAREN expr RPAREN\n                                    | UNNORMDISCRETE UNDERSCORE LCURLY typed_var_list RCURLY LPAREN expr RPARENrandomvector_expr : MULTIVARIATENORMAL LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN\n                             | MULTIVARIATESTUDENT LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN\n                             | DIRICHLET LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr RPAREN\n                             | MULTINOMIAL LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr RPARENrandomvector_pvar_expr : IDENT LPAREN randomvector_term_list RPAREN\n                                  | IDENTrandomvector_term_list : randomvector_term_list COMMA randomvector_term\n                                  | randomvector_term\n                                  | emptyrandomvector_term : VAR\n                             | ENUM_VAL\n                             | UNDERSCOREmatrix_expr : DET UNDERSCORE LCURLY VAR COMMA VAR COLON IDENT RCURLY expr %prec AGG_OPER\n                       | INVERSE LBRACK ROW ASSIGN_EQUAL VAR COMMA COLUMN ASSIGN_EQUAL VAR RBRACK LBRACK expr RBRACKtyped_var_list : typed_var_list COMMA typed_var\n                          | typed_vartyped_var : VAR COLON IDENTexpr_list : expr_list COMMA expr\n                     | exprcase_list : case_list COMMA case_def\n                     | case_defcase_def : CASE term COLON expr\n                    | DEFAULT COLON exprlconst_case_list : lconst COLON expr\n                            | lconst COLON OTHERWISE\n                            | lconst_case_list COMMA lconst COLON exprlconst : IDENT\n                  | ENUM_VALparam_list : COLON\n                      | LPAREN param_list2 RPAREN COLONparam_list2 : type_spec\n                       | param_list2 COMMA type_spectype_spec : IDENT\n                     | INT\n                     | REAL\n                     | BOOLrange_const : bool_type\n                       | double_type\n                       | int_type\n                       | ENUM_VAL\n                       | IDENTbool_type : TRUE\n                     | FALSEdouble_type : DOUBLE\n                       | MINUS DOUBLE\n                       | POS_INF\n                       | NEG_INFint_type : INTEGER\n                    | MINUS INTEGERpos_int_type_or_pos_inf : INTEGER\n                                   | POS_INFinstance_block : INSTANCE IDENT LCURLY instance_list RCURLYinstance_list : instance_list domain_section\n                         | instance_list nonfluents_section\n                         | instance_list objects_section\n                         | instance_list init_state_section\n                         | instance_list max_nondef_actions_section\n                         | instance_list horizon_spec_section\n                         | instance_list discount_section\n                         | emptydomain_section : DOMAIN ASSIGN_EQUAL IDENT SEMInonfluents_section : NON_FLUENTS ASSIGN_EQUAL IDENT SEMIobjects_section : OBJECTS LCURLY objects_list RCURLY SEMIinit_state_section : INIT_STATE LCURLY pvar_inst_list RCURLY SEMImax_nondef_actions_section : MAX_NONDEF_ACTIONS ASSIGN_EQUAL pos_int_type_or_pos_inf SEMIhorizon_spec_section : HORIZON ASSIGN_EQUAL pos_int_type_or_pos_inf SEMI\n                                | HORIZON ASSIGN_EQUAL TERMINATE_WHEN LPAREN expr RPARENdiscount_section : DISCOUNT ASSIGN_EQUAL DOUBLE SEMInonfluent_block : NON_FLUENTS IDENT LCURLY nonfluent_list RCURLYnonfluent_list : nonfluent_list domain_section\n                          | nonfluent_list objects_section\n                          | nonfluent_list init_non_fluent_section\n                          | emptyinit_non_fluent_section : NON_FLUENTS LCURLY pvar_inst_list RCURLY SEMIobjects_list : objects_list objects_def\n                        | objects_def\n                        | emptyobjects_def : IDENT COLON LCURLY object_const_list RCURLY SEMIobject_const_list : object_const_list COMMA IDENT\n                             | IDENTpvar_inst_list : pvar_inst_list pvar_inst_def\n                          | pvar_inst_defpvar_inst_def : IDENT LPAREN lconst_list RPAREN SEMI\n                         | IDENT SEMI\n                         | NOT IDENT LPAREN lconst_list RPAREN SEMI\n                         | NOT IDENT SEMI\n                         | IDENT LPAREN lconst_list RPAREN ASSIGN_EQUAL range_const SEMI\n                         | IDENT ASSIGN_EQUAL range_const SEMIlconst_list : lconst_list COMMA lconst\n                       | lconststring_list : string_list COMMA IDENT\n                       | IDENT\n                       | emptyempty :'
    
_lr_action_items = {'DOMAIN':([0,2,3,4,5,6,14,15,19,20,21,22,27,28,29,30,31,32,33,34,43,44,45,46,47,189,190,200,201,203,295,297,316,397,],[-245,7,-5,-2,-3,-4,-245,-245,35,-211,35,-224,-203,-204,-205,-206,-207,-208,-209,-210,-220,-221,-222,-223,-6,-212,-213,-216,-217,-219,-214,-215,-225,-218,]),'INSTANCE':([0,2,3,4,5,6,27,43,47,],[-245,8,-5,-2,-3,-4,-203,-220,-6,]),'NON_FLUENTS':([0,2,3,4,5,6,14,15,19,20,21,22,27,28,29,30,31,32,33,34,43,44,45,46,47,189,190,200,201,203,295,297,316,397,],[-245,9,-5,-2,-3,-4,-245,-245,36,-211,42,-224,-203,-204,-205,-206,-207,-208,-209,-210,-220,-221,-222,-223,-6,-212,-213,-216,-217,-219,-214,-215,-225,-218,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rddl':([0,],[1,]),'rddl_block':([0,],[2,]),'empty':([0,13,14,15,16,26,66,72,78,79,80,237,399,473,474,475,476,635,],[3,18,20,22,24,69,69,93,107,109,111,342,462,524,524,524,524,524,]),'domain_block':([2,],[4,]),'instance_block':([2,],[5,]),'nonfluent_block':([2,],[6,]),'req_section':([13,],[16,]),'instance_list':([14,],[19,]),'nonfluent_list':([15,],[21,]),'domain_list':([16,],[23,]),'domain_section':([19,21,],[28,44,]),'nonfluents_section':([19,],[29,]),'objects_section':([19,21,],[30,45,]),'init_state_section':([19,],[31,]),'max_nondef_actions_section':([19,],[32,]),'horizon_spec_section':([19,],[33,]),'discount_section':([19,],[34,]),'init_non_fluent_section':([21,],[46,]),'type_section':([23,],[48,]),'pvar_section':([23,],[49,]),'cpf_section':([23,],[50,]),'reward_section':([23,],[51,]),'termination_section':([23,],[52,]),'action_precond_section':([23,],[53,]),'state_action_constraint_section':([23,],[54,]),'state_invariant_section':([23,],[55,]),'cpf_header':([23,],[58,]),'string_list':([26,66,],[67,86,]),'objects_list':([72,],[91,]),'objects_def':([72,91,],[92,192,]),'pvar_inst_list':([73,77,],[95,105,]),'pvar_inst_def':([73,77,95,105,],[96,96,195,195,]),'pos_int_type_or_pos_inf':([74,75,],[99,102,]),'type_list':([78,],[106,]),'pvar_list':([79,],[108,]),'cpf_list':([80,],[110,]),'expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[112,173,177,181,185,240,241,242,245,246,173,177,181,185,315,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,348,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,407,478,490,491,497,498,499,500,501,502,503,504,505,506,507,531,534,535,536,537,540,586,588,589,605,608,627,628,639,660,]),'pvar_expr':([81,82,83,84,85,110,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,414,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,543,549,550,552,580,584,607,609,625,650,],[113,113,113,113,113,219,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,345,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,345,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,345,113,113,113,113,113,113,113,113,113,]),'group_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'function_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'relational_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'boolean_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'quantifier_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'numerical_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'aggregation_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'argmaxmin_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,414,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,543,549,550,552,580,584,607,609,625,650,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,346,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,346,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,346,121,121,121,121,121,121,121,121,121,]),'matrix_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'control_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'randomvar_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'randomvar_from_pvar_expr':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,479,482,483,484,485,488,549,550,552,580,584,607,609,625,650,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'bool_type':([81,82,83,84,85,127,130,131,135,136,170,174,178,182,198,202,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,251,252,253,254,255,256,257,258,264,265,266,267,268,269,270,271,272,273,274,275,276,277,324,416,431,432,438,440,441,442,443,444,446,448,449,450,451,456,479,482,483,484,485,488,549,550,552,580,584,607,609,625,629,630,631,632,633,650,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,304,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,304,132,132,132,132,132,132,132,132,132,132,132,132,132,132,304,304,304,304,304,132,]),'termination_list':([82,],[170,]),'termination_cond_def':([82,170,],[172,279,]),'action_precond_list':([83,],[174,]),'action_precond_def':([83,174,],[176,283,]),'state_cons_list':([84,],[178,]),'state_cons_def':([84,178,],[180,287,]),'state_invariant_list':([85,],[182,]),'state_invariant_def':([85,182,],[184,291,]),'type_def':([106,],[206,]),'pvar_def':([108,],[209,]),'nonfluent_def':([108,],[210,]),'statefluent_def':([108,],[211,]),'actionfluent_def':([108,],[212,]),'intermfluent_def':([108,],[213,]),'derivedfluent_def':([108,],[214,]),'observfluent_def':([108,],[215,]),'cpf_def':([110,],[218,]),'lconst_list':([196,313,],[299,396,]),'lconst':([196,313,392,434,436,547,],[300,300,457,493,493,585,]),'range_const':([198,456,629,630,631,632,633,],[303,510,641,642,643,644,645,]),'double_type':([198,456,629,630,631,632,633,],[305,305,305,305,305,305,305,]),'int_type':([198,456,629,630,631,632,633,],[306,306,306,306,306,306,306,]),'param_list':([216,],[320,]),'term_list':([237,],[340,]),'term':([237,414,543,],[341,477,583,]),'expr_list':([238,],[347,]),'object_const_list':([296,],[390,]),'param_list2':([322,],[401,]),'type_spec':([322,470,514,515,516,517,518,519,],[402,521,567,568,569,570,571,572,]),'randomvector_expr':([324,],[408,]),'typed_var_list':([349,352,353,354,355,367,369,],[417,420,421,422,423,435,437,]),'typed_var':([349,352,353,354,355,367,369,480,],[418,418,418,418,418,418,418,532,]),'enum_list':([399,],[460,]),'lconst_case_list':([434,436,],[492,495,]),'randomvector_term_list':([473,474,475,476,635,],[522,528,529,530,647,]),'randomvector_term':([473,474,475,476,574,635,],[523,523,523,523,599,523,]),'case_list':([489,],[541,]),'case_def':([489,582,],[542,606,]),'randomvector_pvar_expr':([598,600,601,602,634,636,638,658,],[620,622,623,624,646,648,649,666,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> rddl","S'",1,None,None,None),
  ('rddl -> rddl_block','rddl',1,'p_rddl','parser.py',270),
  ('rddl_block -> rddl_block domain_block','rddl_block',2,'p_rddl_block','parser.py',274),
  ('rddl_block -> rddl_block instance_block','rddl_block',2,'p_rddl_block','parser.py',275),
  ('rddl_block -> rddl_block nonfluent_block','rddl_block',2,'p_rddl_block','parser.py',276),
  ('rddl_block -> empty','rddl_block',1,'p_rddl_block','parser.py',277),
  ('domain_block -> DOMAIN IDENT LCURLY req_section domain_list RCURLY','domain_block',6,'p_domain_block','parser.py',286),
  ('req_section -> REQUIREMENTS ASSIGN_EQUAL LCURLY string_list RCURLY SEMI','req_section',6,'p_req_section','parser.py',291),
  ('req_section -> REQUIREMENTS LCURLY string_list RCURLY SEMI','req_section',5,'p_req_section','parser.py',292),
  ('req_section -> empty','req_section',1,'p_req_section','parser.py',293),
  ('domain_list -> domain_list type_section','domain_list',2,'p_domain_list','parser.py',301),
  ('domain_list -> domain_list pvar_section','domain_list',2,'p_domain_list','parser.py',302),
  ('domain_list -> domain_list cpf_section','domain_list',2,'p_domain_list','parser.py',303),
  ('domain_list -> domain_list reward_section','domain_list',2,'p_domain_list','parser.py',304),
  ('domain_list -> domain_list termination_section','domain_list',2,'p_domain_list','parser.py',305),
  ('domain_list -> domain_list action_precond_section','domain_list',2,'p_domain_list','parser.py',306),
  ('domain_list -> domain_list state_action_constraint_section','domain_list',2,'p_domain_list','parser.py',307),
  ('domain_list -> domain_list state_invariant_section','domain_list',2,'p_domain_list','parser.py',308),
  ('domain_list -> empty','domain_list',1,'p_domain_list','parser.py',309),
  ('type_section -> TYPES LCURLY type_list RCURLY SEMI','type_section',5,'p_type_section','parser.py',318),
  ('type_list -> type_list type_def','type_list',2,'p_type_list','parser.py',323),
  ('type_list -> empty','type_list',1,'p_type_list','parser.py',324),
  ('type_def -> IDENT COLON OBJECT SEMI','type_def',4,'p_type_def','parser.py',332),
  ('type_def -> IDENT COLON LCURLY enum_list RCURLY SEMI','type_def',6,'p_type_def','parser.py',333),
  ('enum_list -> enum_list COMMA ENUM_VAL','enum_list',3,'p_enum_list','parser.py',340),
  ('enum_list -> ENUM_VAL','enum_list',1,'p_enum_list','parser.py',341),
  ('enum_list -> empty','enum_list',1,'p_enum_list','parser.py',342),
  ('pvar_section -> PVARIABLES LCURLY pvar_list RCURLY SEMI','pvar_section',5,'p_pvar_section','parser.py',352),
  ('pvar_list -> pvar_list pvar_def','pvar_list',2,'p_pvar_list','parser.py',357),
  ('pvar_list -> empty','pvar_list',1,'p_pvar_list','parser.py',358),
  ('pvar_def -> nonfluent_def','pvar_def',1,'p_pvar_def','parser.py',366),
  ('pvar_def -> statefluent_def','pvar_def',1,'p_pvar_def','parser.py',367),
  ('pvar_def -> actionfluent_def','pvar_def',1,'p_pvar_def','parser.py',368),
  ('pvar_def -> intermfluent_def','pvar_def',1,'p_pvar_def','parser.py',369),
  ('pvar_def -> derivedfluent_def','pvar_def',1,'p_pvar_def','parser.py',370),
  ('pvar_def -> observfluent_def','pvar_def',1,'p_pvar_def','parser.py',371),
  ('nonfluent_def -> IDENT param_list LCURLY NON_FLUENT COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMI','nonfluent_def',12,'p_nonfluent_def','parser.py',375),
  ('statefluent_def -> IDENT param_list LCURLY STATE COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMI','statefluent_def',12,'p_statefluent_def','parser.py',384),
  ('actionfluent_def -> IDENT param_list LCURLY ACTION COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMI','actionfluent_def',12,'p_actionfluent_def','parser.py',391),
  ('intermfluent_def -> IDENT param_list LCURLY INTERMEDIATE COMMA type_spec COMMA LEVEL ASSIGN_EQUAL range_const RCURLY SEMI','intermfluent_def',12,'p_intermfluent_def','parser.py',398),
  ('intermfluent_def -> IDENT param_list LCURLY INTERMEDIATE COMMA type_spec RCURLY SEMI','intermfluent_def',8,'p_intermfluent_def','parser.py',399),
  ('derivedfluent_def -> IDENT param_list LCURLY DERIVED_FLUENT COMMA type_spec COMMA LEVEL ASSIGN_EQUAL range_const RCURLY SEMI','derivedfluent_def',12,'p_derivedfluent_def','parser.py',406),
  ('derivedfluent_def -> IDENT param_list LCURLY DERIVED_FLUENT COMMA type_spec RCURLY SEMI','derivedfluent_def',8,'p_derivedfluent_def','parser.py',407),
  ('observfluent_def -> IDENT param_list LCURLY OBSERVATION COMMA type_spec RCURLY SEMI','observfluent_def',8,'p_observfluent_def','parser.py',414),
  ('cpf_section -> cpf_header LCURLY cpf_list RCURLY SEMI','cpf_section',5,'p_cpf_section','parser.py',418),
  ('cpf_header -> CPFS','cpf_header',1,'p_cpf_header','parser.py',424),
  ('cpf_header -> CDFS','cpf_header',1,'p_cpf_header','parser.py',425),
  ('cpf_list -> cpf_list cpf_def','cpf_list',2,'p_cpf_list','parser.py',429),
  ('cpf_list -> empty','cpf_list',1,'p_cpf_list','parser.py',430),
  ('cpf_def -> pvar_expr ASSIGN_EQUAL expr SEMI','cpf_def',4,'p_cpf_def','parser.py',438),
  ('cpf_def -> pvar_expr ASSIGN_EQUAL randomvector_expr SEMI','cpf_def',4,'p_cpf_def','parser.py',439),
  ('reward_section -> REWARD ASSIGN_EQUAL expr SEMI','reward_section',4,'p_reward_section','parser.py',443),
  ('termination_section -> TERMINATION LCURLY termination_list RCURLY SEMI','termination_section',5,'p_termination_section','parser.py',448),
  ('termination_section -> TERMINATION LCURLY RCURLY SEMI','termination_section',4,'p_termination_section','parser.py',449),
  ('termination_list -> termination_list termination_cond_def','termination_list',2,'p_termination_list','parser.py',458),
  ('termination_list -> termination_cond_def','termination_list',1,'p_termination_list','parser.py',459),
  ('termination_cond_def -> expr SEMI','termination_cond_def',2,'p_termination_cond_def','parser.py',467),
  ('action_precond_section -> ACTION_PRECONDITIONS LCURLY action_precond_list RCURLY SEMI','action_precond_section',5,'p_action_precond_section','parser.py',471),
  ('action_precond_section -> ACTION_PRECONDITIONS LCURLY RCURLY SEMI','action_precond_section',4,'p_action_precond_section','parser.py',472),
  ('action_precond_list -> action_precond_list action_precond_def','action_precond_list',2,'p_action_precond_list','parser.py',480),
  ('action_precond_list -> action_precond_def','action_precond_list',1,'p_action_precond_list','parser.py',481),
  ('action_precond_def -> expr SEMI','action_precond_def',2,'p_action_precond_def','parser.py',489),
  ('state_action_constraint_section -> STATE_ACTION_CONSTRAINTS LCURLY state_cons_list RCURLY SEMI','state_action_constraint_section',5,'p_state_action_constraint_section','parser.py',493),
  ('state_action_constraint_section -> STATE_ACTION_CONSTRAINTS LCURLY RCURLY SEMI','state_action_constraint_section',4,'p_state_action_constraint_section','parser.py',494),
  ('state_cons_list -> state_cons_list state_cons_def','state_cons_list',2,'p_state_cons_list','parser.py',502),
  ('state_cons_list -> state_cons_def','state_cons_list',1,'p_state_cons_list','parser.py',503),
  ('state_cons_def -> expr SEMI','state_cons_def',2,'p_state_cons_def','parser.py',511),
  ('state_invariant_section -> STATE_INVARIANTS LCURLY state_invariant_list RCURLY SEMI','state_invariant_section',5,'p_state_invariant_section','parser.py',515),
  ('state_invariant_section -> STATE_INVARIANTS LCURLY RCURLY SEMI','state_invariant_section',4,'p_state_invariant_section','parser.py',516),
  ('state_invariant_list -> state_invariant_list state_invariant_def','state_invariant_list',2,'p_state_invariant_list','parser.py',524),
  ('state_invariant_list -> state_invariant_def','state_invariant_list',1,'p_state_invariant_list','parser.py',525),
  ('state_invariant_def -> expr SEMI','state_invariant_def',2,'p_state_invariant_def','parser.py',533),
  ('term_list -> term_list COMMA term','term_list',3,'p_term_list','parser.py',537),
  ('term_list -> term','term_list',1,'p_term_list','parser.py',538),
  ('term_list -> empty','term_list',1,'p_term_list','parser.py',539),
  ('term -> VAR','term',1,'p_term','parser.py',549),
  ('term -> ENUM_VAL','term',1,'p_term','parser.py',550),
  ('term -> pvar_expr','term',1,'p_term','parser.py',551),
  ('term -> argmaxmin_expr','term',1,'p_term','parser.py',552),
  ('expr -> pvar_expr','expr',1,'p_expr','parser.py',560),
  ('expr -> group_expr','expr',1,'p_expr','parser.py',561),
  ('expr -> function_expr','expr',1,'p_expr','parser.py',562),
  ('expr -> relational_expr','expr',1,'p_expr','parser.py',563),
  ('expr -> boolean_expr','expr',1,'p_expr','parser.py',564),
  ('expr -> quantifier_expr','expr',1,'p_expr','parser.py',565),
  ('expr -> numerical_expr','expr',1,'p_expr','parser.py',566),
  ('expr -> aggregation_expr','expr',1,'p_expr','parser.py',567),
  ('expr -> argmaxmin_expr','expr',1,'p_expr','parser.py',568),
  ('expr -> matrix_expr','expr',1,'p_expr','parser.py',569),
  ('expr -> control_expr','expr',1,'p_expr','parser.py',570),
  ('expr -> randomvar_expr','expr',1,'p_expr','parser.py',571),
  ('expr -> randomvar_from_pvar_expr','expr',1,'p_expr','parser.py',572),
  ('pvar_expr -> IDENT LPAREN term_list RPAREN','pvar_expr',4,'p_pvar_expr','parser.py',577),
  ('pvar_expr -> IDENT','pvar_expr',1,'p_pvar_expr','parser.py',578),
  ('pvar_expr -> ENUM_VAL','pvar_expr',1,'p_pvar_expr','parser.py',579),
  ('pvar_expr -> VAR','pvar_expr',1,'p_pvar_expr','parser.py',580),
  ('group_expr -> LBRACK expr RBRACK','group_expr',3,'p_group_expr','parser.py',588),
  ('group_expr -> LPAREN expr RPAREN','group_expr',3,'p_group_expr','parser.py',589),
  ('function_expr -> IDENT LBRACK expr_list RBRACK','function_expr',4,'p_function_expr','parser.py',593),
  ('relational_expr -> expr COMP_EQUAL expr','relational_expr',3,'p_relational_expr','parser.py',597),
  ('relational_expr -> expr NEQ expr','relational_expr',3,'p_relational_expr','parser.py',598),
  ('relational_expr -> expr GREATER expr','relational_expr',3,'p_relational_expr','parser.py',599),
  ('relational_expr -> expr GREATEREQ expr','relational_expr',3,'p_relational_expr','parser.py',600),
  ('relational_expr -> expr LESS expr','relational_expr',3,'p_relational_expr','parser.py',601),
  ('relational_expr -> expr LESSEQ expr','relational_expr',3,'p_relational_expr','parser.py',602),
  ('boolean_expr -> expr AND expr','boolean_expr',3,'p_boolean_expr','parser.py',606),
  ('boolean_expr -> expr AMPERSAND expr','boolean_expr',3,'p_boolean_expr','parser.py',607),
  ('boolean_expr -> expr OR expr','boolean_expr',3,'p_boolean_expr','parser.py',608),
  ('boolean_expr -> expr IMPLY expr','boolean_expr',3,'p_boolean_expr','parser.py',609),
  ('boolean_expr -> expr EQUIV expr','boolean_expr',3,'p_boolean_expr','parser.py',610),
  ('boolean_expr -> NOT expr','boolean_expr',2,'p_boolean_expr','parser.py',611),
  ('boolean_expr -> bool_type','boolean_expr',1,'p_boolean_expr','parser.py',612),
  ('quantifier_expr -> FORALL UNDERSCORE LCURLY typed_var_list RCURLY expr','quantifier_expr',6,'p_quantifier_expr','parser.py',621),
  ('quantifier_expr -> EXISTS UNDERSCORE LCURLY typed_var_list RCURLY expr','quantifier_expr',6,'p_quantifier_expr','parser.py',622),
  ('numerical_expr -> expr PLUS expr','numerical_expr',3,'p_numerical_expr','parser.py',626),
  ('numerical_expr -> expr MINUS expr','numerical_expr',3,'p_numerical_expr','parser.py',627),
  ('numerical_expr -> expr TIMES expr','numerical_expr',3,'p_numerical_expr','parser.py',628),
  ('numerical_expr -> expr DIV expr','numerical_expr',3,'p_numerical_expr','parser.py',629),
  ('numerical_expr -> MINUS expr','numerical_expr',2,'p_numerical_expr','parser.py',630),
  ('numerical_expr -> PLUS expr','numerical_expr',2,'p_numerical_expr','parser.py',631),
  ('numerical_expr -> INTEGER','numerical_expr',1,'p_numerical_expr','parser.py',632),
  ('numerical_expr -> DOUBLE','numerical_expr',1,'p_numerical_expr','parser.py',633),
  ('aggregation_expr -> IDENT UNDERSCORE LCURLY typed_var_list RCURLY expr','aggregation_expr',6,'p_aggregation_expr','parser.py',642),
  ('argmaxmin_expr -> ARGMAX UNDERSCORE LCURLY typed_var_list RCURLY expr','argmaxmin_expr',6,'p_argmaxmin_expr','parser.py',647),
  ('argmaxmin_expr -> ARGMIN UNDERSCORE LCURLY typed_var_list RCURLY expr','argmaxmin_expr',6,'p_argmaxmin_expr','parser.py',648),
  ('control_expr -> IF LPAREN expr RPAREN THEN expr ELSE expr','control_expr',8,'p_control_expr','parser.py',652),
  ('control_expr -> SWITCH LPAREN expr RPAREN LCURLY case_list RCURLY','control_expr',7,'p_control_expr','parser.py',653),
  ('randomvar_expr -> BERNOULLI LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',663),
  ('randomvar_expr -> DIRAC_DELTA LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',664),
  ('randomvar_expr -> KRON_DELTA LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',665),
  ('randomvar_expr -> UNIFORM LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',666),
  ('randomvar_expr -> NORMAL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',667),
  ('randomvar_expr -> EXPONENTIAL LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',668),
  ('randomvar_expr -> DISCRETE LPAREN IDENT COMMA lconst_case_list RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',669),
  ('randomvar_expr -> UNNORMDISCRETE LPAREN IDENT COMMA lconst_case_list RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',670),
  ('randomvar_expr -> DIRICHLET LPAREN IDENT COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',671),
  ('randomvar_expr -> POISSON LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',672),
  ('randomvar_expr -> WEIBULL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',673),
  ('randomvar_expr -> GAMMA LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',674),
  ('randomvar_expr -> BINOMIAL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',675),
  ('randomvar_expr -> NEGATIVEBINOMIAL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',676),
  ('randomvar_expr -> BETA LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',677),
  ('randomvar_expr -> GEOMETRIC LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',678),
  ('randomvar_expr -> PARETO LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',679),
  ('randomvar_expr -> STUDENT LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',680),
  ('randomvar_expr -> GUMBEL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',681),
  ('randomvar_expr -> LAPLACE LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',682),
  ('randomvar_expr -> CAUCHY LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',683),
  ('randomvar_expr -> GOMPERTZ LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',684),
  ('randomvar_expr -> CHISQUARE LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',685),
  ('randomvar_from_pvar_expr -> DISCRETE UNDERSCORE LCURLY typed_var_list RCURLY LPAREN expr RPAREN','randomvar_from_pvar_expr',8,'p_randomvar_from_pvar_expr','parser.py',696),
  ('randomvar_from_pvar_expr -> UNNORMDISCRETE UNDERSCORE LCURLY typed_var_list RCURLY LPAREN expr RPAREN','randomvar_from_pvar_expr',8,'p_randomvar_from_pvar_expr','parser.py',697),
  ('randomvector_expr -> MULTIVARIATENORMAL LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN','randomvector_expr',9,'p_randomvector_expr','parser.py',702),
  ('randomvector_expr -> MULTIVARIATESTUDENT LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN','randomvector_expr',11,'p_randomvector_expr','parser.py',703),
  ('randomvector_expr -> DIRICHLET LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr RPAREN','randomvector_expr',7,'p_randomvector_expr','parser.py',704),
  ('randomvector_expr -> MULTINOMIAL LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN','randomvector_expr',9,'p_randomvector_expr','parser.py',705),
  ('randomvector_pvar_expr -> IDENT LPAREN randomvector_term_list RPAREN','randomvector_pvar_expr',4,'p_randomvector_pvar_expr','parser.py',715),
  ('randomvector_pvar_expr -> IDENT','randomvector_pvar_expr',1,'p_randomvector_pvar_expr','parser.py',716),
  ('randomvector_term_list -> randomvector_term_list COMMA randomvector_term','randomvector_term_list',3,'p_randomvector_term_list','parser.py',724),
  ('randomvector_term_list -> randomvector_term','randomvector_term_list',1,'p_randomvector_term_list','parser.py',725),
  ('randomvector_term_list -> empty','randomvector_term_list',1,'p_randomvector_term_list','parser.py',726),
  ('randomvector_term -> VAR','randomvector_term',1,'p_randomvector_term','parser.py',737),
  ('randomvector_term -> ENUM_VAL','randomvector_term',1,'p_randomvector_term','parser.py',738),
  ('randomvector_term -> UNDERSCORE','randomvector_term',1,'p_randomvector_term','parser.py',739),
  ('matrix_expr -> DET UNDERSCORE LCURLY VAR COMMA VAR COLON IDENT RCURLY expr','matrix_expr',10,'p_matrix_expr','parser.py',744),
  ('matrix_expr -> INVERSE LBRACK ROW ASSIGN_EQUAL VAR COMMA COLUMN ASSIGN_EQUAL VAR RBRACK LBRACK expr RBRACK','matrix_expr',13,'p_matrix_expr','parser.py',745),
  ('typed_var_list -> typed_var_list COMMA typed_var','typed_var_list',3,'p_typed_var_list','parser.py',754),
  ('typed_var_list -> typed_var','typed_var_list',1,'p_typed_var_list','parser.py',755),
  ('typed_var -> VAR COLON IDENT','typed_var',3,'p_typed_var','parser.py',763),
  ('expr_list -> expr_list COMMA expr','expr_list',3,'p_expr_list','parser.py',767),
  ('expr_list -> expr','expr_list',1,'p_expr_list','parser.py',768),
  ('case_list -> case_list COMMA case_def','case_list',3,'p_case_list','parser.py',776),
  ('case_list -> case_def','case_list',1,'p_case_list','parser.py',777),
  ('case_def -> CASE term COLON expr','case_def',4,'p_case_def','parser.py',785),
  ('case_def -> DEFAULT COLON expr','case_def',3,'p_case_def','parser.py',786),
  ('lconst_case_list -> lconst COLON expr','lconst_case_list',3,'p_lconst_case_list','parser.py',793),
  ('lconst_case_list -> lconst COLON OTHERWISE','lconst_case_list',3,'p_lconst_case_list','parser.py',794),
  ('lconst_case_list -> lconst_case_list COMMA lconst COLON expr','lconst_case_list',5,'p_lconst_case_list','parser.py',795),
  ('lconst -> IDENT','lconst',1,'p_lconst','parser.py',803),
  ('lconst -> ENUM_VAL','lconst',1,'p_lconst','parser.py',804),
  ('param_list -> COLON','param_list',1,'p_param_list','parser.py',809),
  ('param_list -> LPAREN param_list2 RPAREN COLON','param_list',4,'p_param_list','parser.py',810),
  ('param_list2 -> type_spec','param_list2',1,'p_param_list2','parser.py',817),
  ('param_list2 -> param_list2 COMMA type_spec','param_list2',3,'p_param_list2','parser.py',818),
  ('type_spec -> IDENT','type_spec',1,'p_type_spec','parser.py',834),
  ('type_spec -> INT','type_spec',1,'p_type_spec','parser.py',835),
  ('type_spec -> REAL','type_spec',1,'p_type_spec','parser.py',836),
  ('type_spec -> BOOL','type_spec',1,'p_type_spec','parser.py',837),
  ('range_const -> bool_type','range_const',1,'p_range_const','parser.py',841),
  ('range_const -> double_type','range_const',1,'p_range_const','parser.py',842),
  ('range_const -> int_type','range_const',1,'p_range_const','parser.py',843),
  ('range_const -> ENUM_VAL','range_const',1,'p_range_const','parser.py',844),
  ('range_const -> IDENT','range_const',1,'p_range_const','parser.py',845),
  ('bool_type -> TRUE','bool_type',1,'p_bool_type','parser.py',849),
  ('bool_type -> FALSE','bool_type',1,'p_bool_type','parser.py',850),
  ('double_type -> DOUBLE','double_type',1,'p_double_type','parser.py',854),
  ('double_type -> MINUS DOUBLE','double_type',2,'p_double_type','parser.py',855),
  ('double_type -> POS_INF','double_type',1,'p_double_type','parser.py',856),
  ('double_type -> NEG_INF','double_type',1,'p_double_type','parser.py',857),
  ('int_type -> INTEGER','int_type',1,'p_int_type','parser.py',861),
  ('int_type -> MINUS INTEGER','int_type',2,'p_int_type','parser.py',862),
  ('pos_int_type_or_pos_inf -> INTEGER','pos_int_type_or_pos_inf',1,'p_pos_int_type_or_pos_inf','parser.py',866),
  ('pos_int_type_or_pos_inf -> POS_INF','pos_int_type_or_pos_inf',1,'p_pos_int_type_or_pos_inf','parser.py',867),
  ('instance_block -> INSTANCE IDENT LCURLY instance_list RCURLY','instance_block',5,'p_instance_block','parser.py',871),
  ('instance_list -> instance_list domain_section','instance_list',2,'p_instance_list','parser.py',876),
  ('instance_list -> instance_list nonfluents_section','instance_list',2,'p_instance_list','parser.py',877),
  ('instance_list -> instance_list objects_section','instance_list',2,'p_instance_list','parser.py',878),
  ('instance_list -> instance_list init_state_section','instance_list',2,'p_instance_list','parser.py',879),
  ('instance_list -> instance_list max_nondef_actions_section','instance_list',2,'p_instance_list','parser.py',880),
  ('instance_list -> instance_list horizon_spec_section','instance_list',2,'p_instance_list','parser.py',881),
  ('instance_list -> instance_list discount_section','instance_list',2,'p_instance_list','parser.py',882),
  ('instance_list -> empty','instance_list',1,'p_instance_list','parser.py',883),
  ('domain_section -> DOMAIN ASSIGN_EQUAL IDENT SEMI','domain_section',4,'p_domain_section','parser.py',892),
  ('nonfluents_section -> NON_FLUENTS ASSIGN_EQUAL IDENT SEMI','nonfluents_section',4,'p_nonfluents_section','parser.py',896),
  ('objects_section -> OBJECTS LCURLY objects_list RCURLY SEMI','objects_section',5,'p_objects_section','parser.py',901),
  ('init_state_section -> INIT_STATE LCURLY pvar_inst_list RCURLY SEMI','init_state_section',5,'p_init_state_section','parser.py',906),
  ('max_nondef_actions_section -> MAX_NONDEF_ACTIONS ASSIGN_EQUAL pos_int_type_or_pos_inf SEMI','max_nondef_actions_section',4,'p_max_nondef_actions_section','parser.py',911),
  ('horizon_spec_section -> HORIZON ASSIGN_EQUAL pos_int_type_or_pos_inf SEMI','horizon_spec_section',4,'p_horizon_spec_section','parser.py',916),
  ('horizon_spec_section -> HORIZON ASSIGN_EQUAL TERMINATE_WHEN LPAREN expr RPAREN','horizon_spec_section',6,'p_horizon_spec_section','parser.py',917),
  ('discount_section -> DISCOUNT ASSIGN_EQUAL DOUBLE SEMI','discount_section',4,'p_discount_section','parser.py',925),
  ('nonfluent_block -> NON_FLUENTS IDENT LCURLY nonfluent_list RCURLY','nonfluent_block',5,'p_nonfluent_block','parser.py',930),
  ('nonfluent_list -> nonfluent_list domain_section','nonfluent_list',2,'p_nonfluent_list','parser.py',935),
  ('nonfluent_list -> nonfluent_list objects_section','nonfluent_list',2,'p_nonfluent_list','parser.py',936),
  ('nonfluent_list -> nonfluent_list init_non_fluent_section','nonfluent_list',2,'p_nonfluent_list','parser.py',937),
  ('nonfluent_list -> empty','nonfluent_list',1,'p_nonfluent_list','parser.py',938),
  ('init_non_fluent_section -> NON_FLUENTS LCURLY pvar_inst_list RCURLY SEMI','init_non_fluent_section',5,'p_init_non_fluent_section','parser.py',947),
  ('objects_list -> objects_list objects_def','objects_list',2,'p_objects_list','parser.py',952),
  ('objects_list -> objects_def','objects_list',1,'p_objects_list','parser.py',953),
  ('objects_list -> empty','objects_list',1,'p_objects_list','parser.py',954),
  ('objects_def -> IDENT COLON LCURLY object_const_list RCURLY SEMI','objects_def',6,'p_objects_def','parser.py',962),
  ('object_const_list -> object_const_list COMMA IDENT','object_const_list',3,'p_object_const_list','parser.py',966),
  ('object_const_list -> IDENT','object_const_list',1,'p_object_const_list','parser.py',967),
  ('pvar_inst_list -> pvar_inst_list pvar_inst_def','pvar_inst_list',2,'p_pvar_inst_list','parser.py',975),
  ('pvar_inst_list -> pvar_inst_def','pvar_inst_list',1,'p_pvar_inst_list','parser.py',976),
  ('pvar_inst_def -> IDENT LPAREN lconst_list RPAREN SEMI','pvar_inst_def',5,'p_pvar_inst_def','parser.py',984),
  ('pvar_inst_def -> IDENT SEMI','pvar_inst_def',2,'p_pvar_inst_def','parser.py',985),
  ('pvar_inst_def -> NOT IDENT LPAREN lconst_list RPAREN SEMI','pvar_inst_def',6,'p_pvar_inst_def','parser.py',986),
  ('pvar_inst_def -> NOT IDENT SEMI','pvar_inst_def',3,'p_pvar_inst_def','parser.py',987),
  ('pvar_inst_def -> IDENT LPAREN lconst_list RPAREN ASSIGN_EQUAL range_const SEMI','pvar_inst_def',7,'p_pvar_inst_def','parser.py',988),
  ('pvar_inst_def -> IDENT ASSIGN_EQUAL range_const SEMI','pvar_inst_def',4,'p_pvar_inst_def','parser.py',989),
  ('lconst_list -> lconst_list COMMA lconst','lconst_list',3,'p_lconst_list','parser.py',1004),
  ('lconst_list -> lconst','lconst_list',1,'p_lconst_list','parser.py',1005),
  ('string_list -> string_list COMMA IDENT','string_list',3,'p_string_list','parser.py',1013),
  ('string_list -> IDENT','string_list',1,'p_string_list','parser.py',1014),
  ('string_list -> empty','string_list',1,'p_string_list','parser.py',1015),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1025),
]
