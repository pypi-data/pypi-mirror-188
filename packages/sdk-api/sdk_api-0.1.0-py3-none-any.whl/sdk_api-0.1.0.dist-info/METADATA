Metadata-Version: 2.1
Name: sdk-api
Version: 0.1.0
Summary: A Python API wrapping services of the Superb Data Kraken (SDK)
Author-email: David Eichiner <david.eichiner@efs-techhub.com>
Maintainer: David Eichiner
Maintainer-email: david.eichiner@efs-techhub.com
License: Apache-2.0
Keywords: sdk,api,superb data kraken,data management,wrapper,api-wrapper
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: elasticsearch (==7.13.1)
Requires-Dist: requests (>=2.28.2)
Requires-Dist: PyJWT (~=2.6.0)

# SDK-API

**SDK-API** is a simple library to access various services of the *superb data kraken (SDK)*  platform.

It is primarily intended to be used in an jupyter hub environment within
the platform itself, but can be configured for different environments as well.

## Installation and Supported Versions

```console
$ python -m pip install sdk-api
```

SDK-API officially supports Python 3.7+.

## Usage

Usage from a jupyter-notebook running within an instance of the SDK

```python
>> > import sdk.api
>> > client = sdk.api.SDKClient()
>> > organizations = client.get_all_organizations()
```

this presumes access/refresh tokens are accessible via variables of the executing environment (***SDK_ACCESS_TOKEN, SDK_REFRESH_TOKEN***).

If access/refresh token can be found int the env-variables {_ACCESS_TOKEN_ENV_KEY} / {_REFRESH_TOKEN_ENV_KEY}

``` python
>>> import sdk.api
>>> client = sdk.api.SDKClient()
>>> client.get_all_organizations()
```

or with explicit login:

``` python
>>> import sdk.api
>>> sdk.api.SDKClient(username='hasslethehoff', password='lookingforfreedom')
>>> client.get_all_organizations()
```

### Configuration

by default everything is configured for usage with the default instance of the SDK and comes with settings for various different instances.

overwriting settings:

``` python
>>> client = sdk.api.SDKClient(domain='mydomain.ai', client_id='my-client-id', api_version='v13.37')
```

