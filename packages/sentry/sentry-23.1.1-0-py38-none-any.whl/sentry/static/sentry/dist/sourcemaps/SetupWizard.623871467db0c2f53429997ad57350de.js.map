{"version":3,"file":"chunks/SetupWizard.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kmBAcA,MAAMA,EAAsB,CAC1B,oBACE,oEACF,eAAgB,wDAChBC,QAAS,qEACT,sBACE,uEAGJ,SAASC,EAAY,GAAuB,IAAvB,KAACC,GAAO,GAAa,EACxC,MAAMC,GAAMC,EAAAA,EAAAA,KACNC,GAAkBC,EAAAA,EAAAA,aAA2BC,IAC5CC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAEzCC,EAAAA,EAAAA,YAAU,IACD,KACDN,EAAgBO,SAClBC,OAAOC,aAAaT,EAAgBO,QACtC,KAIJD,EAAAA,EAAAA,YAAU,IACD,KACLE,OAAOC,aAAaT,EAAgBO,QAAQ,IAIhD,MAAMG,GAAgBC,EAAAA,EAAAA,cAAYC,UAChC,UACQd,EAAIe,eAAgB,WAAUhB,KAKtC,CAJE,MACAO,GAAY,GACZI,OAAOC,aAAaT,EAAgBO,SACpCP,EAAgBO,QAAUC,OAAOM,YAAW,IAAMN,OAAOO,SAAS,IACpE,IACC,CAACjB,EAAKD,KAETS,EAAAA,EAAAA,YAAU,KACR,MAAMU,EAAkBR,OAAOS,YAAYP,EAAe,KAC1D,MAAO,IAAMF,OAAOU,cAAcF,EAAgB,GACjD,CAACN,IAGJ,MAAMS,GAAWC,EAAAA,EAAAA,UAAQ,KACvB,MACMC,EADY,IAAIC,gBAAgBC,SAASC,QACbC,IAAI,oBACtC,OAAO/B,EAAoB2B,GAAmB,KAAO,yBAAyB,GAC7E,IAEH,OACE,QAAC,IAAqB,WACpB,eAAKK,UAAU,YAAW,SACtBvB,GAOA,eAAKuB,UAAU,MAAK,WAClB,wBAAKC,EAAAA,EAAAA,GAAE,qDACP,QAACC,EAAiB,CAACC,IAAK,EAAE,WACxB,QAAC,KAAM,CAACC,SAAS,UAAUC,GAAG,IAAG,UAC9BJ,EAAAA,EAAAA,GAAE,kBAEL,QAAC,KAAM,CAACK,KAAMb,EAAUc,UAAQ,YAC7BN,EAAAA,EAAAA,GAAE,qBAbT,QAAC,IAAgB,CAACO,MAAO,CAACC,OAAQ,YAAY,UAC5C,eAAKT,UAAU,MAAK,UAClB,wBAAKC,EAAAA,EAAAA,GAAE,0CAmBrB,CAlES/B,EAAW,0BAoEpB,MAAMgC,GAAoB,OAAOQ,EAAAA,GAAS,qBAAhB,CAAiB,4DAK3C,G","sources":["webpack:///./app/views/setupWizard/index.tsx"],"sourcesContent":["import {useCallback, useEffect, useMemo, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport ThemeAndStyleProvider from 'sentry/components/themeAndStyleProvider';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  hash?: boolean | string;\n};\n\nconst platformDocsMapping = {\n  'javascript-nextjs':\n    'https://docs.sentry.io/platforms/javascript/guides/nextjs/#verify',\n  'react-native': 'https://docs.sentry.io/platforms/react-native/#verify',\n  cordova: 'https://docs.sentry.io/platforms/javascript/guides/cordova/#verify',\n  'javascript-electron':\n    'https://docs.sentry.io/platforms/javascript/guides/electron/#verify',\n};\n\nfunction SetupWizard({hash = false}: Props) {\n  const api = useApi();\n  const closeTimeoutRef = useRef<number | undefined>(undefined);\n  const [finished, setFinished] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      if (closeTimeoutRef.current) {\n        window.clearTimeout(closeTimeoutRef.current);\n      }\n    };\n  });\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(closeTimeoutRef.current);\n    };\n  });\n\n  const checkFinished = useCallback(async () => {\n    try {\n      await api.requestPromise(`/wizard/${hash}/`);\n    } catch {\n      setFinished(true);\n      window.clearTimeout(closeTimeoutRef.current);\n      closeTimeoutRef.current = window.setTimeout(() => window.close(), 10000);\n    }\n  }, [api, hash]);\n\n  useEffect(() => {\n    const pollingInterval = window.setInterval(checkFinished, 1000);\n    return () => window.clearInterval(pollingInterval);\n  }, [checkFinished]);\n\n  // outside of route context\n  const docsLink = useMemo(() => {\n    const urlParams = new URLSearchParams(location.search);\n    const projectPlatform = urlParams.get('project_platform');\n    return platformDocsMapping[projectPlatform || ''] || 'https://docs.sentry.io/';\n  }, []);\n\n  return (\n    <ThemeAndStyleProvider>\n      <div className=\"container\">\n        {!finished ? (\n          <LoadingIndicator style={{margin: '2em auto'}}>\n            <div className=\"row\">\n              <h5>{t('Waiting for wizard to connect')}</h5>\n            </div>\n          </LoadingIndicator>\n        ) : (\n          <div className=\"row\">\n            <h5>{t('Return to your terminal to complete your setup')}</h5>\n            <MinWidthButtonBar gap={1}>\n              <Button priority=\"primary\" to=\"/\">\n                {t('View Issues')}\n              </Button>\n              <Button href={docsLink} external>\n                {t('See Docs')}\n              </Button>\n            </MinWidthButtonBar>\n          </div>\n        )}\n      </div>\n    </ThemeAndStyleProvider>\n  );\n}\n\nconst MinWidthButtonBar = styled(ButtonBar)`\n  width: min-content;\n  margin-top: 20px;\n`;\n\nexport default SetupWizard;\n"],"names":["platformDocsMapping","cordova","SetupWizard","hash","api","useApi","closeTimeoutRef","useRef","undefined","finished","setFinished","useState","useEffect","current","window","clearTimeout","checkFinished","useCallback","async","requestPromise","setTimeout","close","pollingInterval","setInterval","clearInterval","docsLink","useMemo","projectPlatform","URLSearchParams","location","search","get","className","t","MinWidthButtonBar","gap","priority","to","href","external","style","margin","ButtonBar"],"sourceRoot":""}