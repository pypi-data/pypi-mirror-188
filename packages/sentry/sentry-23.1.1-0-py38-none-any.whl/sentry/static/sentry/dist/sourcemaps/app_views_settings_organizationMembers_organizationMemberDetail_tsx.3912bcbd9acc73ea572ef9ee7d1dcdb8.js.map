{"version":3,"file":"chunks/app_views_settings_organizationMembers_organizationMemberDetail_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/isMemberDisabledFromLimit.tsx","webpack:///./app/views/settings/organizationMembers/inviteMember/orgRoleSelect.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberDetail.tsx"],"sourcesContent":["import {Member} from 'sentry/types';\n\n// check to see if a member has been disabled because of the member limit\nexport default function isMemberDisabledFromLimit(member?: Member | null) {\n  return member?.flags['member-limit:restricted'] ?? false;\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport Radio from 'sentry/components/radio';\nimport {t, tct} from 'sentry/locale';\nimport {OrgRole} from 'sentry/types';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst Label = styled('label')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  margin-bottom: 0;\n`;\n\ntype Props = {\n  disabled: boolean;\n  enforceAllowed: boolean;\n  enforceIdpRoleRestricted: boolean;\n  enforceRetired: boolean;\n  isCurrentUser: boolean;\n  roleList: OrgRole[];\n  roleSelected: string;\n  setSelected: (id: string) => void;\n};\n\nclass OrganizationRoleSelect extends Component<Props> {\n  render() {\n    const {\n      disabled,\n      enforceRetired,\n      enforceAllowed,\n      isCurrentUser,\n      roleList,\n      enforceIdpRoleRestricted,\n      roleSelected,\n      setSelected,\n    } = this.props;\n\n    return (\n      <Panel>\n        <PanelHeader>\n          <div>{t('Organization Role')}</div>\n        </PanelHeader>\n        {enforceIdpRoleRestricted && (\n          <PanelAlert>\n            {tct(\n              \"[person] organization-level role is managed through your organization's identity provider.\",\n              {person: isCurrentUser ? 'Your' : \"This member's\"}\n            )}\n          </PanelAlert>\n        )}\n\n        <PanelBody>\n          {roleList.map(role => {\n            const {desc, name, id, allowed, isRetired: roleRetired} = role;\n\n            const isRetired = enforceRetired && roleRetired;\n            const isDisabled =\n              disabled ||\n              isRetired ||\n              (enforceAllowed && !allowed) ||\n              enforceIdpRoleRestricted;\n\n            return (\n              <PanelItem\n                key={id}\n                onClick={() => !isDisabled && setSelected(id)}\n                css={!isDisabled ? {} : {color: 'grey', cursor: 'default'}}\n              >\n                <Label>\n                  <Radio id={id} value={name} checked={id === roleSelected} readOnly />\n                  <div style={{flex: 1, padding: '0 16px'}}>\n                    {name}\n                    <TextBlock noMargin>\n                      <div className=\"help-block\">{desc}</div>\n                    </TextBlock>\n                  </div>\n                </Label>\n              </PanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default OrganizationRoleSelect;\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {removeAuthenticator} from 'sentry/actionCreators/account';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {resendMemberInvite, updateMember} from 'sentry/actionCreators/members';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport NotFound from 'sentry/components/errors/notFound';\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconRefresh} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport configStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Member, Organization, Team} from 'sentry/types';\nimport isMemberDisabledFromLimit from 'sentry/utils/isMemberDisabledFromLimit';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport Teams from 'sentry/utils/teams';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'sentry/views/settings/components/teamSelect';\n\nimport OrganizationRoleSelect from './inviteMember/orgRoleSelect';\n\nconst MULTIPLE_ORGS = t('Cannot be reset since user is in more than one organization');\nconst NOT_ENROLLED = t('Not enrolled in two-factor authentication');\nconst NO_PERMISSION = t('You do not have permission to perform this action');\nconst TWO_FACTOR_REQUIRED = t(\n  'Cannot be reset since two-factor is required for this organization'\n);\n\ntype RouteParams = {\n  memberId: string;\n};\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  member: Member | null;\n  roleList: Member['roles'];\n  selectedRole: Member['role'];\n} & AsyncView['state'];\n\nconst DisabledMemberTooltip = HookOrDefault({\n  hookName: 'component:disabled-member-tooltip',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nclass OrganizationMemberDetail extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      roleList: [],\n      selectedRole: '',\n      member: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params} = this.props;\n    return [\n      ['member', `/organizations/${organization.slug}/members/${params.memberId}/`],\n    ];\n  }\n\n  redirectToMemberPage() {\n    const {location, params, routes} = this.props;\n    const members = recreateRoute('members/', {\n      location,\n      routes,\n      params,\n      stepBack: -2,\n    });\n    browserHistory.push(members);\n  }\n\n  handleSave = async () => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Saving...'));\n    this.setState({busy: true});\n\n    try {\n      await updateMember(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        data: this.state.member,\n      });\n      addSuccessMessage(t('Saved'));\n      this.redirectToMemberPage();\n    } catch (resp) {\n      const errorMessage =\n        (resp && resp.responseJSON && resp.responseJSON.detail) || t('Could not save...');\n      addErrorMessage(errorMessage);\n    }\n    this.setState({busy: false});\n  };\n\n  handleInvite = async (regenerate: boolean) => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Sending invite...'));\n\n    this.setState({busy: true});\n\n    try {\n      const data = await resendMemberInvite(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        regenerate,\n      });\n\n      addSuccessMessage(t('Sent invite!'));\n\n      if (regenerate) {\n        this.setState(state => ({member: {...state.member, ...data}}));\n      }\n    } catch (_err) {\n      addErrorMessage(t('Could not send invite'));\n    }\n\n    this.setState({busy: false});\n  };\n\n  handleAddTeam = (team: Team) => {\n    const {member} = this.state;\n    if (!member) {\n      return;\n    }\n    const teams = member.teams;\n    if (!teams.includes(team.slug)) {\n      member.teams = [...teams, team.slug];\n    }\n    this.setState({member});\n  };\n\n  handleRemoveTeam = (removedTeam: string) => {\n    const {member} = this.state;\n\n    this.setState({\n      member: {\n        ...member!,\n        teams: member!.teams.filter(slug => slug !== removedTeam),\n      },\n    });\n  };\n\n  handle2faReset = async () => {\n    const {organization, router} = this.props;\n    const {user} = this.state.member!;\n\n    const requests = user.authenticators.map(auth =>\n      removeAuthenticator(this.api, user.id, auth.id)\n    );\n\n    try {\n      await Promise.all(requests);\n      router.push(normalizeUrl(`/settings/${organization.slug}/members/`));\n      addSuccessMessage(t('All authenticators have been removed'));\n    } catch (err) {\n      addErrorMessage(t('Error removing authenticators'));\n      Sentry.captureException(err);\n    }\n  };\n\n  showResetButton = () => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user || !user.authenticators || organization.require2FA) {\n      return false;\n    }\n    const hasAuth = user.authenticators.length >= 1;\n    return hasAuth && user.canReset2fa;\n  };\n\n  getTooltip = (): string => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user) {\n      return '';\n    }\n\n    if (!user.authenticators) {\n      return NO_PERMISSION;\n    }\n    if (!user.authenticators.length) {\n      return NOT_ENROLLED;\n    }\n    if (!user.canReset2fa) {\n      return MULTIPLE_ORGS;\n    }\n    if (organization.require2FA) {\n      return TWO_FACTOR_REQUIRED;\n    }\n\n    return '';\n  };\n\n  get memberDeactivated() {\n    return isMemberDisabledFromLimit(this.state.member);\n  }\n\n  renderMemberStatus(member: Member) {\n    if (this.memberDeactivated) {\n      return (\n        <em>\n          <DisabledMemberTooltip>{t('Deactivated')}</DisabledMemberTooltip>\n        </em>\n      );\n    }\n    if (member.expired) {\n      return <em>{t('Invitation Expired')}</em>;\n    }\n    if (member.pending) {\n      return <em>{t('Invitation Pending')}</em>;\n    }\n    return t('Active');\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {member} = this.state;\n\n    if (!member) {\n      return <NotFound />;\n    }\n\n    const {access, features} = organization;\n    const inviteLink = member.invite_link;\n    const canEdit = access.includes('org:write') && !this.memberDeactivated;\n    const hasTeamRoles = features.includes('team-roles');\n\n    const {email, expired, pending} = member;\n    const canResend = !expired;\n    const showAuth = !pending;\n    const currentUser = configStore.get('user');\n    const isCurrentUser = currentUser.email === email;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <div>{member.name}</div>\n              <ExtraHeaderText>{t('Member Settings')}</ExtraHeaderText>\n            </Fragment>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Basics')}</PanelHeader>\n\n          <PanelBody>\n            <PanelItem>\n              <Details>\n                <div>\n                  <DetailLabel>{t('Email')}</DetailLabel>\n                  <div>\n                    <ExternalLink href={`mailto:${email}`}>{email}</ExternalLink>\n                  </div>\n                </div>\n                <div>\n                  <DetailLabel>{t('Status')}</DetailLabel>\n                  <div data-test-id=\"member-status\">\n                    {this.renderMemberStatus(member)}\n                  </div>\n                </div>\n                <div>\n                  <DetailLabel>{t('Added')}</DetailLabel>\n                  <div>\n                    <DateTime dateOnly date={member.dateCreated} />\n                  </div>\n                </div>\n              </Details>\n            </PanelItem>\n            <PanelItem>\n              {inviteLink && (\n                <InviteSection>\n                  <InviteField>\n                    <DetailLabel>{t('Invite Link')}</DetailLabel>\n                    <TextCopyInput>{inviteLink}</TextCopyInput>\n                    <p className=\"help-block\">\n                      {t(\n                        'This invite link can be used by anyone who knows it. Keep it secure!'\n                      )}\n                    </p>\n                  </InviteField>\n                  <ButtonBar gap={1}>\n                    {canResend && (\n                      <Button\n                        data-test-id=\"resend-invite\"\n                        onClick={() => this.handleInvite(false)}\n                      >\n                        {t('Resend Invite')}\n                      </Button>\n                    )}\n                    <Button\n                      onClick={() => this.handleInvite(true)}\n                      title={t(\n                        'Generate New Invite. This will invalidate the previous invite link!'\n                      )}\n                      priority=\"danger\"\n                      aria-label={t('Generate New Invite')}\n                      icon={<IconRefresh size=\"sm\" />}\n                    />\n                  </ButtonBar>\n                </InviteSection>\n              )}\n            </PanelItem>\n          </PanelBody>\n        </Panel>\n\n        {showAuth && (\n          <Panel>\n            <PanelHeader>{t('Authentication')}</PanelHeader>\n            <PanelBody>\n              <FieldGroup\n                alignRight\n                flexibleControlStateSize\n                label={t('Reset two-factor authentication')}\n                help={t(\n                  'Resetting two-factor authentication will remove all two-factor authentication methods for this member.'\n                )}\n              >\n                <Tooltip disabled={this.showResetButton()} title={this.getTooltip()}>\n                  <Confirm\n                    disabled={!this.showResetButton()}\n                    message={tct(\n                      'Are you sure you want to disable all two-factor authentication methods for [name]?',\n                      {name: member.name ? member.name : 'this member'}\n                    )}\n                    onConfirm={this.handle2faReset}\n                  >\n                    <Button priority=\"danger\">\n                      {t('Reset two-factor authentication')}\n                    </Button>\n                  </Confirm>\n                </Tooltip>\n              </FieldGroup>\n            </PanelBody>\n          </Panel>\n        )}\n\n        <OrganizationRoleSelect\n          enforceAllowed={false}\n          enforceIdpRoleRestricted={member.flags['idp:role-restricted']}\n          enforceRetired={hasTeamRoles}\n          isCurrentUser={isCurrentUser}\n          disabled={!canEdit}\n          roleList={member.roles}\n          roleSelected={member.role}\n          setSelected={slug => this.setState({member: {...member, role: slug}})}\n        />\n\n        <Teams slugs={member.teams}>\n          {({teams, initiallyLoaded}) => (\n            <TeamSelect\n              enforceIdpProvisioned\n              organization={organization}\n              selectedTeams={teams}\n              disabled={!canEdit}\n              onAddTeam={this.handleAddTeam}\n              onRemoveTeam={this.handleRemoveTeam}\n              loadingTeams={!initiallyLoaded}\n            />\n          )}\n        </Teams>\n\n        <Footer>\n          <Button\n            priority=\"primary\"\n            busy={this.state.busy}\n            onClick={this.handleSave}\n            disabled={!canEdit}\n          >\n            {t('Save Member')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationMemberDetail);\n\nconst ExtraHeaderText = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 2fr 1fr 1fr;\n  gap: ${space(2)};\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n  }\n`;\n\nconst DetailLabel = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst InviteField = styled('div')`\n  flex-grow: 1;\n`;\n\nconst InviteSection = styled('div')`\n  flex-grow: 1;\n  display: flex;\n  gap: ${space(1)}; ;\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n"],"names":["isMemberDisabledFromLimit","member","flags","Label","OrganizationRoleSelect","Component","render","disabled","enforceRetired","enforceAllowed","isCurrentUser","roleList","enforceIdpRoleRestricted","roleSelected","setSelected","this","props","t","tct","person","map","role","desc","name","id","allowed","isRetired","roleRetired","isDisabled","onClick","css","color","cursor","value","checked","readOnly","style","flex","padding","noMargin","className","MULTIPLE_ORGS","NOT_ENROLLED","NO_PERMISSION","TWO_FACTOR_REQUIRED","DisabledMemberTooltip","HookOrDefault","hookName","defaultComponent","children","Fragment","OrganizationMemberDetail","AsyncView","async","organization","params","addLoadingMessage","setState","busy","updateMember","api","orgId","slug","memberId","data","state","addSuccessMessage","redirectToMemberPage","resp","errorMessage","responseJSON","detail","addErrorMessage","resendMemberInvite","regenerate","_err","team","teams","includes","removedTeam","filter","router","user","requests","authenticators","auth","removeAuthenticator","Promise","all","push","normalizeUrl","err","Sentry","require2FA","length","canReset2fa","getDefaultState","super","selectedRole","getEndpoints","location","routes","members","recreateRoute","stepBack","browserHistory","memberDeactivated","renderMemberStatus","expired","pending","renderBody","access","features","inviteLink","invite_link","canEdit","hasTeamRoles","email","canResend","showAuth","configStore","title","ExtraHeaderText","Details","DetailLabel","href","dateOnly","date","dateCreated","InviteSection","InviteField","gap","handleInvite","priority","icon","size","alignRight","flexibleControlStateSize","label","help","showResetButton","getTooltip","message","onConfirm","handle2faReset","roles","slugs","initiallyLoaded","enforceIdpProvisioned","selectedTeams","onAddTeam","handleAddTeam","onRemoveTeam","handleRemoveTeam","loadingTeams","Footer","handleSave","withOrganization","p","theme","gray300","fontSizeLarge","space","breakpoints","small","textColor"],"sourceRoot":""}