{"version":3,"file":"chunks/app_views_alerts_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"2ZAQA,SAASA,EAAgB,GAAmB,IAAnB,SAACC,GAAgB,EACxC,MAAMC,GAAeC,EAAAA,EAAAA,KACfC,EAAkBF,EAAaG,SAASC,SAAS,aAEjDC,EACJN,IAAYO,EAAAA,EAAAA,gBAAeP,IACvBQ,EAAAA,EAAAA,cAAkBR,EAAU,CAC1BC,eACAE,oBAEFH,EAEN,OAAO,QAAC,EAAAS,SAAQ,UAAEH,GACpB,CAbSP,EAAe,8BAexB,S","sources":["webpack:///./app/views/alerts/index.tsx"],"sourcesContent":["import {cloneElement, Fragment, isValidElement} from 'react';\n\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nfunction AlertsContainer({children}: Props) {\n  const organization = useOrganization();\n  const hasMetricAlerts = organization.features.includes('incidents');\n\n  const content =\n    children && isValidElement(children)\n      ? cloneElement<any>(children, {\n          organization,\n          hasMetricAlerts,\n        })\n      : children;\n\n  return <Fragment>{content}</Fragment>;\n}\n\nexport default AlertsContainer;\n"],"names":["AlertsContainer","children","organization","useOrganization","hasMetricAlerts","features","includes","content","isValidElement","cloneElement","Fragment"],"sourceRoot":""}