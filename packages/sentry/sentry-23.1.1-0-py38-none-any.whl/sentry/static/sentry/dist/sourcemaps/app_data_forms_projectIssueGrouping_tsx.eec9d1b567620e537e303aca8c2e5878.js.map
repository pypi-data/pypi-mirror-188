{"version":3,"file":"chunks/app_data_forms_projectIssueGrouping_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/projectIssueGrouping.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {GroupingConfigItem} from 'sentry/components/events/groupingInfo';\nimport {Field} from 'sentry/components/forms/types';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport marked from 'sentry/utils/marked';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/issue-grouping/';\n\nconst groupingConfigField: Field = {\n  name: 'groupingConfig',\n  type: 'select',\n  label: t('Grouping Config'),\n  saveOnBlur: false,\n  saveMessageAlertType: 'info',\n  saveMessage: t(\n    'Changing grouping config will apply to future events only (can take up to a minute).'\n  ),\n  selectionInfoFunction: args => {\n    const {groupingConfigs, value} = args;\n    const selection = groupingConfigs.find(({id}) => id === value);\n    const changelog = selection?.changelog || '';\n    if (!changelog) {\n      return null;\n    }\n    return (\n      <Changelog>\n        <ChangelogTitle>\n          {tct('New in version [version]', {version: selection.id})}:\n        </ChangelogTitle>\n        <div dangerouslySetInnerHTML={{__html: marked(changelog)}} />\n      </Changelog>\n    );\n  },\n  choices: ({groupingConfigs}) =>\n    groupingConfigs.map(({id, hidden}) => [\n      id.toString(),\n      <GroupingConfigItem key={id} isHidden={hidden}>\n        {id}\n      </GroupingConfigItem>,\n    ]),\n  help: t('Sets the grouping algorithm to be used for new events.'),\n  visible: ({features}) => features.has('set-grouping-config'),\n};\n\nexport const fields: Record<string, Field> = {\n  fingerprintingRules: {\n    name: 'fingerprintingRules',\n    type: 'string',\n    label: t('Fingerprint Rules'),\n    hideLabel: true,\n    placeholder: t(\n      'error.type:MyException -> fingerprint-value\\nstack.function:some_panic_function -> fingerprint-value'\n    ),\n    multiline: true,\n    monospace: true,\n    autosize: true,\n    inline: false,\n    maxRows: 20,\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t(\n      'Changing fingerprint rules will apply to future events only (can take up to a minute).'\n    ),\n    formatMessageValue: false,\n    help: () => (\n      <Fragment>\n        <RuleDescription>\n          {tct(\n            `This can be used to modify the fingerprint rules on the server with custom rules.\n        Rules follow the pattern [pattern]. To learn more about fingerprint rules, [docs:read the docs].`,\n            {\n              pattern: <code>matcher:glob -&gt; fingerprint, values</code>,\n              docs: (\n                <ExternalLink href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/fingerprint-rules/\" />\n              ),\n            }\n          )}\n        </RuleDescription>\n        <RuleExample>\n          {`# force all errors of the same type to have the same fingerprint\nerror.type:DatabaseUnavailable -> system-down\n# force all memory allocation errors to be grouped together\nstack.function:malloc -> memory-allocation-error`}\n        </RuleExample>\n      </Fragment>\n    ),\n    visible: true,\n  },\n  groupingEnhancements: {\n    name: 'groupingEnhancements',\n    type: 'string',\n    label: t('Stack Trace Rules'),\n    hideLabel: true,\n    placeholder: t(\n      'stack.function:raise_an_exception ^-group\\nstack.function:namespace::* +app'\n    ),\n    multiline: true,\n    monospace: true,\n    autosize: true,\n    inline: false,\n    maxRows: 20,\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t(\n      'Changing stack trace rules will apply to future events only (can take up to a minute).'\n    ),\n    formatMessageValue: false,\n    help: () => (\n      <Fragment>\n        <RuleDescription>\n          {tct(\n            `This can be used to enhance the grouping algorithm with custom rules.\n        Rules follow the pattern [pattern]. To learn more about stack trace rules, [docs:read the docs].`,\n            {\n              pattern: <code>matcher:glob [v^]?[+-]flag</code>,\n              docs: (\n                <ExternalLink href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/stack-trace-rules/\" />\n              ),\n            }\n          )}\n        </RuleDescription>\n        <RuleExample>\n          {`# remove all frames above a certain function from grouping\nstack.function:panic_handler ^-group\n# mark all functions following a prefix in-app\nstack.function:mylibrary_* +app`}\n        </RuleExample>\n      </Fragment>\n    ),\n    validate: () => [],\n    visible: true,\n  },\n  groupingConfig: groupingConfigField,\n  secondaryGroupingConfig: {\n    ...groupingConfigField,\n    name: 'secondaryGroupingConfig',\n    label: t('Fallback/Secondary Grouping Config'),\n    help: t(\n      'Sets the secondary grouping algorithm that should be run in addition to avoid creating too many new groups. Controlled by expiration date below.'\n    ),\n    saveMessage: t(\n      'Changing the secondary grouping strategy will affect how many new issues are created.'\n    ),\n  },\n  secondaryGroupingExpiry: {\n    name: 'secondaryGroupingExpiry',\n    type: 'number',\n    label: t('Expiration date of secondary grouping'),\n    help: t(\n      'If this UNIX timestamp is in the past, the secondary grouping configuration stops applying automatically.'\n    ),\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t(\n      'Changing the expiration date will affect how many new issues are created.'\n    ),\n  },\n  groupingAutoUpdate: {\n    name: 'groupingAutoUpdate',\n    type: 'boolean',\n    label: t('Automatically Update Grouping'),\n    saveOnBlur: false,\n    help: t(\n      'When enabled projects will in the future automatically update to the latest grouping algorithm. Right now this setting does nothing.'\n    ),\n    saveMessage: ({value}) =>\n      value\n        ? t(\n            'Enabling automatic upgrading will take effect on the next incoming event once auto updating has been rolled out.'\n          )\n        : t(\n            'Disabling auto updates will cause you to no longer receive improvements to the grouping algorithm.'\n          ),\n  },\n};\n\nconst RuleDescription = styled('div')`\n  margin-bottom: ${space(1)};\n  margin-top: -${space(1)};\n  margin-right: 36px;\n`;\n\nconst RuleExample = styled('pre')`\n  margin-bottom: ${space(1)};\n  margin-right: 36px;\n`;\n\nconst Changelog = styled('div')`\n  position: relative;\n  top: -1px;\n  margin-bottom: -1px;\n  padding: ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  background: ${p => p.theme.backgroundSecondary};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  &:last-child {\n    border: 0;\n    border-bottom-left-radius: ${p => p.theme.borderRadius};\n    border-bottom-right-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nconst ChangelogTitle = styled('h3')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(0.75)} !important;\n`;\n"],"names":["route","groupingConfigField","name","type","label","t","saveOnBlur","saveMessageAlertType","saveMessage","selectionInfoFunction","args","groupingConfigs","value","selection","find","id","changelog","Changelog","ChangelogTitle","tct","version","dangerouslySetInnerHTML","__html","marked","choices","map","hidden","toString","isHidden","help","visible","features","has","fields","fingerprintingRules","hideLabel","placeholder","multiline","monospace","autosize","inline","maxRows","formatMessageValue","Fragment","RuleDescription","pattern","docs","href","RuleExample","groupingEnhancements","validate","groupingConfig","secondaryGroupingConfig","secondaryGroupingExpiry","groupingAutoUpdate","space","p","theme","innerBorder","backgroundSecondary","fontSizeMedium","borderRadius"],"sourceRoot":""}