{"version":3,"file":"chunks/app_views_discover_eventDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/components/seenByList.tsx","webpack:///./app/views/discover/breadcrumb.tsx","webpack:///./app/components/group/times.tsx","webpack:///./app/views/discover/eventDetails/linkedIssue.tsx","webpack:///./app/views/discover/eventDetails/content.tsx","webpack:///./app/views/discover/eventDetails/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport space from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport AvatarList from 'sentry/components/avatar/avatarList';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconShow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {AvatarUser, User} from 'sentry/types';\nimport {userDisplayName} from 'sentry/utils/formatters';\n\ntype Props = {\n  // Avatar size\n  avatarSize?: number;\n\n  className?: string;\n\n  iconPosition?: 'left' | 'right';\n\n  // Tooltip message for the \"Seen By\" icon\n  iconTooltip?: string;\n\n  // Max avatars to display\n  maxVisibleAvatars?: number;\n  // List of *all* users that have seen something\n  seenBy?: User[];\n};\n\nconst SeenByList = ({\n  avatarSize = 28,\n  seenBy = [],\n  iconTooltip = t('People who have viewed this'),\n  maxVisibleAvatars = 10,\n  iconPosition = 'left',\n  className,\n}: Props) => {\n  const activeUser = ConfigStore.get('user');\n  const displayUsers = seenBy.filter(user => activeUser.id !== user.id);\n\n  if (displayUsers.length === 0) {\n    return null;\n  }\n\n  // Note className=\"seen-by\" is required for responsive design\n  return (\n    <SeenByWrapper iconPosition={iconPosition} className={className}>\n      <AvatarList\n        users={displayUsers}\n        avatarSize={avatarSize}\n        maxVisibleAvatars={maxVisibleAvatars}\n        renderTooltip={user => (\n          <Fragment>\n            {userDisplayName(user)}\n            <br />\n            {moment((user as AvatarUser).lastSeen).format('LL')}\n          </Fragment>\n        )}\n      />\n      <IconWrapper iconPosition={iconPosition}>\n        <Tooltip title={iconTooltip} skipWrapper>\n          <IconShow size=\"sm\" color=\"subText\" />\n        </Tooltip>\n      </IconWrapper>\n    </SeenByWrapper>\n  );\n};\n\nconst SeenByWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`\n  display: flex;\n  ${p => (p.iconPosition === 'left' ? 'flex-direction: row-reverse' : '')};\n`;\n\nconst IconWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  color: ${p => p.theme.textColor};\n  height: 28px;\n  width: 24px;\n  text-align: center;\n  ${p => (p.iconPosition === 'left' ? 'margin-right: 10px' : '')};\n`;\n\nexport default SeenByList;\n","import {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport Breadcrumbs, {Crumb} from 'sentry/components/breadcrumbs';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {getDiscoverLandingUrl} from 'sentry/utils/discover/urls';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  event?: Event;\n  isHomepage?: boolean;\n};\n\nfunction DiscoverBreadcrumb({\n  eventView,\n  event,\n  organization,\n  location,\n  isHomepage,\n}: Props) {\n  const crumbs: Crumb[] = [];\n  const discoverTarget = organization.features.includes('discover-query')\n    ? {\n        pathname: getDiscoverLandingUrl(organization),\n        query: {\n          ...omit(location.query, 'homepage'),\n          ...eventView.generateBlankQueryStringObject(),\n          ...eventView.getPageFiltersQuery(),\n        },\n      }\n    : null;\n\n  crumbs.push({\n    to:\n      organization.features.includes('discover-query-builder-as-landing-page') &&\n      isHomepage &&\n      eventView\n        ? eventView.getResultsViewUrlTarget(organization.slug, isHomepage)\n        : discoverTarget,\n    label: t('Discover'),\n  });\n\n  if (!isHomepage && eventView && eventView.isValid()) {\n    if (organization.features.includes('discover-query-builder-as-landing-page')) {\n      crumbs.push({\n        to: `/organizations/${organization.slug}/discover/queries/`,\n        label: t('Saved Queries'),\n      });\n    }\n    crumbs.push({\n      to: eventView.getResultsViewUrlTarget(organization.slug, isHomepage),\n      label: eventView.name || '',\n    });\n  }\n\n  if (event) {\n    crumbs.push({\n      label: t('Event Detail'),\n    });\n  }\n\n  return <Breadcrumbs crumbs={crumbs} />;\n}\n\nexport default DiscoverBreadcrumb;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconClock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\n/**\n * Renders the first & last seen times for a group or event with\n * a clock icon.\n */\n\ntype Props = {\n  firstSeen: string;\n  lastSeen: string;\n};\n\nconst Times = ({lastSeen, firstSeen}: Props) => (\n  <Container>\n    <FlexWrapper>\n      {lastSeen && (\n        <Fragment>\n          <StyledIconClock legacySize=\"11px\" />\n          <TimeSince date={lastSeen} suffix={t('ago')} />\n        </Fragment>\n      )}\n      {firstSeen && lastSeen && (\n        <span className=\"hidden-xs hidden-sm\">&nbsp;—&nbsp;</span>\n      )}\n      {firstSeen && (\n        <TimeSince date={firstSeen} suffix={t('old')} className=\"hidden-xs hidden-sm\" />\n      )}\n    </FlexWrapper>\n  </Container>\n);\n\nconst Container = styled('div')`\n  flex-shrink: 1;\n  min-width: 0; /* flex-hack for overflow-ellipsised children */\n`;\n\nconst FlexWrapper = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n\n  /* The following aligns the icon with the text, fixes bug in Firefox */\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  /* this is solely for optics, since TimeSince always begins\n  with a number, and numbers do not have descenders */\n  margin-right: ${space(0.5)};\n`;\n\nexport default Times;\n","import styled from '@emotion/styled';\n\nimport {Alert} from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Times from 'sentry/components/group/times';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport SeenByList from 'sentry/components/seenByList';\nimport ShortId from 'sentry/components/shortId';\nimport GroupChart from 'sentry/components/stream/groupChart';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\n\ntype Props = {\n  eventId: string;\n  groupId: string;\n};\n\ntype State = {\n  group: Group;\n};\n\nclass LinkedIssue extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {groupId} = this.props;\n    const groupUrl = `/issues/${groupId}/`;\n\n    return [['group', groupUrl]];\n  }\n\n  renderLoading() {\n    return <Placeholder height=\"120px\" bottomGutter={2} />;\n  }\n\n  renderError(error?: Error, disableLog = false): React.ReactNode {\n    const {errors} = this.state;\n    const hasNotFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (hasNotFound) {\n      return (\n        <Alert type=\"warning\" showIcon>\n          {t('The linked issue cannot be found. It may have been deleted, or merged.')}\n        </Alert>\n      );\n    }\n\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {eventId} = this.props;\n    const {group} = this.state;\n    const issueUrl = `${group.permalink}events/${eventId}/`;\n\n    return (\n      <Section>\n        <SectionHeading>{t('Event Issue')}</SectionHeading>\n        <StyledIssueCard>\n          <IssueCardHeader>\n            <StyledLink to={issueUrl} data-test-id=\"linked-issue\">\n              <StyledShortId\n                shortId={group.shortId}\n                avatar={\n                  <ProjectBadge\n                    project={group.project}\n                    avatarSize={16}\n                    hideName\n                    disableLink\n                  />\n                }\n              />\n            </StyledLink>\n            <SeenByList seenBy={group.seenBy} maxVisibleAvatars={5} />\n          </IssueCardHeader>\n          <IssueCardBody>\n            <GroupChart statsPeriod=\"30d\" data={group} height={56} />\n          </IssueCardBody>\n          <IssueCardFooter>\n            <Times lastSeen={group.lastSeen} firstSeen={group.firstSeen} />\n          </IssueCardFooter>\n        </StyledIssueCard>\n      </Section>\n    );\n  }\n}\n\nconst Section = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledIssueCard = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst IssueCardHeader = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(1)};\n`;\n\nconst StyledLink = styled(Link)`\n  justify-content: flex-start;\n`;\n\nconst IssueCardBody = styled('div')`\n  background: ${p => p.theme.backgroundSecondary};\n  padding-top: ${space(1)};\n`;\n\nconst StyledShortId = styled(ShortId)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n`;\n\nconst IssueCardFooter = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: ${space(0.5)} ${space(1)};\n`;\n\nexport default LinkedIssue;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport NotFound from 'sentry/components/errors/notFound';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport EventCustomPerformanceMetrics from 'sentry/components/events/eventCustomPerformanceMetrics';\nimport {BorderlessEventEntries} from 'sentry/components/events/eventEntries';\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport EventVitals from 'sentry/components/events/eventVitals';\nimport * as SpanEntryContext from 'sentry/components/events/interfaces/spans/context';\nimport FileSize from 'sentry/components/fileSize';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {TransactionProfileIdProvider} from 'sentry/components/profiling/transactionProfileIdProvider';\nimport {TransactionToProfileButton} from 'sentry/components/profiling/transactionToProfileButton';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {TagsTable} from 'sentry/components/tagsTable';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {Event, EventTag} from 'sentry/types/event';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {formatTagKey} from 'sentry/utils/discover/fields';\nimport {eventDetailsRoute} from 'sentry/utils/discover/urls';\nimport {getMessage} from 'sentry/utils/events';\nimport {QuickTraceContext} from 'sentry/utils/performance/quickTrace/quickTraceContext';\nimport QuickTraceQuery from 'sentry/utils/performance/quickTrace/quickTraceQuery';\nimport TraceMetaQuery, {\n  TraceMetaQueryChildrenProps,\n} from 'sentry/utils/performance/quickTrace/traceMetaQuery';\nimport {QuickTraceQueryChildrenProps} from 'sentry/utils/performance/quickTrace/types';\nimport {getTraceTimeRangeFromEvent} from 'sentry/utils/performance/quickTrace/utils';\nimport Projects from 'sentry/utils/projects';\nimport EventMetas from 'sentry/views/performance/transactionDetails/eventMetas';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport DiscoverBreadcrumb from '../breadcrumb';\nimport {generateTitle, getExpandedResults} from '../utils';\n\nimport LinkedIssue from './linkedIssue';\n\ntype Props = Pick<RouteComponentProps<{eventSlug: string}, {}>, 'params' | 'location'> & {\n  eventSlug: string;\n  eventView: EventView;\n  organization: Organization;\n  isHomepage?: boolean;\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: {},\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params, location, eventView} = this.props;\n    const {eventSlug} = params;\n\n    const query = eventView.getEventsAPIPayload(location);\n\n    // Fields aren't used, reduce complexity by omitting from query entirely\n    query.field = [];\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    // Get a specific event. This could be coming from\n    // a paginated group or standalone event.\n    return [['event', url, {query}]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagUrl = (tag: EventTag) => {\n    const {eventView, organization, isHomepage} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const eventReference = {...event};\n    if (eventReference.id) {\n      delete (eventReference as any).id;\n    }\n    const tagKey = formatTagKey(tag.key);\n    const nextView = getExpandedResults(eventView, {[tagKey]: tag.value}, eventReference);\n    return nextView.getResultsViewUrlTarget(organization.slug, isHomepage);\n  };\n\n  renderBody() {\n    const {event} = this.state;\n\n    if (!event) {\n      return <NotFound />;\n    }\n\n    return this.renderContent(event);\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventView, isHomepage} = this.props;\n    const {isSidebarVisible} = this.state;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.event_details',\n      eventName: 'Discoverv2: Opened Event Details',\n      event_type: event.type,\n      organization_id: parseInt(organization.id, 10),\n    });\n\n    const transactionName = event.tags.find(tag => tag.key === 'transaction')?.value;\n    const transactionSummaryTarget =\n      event.type === 'transaction' && transactionName\n        ? transactionSummaryRouteWithQuery({\n            orgSlug: organization.slug,\n            transaction: transactionName,\n            projectID: event.projectID,\n            query: location.query,\n          })\n        : null;\n\n    const eventJsonUrl = `/api/0/projects/${organization.slug}/${this.projectId}/events/${event.eventID}/json/`;\n\n    const hasProfilingFeature = organization.features.includes('profiling');\n\n    const renderContent = (\n      results?: QuickTraceQueryChildrenProps,\n      metaResults?: TraceMetaQueryChildrenProps\n    ) => (\n      <TransactionProfileIdProvider\n        projectId={event.projectID}\n        transactionId={event.type === 'transaction' ? event.id : undefined}\n        timestamp={event.dateReceived}\n      >\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <DiscoverBreadcrumb\n              eventView={eventView}\n              event={event}\n              organization={organization}\n              location={location}\n              isHomepage={isHomepage}\n            />\n            <EventHeader event={event} />\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <ButtonBar gap={1}>\n              <Button size=\"sm\" onClick={this.toggleSidebar}>\n                {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n              </Button>\n              <Button\n                size=\"sm\"\n                icon={<IconOpen />}\n                href={eventJsonUrl}\n                external\n                onClick={() =>\n                  trackAdvancedAnalyticsEvent(\n                    'performance_views.event_details.json_button_click',\n                    {\n                      organization,\n                    }\n                  )\n                }\n              >\n                {t('JSON')} (<FileSize bytes={event.size} />)\n              </Button>\n              {hasProfilingFeature && event.type === 'transaction' && (\n                <TransactionToProfileButton projectSlug={this.projectId} />\n              )}\n              {transactionSummaryTarget && (\n                <Feature organization={organization} features={['performance-view']}>\n                  {({hasFeature}) => (\n                    <Button\n                      size=\"sm\"\n                      disabled={!hasFeature}\n                      priority=\"primary\"\n                      to={transactionSummaryTarget}\n                    >\n                      {t('Go to Summary')}\n                    </Button>\n                  )}\n                </Feature>\n              )}\n            </ButtonBar>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <EventMetas\n              quickTrace={results ?? null}\n              meta={metaResults?.meta ?? null}\n              event={event}\n              organization={organization}\n              projectId={this.projectId}\n              location={location}\n              errorDest=\"discover\"\n              transactionDest=\"discover\"\n            />\n          </Layout.Main>\n          <Layout.Main fullWidth={!isSidebarVisible}>\n            <Projects orgId={organization.slug} slugs={[this.projectId]}>\n              {({projects, initiallyLoaded}) =>\n                initiallyLoaded ? (\n                  <SpanEntryContext.Provider\n                    value={{\n                      getViewChildTransactionTarget: childTransactionProps => {\n                        const childTransactionLink = eventDetailsRoute({\n                          eventSlug: childTransactionProps.eventSlug,\n                          orgSlug: organization.slug,\n                        });\n\n                        return {\n                          pathname: childTransactionLink,\n                          query: eventView.generateQueryStringObject(),\n                        };\n                      },\n                    }}\n                  >\n                    <QuickTraceContext.Provider value={results}>\n                      <BorderlessEventEntries\n                        organization={organization}\n                        event={event}\n                        project={projects[0] as Project}\n                        location={location}\n                        showTagSummary={false}\n                      />\n                    </QuickTraceContext.Provider>\n                  </SpanEntryContext.Provider>\n                ) : (\n                  <LoadingIndicator />\n                )\n              }\n            </Projects>\n          </Layout.Main>\n          {isSidebarVisible && (\n            <Layout.Side>\n              <EventVitals event={event} />\n              {(organization.features.includes('dashboards-mep') ||\n                organization.features.includes('mep-rollout-flag')) && (\n                <EventCustomPerformanceMetrics\n                  event={event}\n                  location={location}\n                  organization={organization}\n                  isHomepage={isHomepage}\n                />\n              )}\n              {event.groupID && (\n                <LinkedIssue groupId={event.groupID} eventId={event.eventID} />\n              )}\n              <TagsTable\n                generateUrl={this.generateTagUrl}\n                event={event}\n                query={eventView.query}\n              />\n            </Layout.Side>\n          )}\n        </Layout.Body>\n      </TransactionProfileIdProvider>\n    );\n\n    const hasQuickTraceView = organization.features.includes('performance-view');\n\n    if (hasQuickTraceView) {\n      const traceId = event.contexts?.trace?.trace_id ?? '';\n      const {start, end} = getTraceTimeRangeFromEvent(event);\n\n      return (\n        <TraceMetaQuery\n          location={location}\n          orgSlug={organization.slug}\n          traceId={traceId}\n          start={start}\n          end={end}\n        >\n          {metaResults => (\n            <QuickTraceQuery\n              event={event}\n              location={location}\n              orgSlug={organization.slug}\n            >\n              {results => renderContent(results, metaResults)}\n            </QuickTraceQuery>\n          )}\n        </TraceMetaQuery>\n      );\n    }\n\n    return renderContent();\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true);\n  }\n\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n\n    if (typeof eventSlug === 'string') {\n      return eventSlug.trim();\n    }\n\n    return '';\n  };\n\n  renderComponent() {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n    const eventSlug = this.getEventSlug();\n    const projectSlug = eventSlug.split(':')[0];\n\n    const title = generateTitle({eventView, event, organization});\n\n    return (\n      <SentryDocumentTitle\n        title={title}\n        orgSlug={organization.slug}\n        projectSlug={projectSlug}\n      >\n        {super.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst EventHeader = ({event}: {event: Event}) => {\n  const message = getMessage(event);\n  return (\n    <EventHeaderContainer data-test-id=\"event-header\">\n      <TitleWrapper>\n        <StyledEventOrGroupTitle data={event} />\n      </TitleWrapper>\n      {message && (\n        <MessageWrapper>\n          <EventMessage message={message} />\n        </MessageWrapper>\n      )}\n    </EventHeaderContainer>\n  );\n};\n\nconst EventHeaderContainer = styled('div')`\n  max-width: ${p => p.theme.breakpoints.small};\n`;\n\nconst TitleWrapper = styled('div')`\n  margin-top: 20px;\n`;\n\nconst StyledEventOrGroupTitle = styled(EventOrGroupTitle)`\n  font-size: ${p => p.theme.headerFontSize};\n`;\n\nconst MessageWrapper = styled('div')`\n  margin-top: ${space(1)};\n`;\n\nexport default EventDetailsContent;\n","import {RouteComponentProps} from 'react-router';\nimport omit from 'lodash/omit';\n\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = RouteComponentProps<{eventSlug: string}, {}> & {\n  organization: Organization;\n};\n\nfunction EventDetails({organization, location, params}: Props) {\n  const eventSlug = typeof params.eventSlug === 'string' ? params.eventSlug.trim() : '';\n\n  const isHomepage = location.query.homepage;\n  const eventView = EventView.fromLocation(\n    isHomepage ? {...location, query: omit(location.query, 'id')} : location\n  );\n  const eventName = eventView.name;\n\n  const documentTitle =\n    typeof eventName === 'string' && String(eventName).trim().length > 0\n      ? [String(eventName).trim(), t('Discover')]\n      : [t('Discover')];\n\n  const projectSlug = eventSlug.split(':')[0];\n\n  return (\n    <SentryDocumentTitle\n      title={documentTitle.join(' - ')}\n      orgSlug={organization.slug}\n      projectSlug={projectSlug}\n    >\n      <Layout.Page>\n        <NoProjectMessage organization={organization}>\n          <EventDetailsContent\n            organization={organization}\n            location={location}\n            params={params}\n            eventView={eventView}\n            eventSlug={eventSlug}\n            isHomepage={isHomepage}\n          />\n        </NoProjectMessage>\n      </Layout.Page>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withOrganization(EventDetails);\n"],"names":["DEFAULT_SIZE","p","size","level","theme","error","EventMessage","className","levelIndicatorSize","message","annotations","Message","space","overflowEllipsis","SeenByList","avatarSize","seenBy","iconTooltip","t","maxVisibleAvatars","iconPosition","activeUser","ConfigStore","displayUsers","filter","user","id","length","SeenByWrapper","users","renderTooltip","Fragment","userDisplayName","moment","lastSeen","format","IconWrapper","title","skipWrapper","color","textColor","DiscoverBreadcrumb","eventView","event","organization","location","isHomepage","crumbs","discoverTarget","features","includes","pathname","getDiscoverLandingUrl","query","omit","generateBlankQueryStringObject","getPageFiltersQuery","push","to","getResultsViewUrlTarget","slug","label","isValid","name","Times","firstSeen","Container","FlexWrapper","StyledIconClock","legacySize","date","suffix","IconClock","LinkedIssue","AsyncComponent","getEndpoints","groupId","this","props","renderLoading","height","bottomGutter","renderError","disableLog","errors","state","Object","values","find","resp","status","type","showIcon","super","renderBody","eventId","group","issueUrl","permalink","Section","StyledIssueCard","IssueCardHeader","StyledLink","StyledShortId","shortId","avatar","project","hideName","disableLink","IssueCardBody","statsPeriod","data","IssueCardFooter","border","borderRadius","Link","backgroundSecondary","ShortId","fontSizeMedium","gray300","fontSizeSmall","EventDetailsContent","loading","reloading","undefined","isSidebarVisible","setState","tag","eventReference","tagKey","formatTagKey","key","getExpandedResults","value","eventSlug","params","trim","getEventsAPIPayload","field","projectId","split","renderContent","trackAnalyticsEvent","eventKey","eventName","event_type","organization_id","parseInt","transactionName","tags","transactionSummaryTarget","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","eventJsonUrl","eventID","hasProfilingFeature","results","metaResults","transactionId","timestamp","dateReceived","EventHeader","gap","onClick","toggleSidebar","icon","href","external","trackAdvancedAnalyticsEvent","bytes","projectSlug","hasFeature","disabled","priority","fullWidth","quickTrace","meta","errorDest","transactionDest","orgId","slugs","projects","initiallyLoaded","getViewChildTransactionTarget","childTransactionProps","eventDetailsRoute","generateQueryStringObject","showTagSummary","groupID","generateUrl","generateTagUrl","traceId","contexts","trace","trace_id","start","end","getTraceTimeRangeFromEvent","notFound","permissionDenied","renderComponent","getEventSlug","generateTitle","getMessage","EventHeaderContainer","TitleWrapper","StyledEventOrGroupTitle","MessageWrapper","breakpoints","small","EventOrGroupTitle","headerFontSize","EventDetails","homepage","EventView","documentTitle","String","join","withOrganization"],"sourceRoot":""}