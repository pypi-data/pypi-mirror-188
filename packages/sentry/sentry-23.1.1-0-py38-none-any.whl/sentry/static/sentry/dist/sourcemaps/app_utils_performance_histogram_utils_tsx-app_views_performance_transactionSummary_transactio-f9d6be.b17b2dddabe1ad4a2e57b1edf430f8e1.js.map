{"version":3,"file":"chunks/app_utils_performance_histogram_utils_tsx-app_views_performance_transactionSummary_transactio-f9d6be.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/histogram/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionEvents/utils.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///../node_modules/lodash/negate.js","webpack:///../node_modules/lodash/omitBy.js"],"sourcesContent":["import {ColumnType} from 'sentry/utils/discover/fields';\nimport {getDuration} from 'sentry/utils/formatters';\n\nimport {HistogramData} from './types';\n\nexport function getBucketWidth(data: HistogramData) {\n  // We can assume that all buckets are of equal width, use the first two\n  // buckets to get the width. The value of each histogram function indicates\n  // the beginning of the bucket.\n  return data.length >= 2 ? data[1].bin - data[0].bin : 0;\n}\n\nexport function computeBuckets(data: HistogramData) {\n  const width = getBucketWidth(data);\n\n  return data.map(item => {\n    const bucket = item.bin;\n    return {\n      start: bucket,\n      end: bucket + width,\n    };\n  });\n}\n\nexport function formatHistogramData(\n  data: HistogramData,\n  {\n    precision,\n    type,\n    additionalFieldsFn,\n  }: {\n    additionalFieldsFn?: any;\n    precision?: number;\n    type?: ColumnType;\n  } = {}\n) {\n  const formatter = (value: number): string => {\n    switch (type) {\n      case 'duration':\n        const decimalPlaces = precision ?? (value < 1000 ? 0 : 3);\n        return getDuration(value / 1000, decimalPlaces, true);\n      case 'number':\n        // This is trying to avoid some of potential rounding errors that cause bins\n        // have the same label, if the number of bins doesn't visually match what is\n        // expected, check that this rounding is correct. If this issue persists,\n        // consider formatting the bin as a string in the response\n        const factor = 10 ** (precision ?? 0);\n        return (Math.round((value + Number.EPSILON) * factor) / factor).toLocaleString();\n      default:\n        throw new Error(`Unable to format type: ${type}`);\n    }\n  };\n  return data.map(item => {\n    return {\n      value: item.count,\n      name: formatter(item.bin),\n      ...(additionalFieldsFn?.(item.bin) ?? {}),\n    };\n  });\n}\n","import {Location, Query} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {filterToField, SpanOperationBreakdownFilter} from '../filter';\nimport {TransactionFilterOptions} from '../utils';\n\nexport enum EventsDisplayFilterName {\n  p50 = 'p50',\n  p75 = 'p75',\n  p95 = 'p95',\n  p99 = 'p99',\n  p100 = 'p100',\n}\n\nexport type PercentileValues = Record<EventsDisplayFilterName, number>;\n\nexport type EventsDisplayFilter = {\n  label: string;\n  name: EventsDisplayFilterName;\n  query?: string[][];\n  sort?: {field: string; kind: 'desc' | 'asc'};\n};\n\nexport type EventsFilterOptions = {\n  [name in EventsDisplayFilterName]: EventsDisplayFilter;\n};\n\nexport type EventsFilterPercentileValues = {\n  [name in Exclude<EventsDisplayFilterName, EventsDisplayFilterName.p100>]: number;\n};\n\nexport function getEventsFilterOptions(\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter,\n  percentileValues?: EventsFilterPercentileValues\n): EventsFilterOptions {\n  const {p99, p95, p75, p50} = percentileValues\n    ? percentileValues\n    : {p99: 0, p95: 0, p75: 0, p50: 0};\n  return {\n    [EventsDisplayFilterName.p50]: {\n      name: EventsDisplayFilterName.p50,\n      query: p50 ? [['transaction.duration', `<=${p50.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p50'),\n    },\n    [EventsDisplayFilterName.p75]: {\n      name: EventsDisplayFilterName.p75,\n      query: p75 ? [['transaction.duration', `<=${p75.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p75'),\n    },\n    [EventsDisplayFilterName.p95]: {\n      name: EventsDisplayFilterName.p95,\n      query: p95 ? [['transaction.duration', `<=${p95.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p95'),\n    },\n    [EventsDisplayFilterName.p99]: {\n      name: EventsDisplayFilterName.p99,\n      query: p99 ? [['transaction.duration', `<=${p99.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p99'),\n    },\n    [EventsDisplayFilterName.p100]: {\n      name: EventsDisplayFilterName.p100,\n      label: t('p100'),\n    },\n  };\n}\n\nexport function eventsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = `/organizations/${orgSlug}/performance/summary/events/`;\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nfunction stringToFilter(option: string) {\n  if (\n    Object.values(EventsDisplayFilterName).includes(option as EventsDisplayFilterName)\n  ) {\n    return option as EventsDisplayFilterName;\n  }\n\n  return EventsDisplayFilterName.p100;\n}\nexport function decodeEventsDisplayFilterFromLocation(location: Location) {\n  return stringToFilter(\n    decodeScalar(location.query.showTransactions, EventsDisplayFilterName.p100)\n  );\n}\n\nexport function filterEventsDisplayToLocationQuery(\n  option: EventsDisplayFilterName,\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter\n) {\n  const eventsFilterOptions = getEventsFilterOptions(spanOperationBreakdownFilter);\n  const kind = eventsFilterOptions[option].sort?.kind;\n  const field = eventsFilterOptions[option].sort?.field;\n\n  const query: {showTransactions: string; sort?: string} = {\n    showTransactions: option,\n  };\n  if (kind && field) {\n    query.sort = `${kind === 'desc' ? '-' : ''}${field}`;\n  }\n  return query;\n}\n\nexport function mapShowTransactionToPercentile(\n  showTransaction\n): EventsDisplayFilterName | undefined {\n  switch (showTransaction) {\n    case TransactionFilterOptions.OUTLIER:\n      return EventsDisplayFilterName.p100;\n    case TransactionFilterOptions.SLOW:\n      return EventsDisplayFilterName.p95;\n    default:\n      return undefined;\n  }\n}\n\nexport function mapPercentileValues(percentileData?: TableDataRow | null) {\n  return {\n    p100: percentileData?.['p100()'],\n    p99: percentileData?.['p99()'],\n    p95: percentileData?.['p95()'],\n    p75: percentileData?.['p75()'],\n    p50: percentileData?.['p50()'],\n  } as PercentileValues;\n}\n\nexport function getPercentilesEventView(eventView: EventView): EventView {\n  const percentileColumns: QueryFieldValue[] = [\n    {\n      kind: 'function',\n      function: ['p100', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['p99', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['p95', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['p75', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['p50', '', undefined, undefined],\n    },\n  ];\n\n  return eventView.withColumns(percentileColumns);\n}\n","import {PlainRoute} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({\n  orgSlug,\n  subPath,\n}: {\n  orgSlug: string;\n  subPath?: string;\n}): string {\n  return `/organizations/${orgSlug}/performance/summary/${subPath ? `${subPath}/` : ''}`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n  subPath,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  subPath?: string;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n    subPath,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      referrer: 'performance-transaction-summary',\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport function generateReplayLink(routes: PlainRoute<any>[]) {\n  const referrer = getRouteStringFromRoutes(routes);\n\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query | undefined\n  ): LocationDescriptor => {\n    const replayId = tableRow.replayId;\n    if (!replayId) {\n      return {};\n    }\n\n    const replaySlug = `${tableRow['project.name']}:${replayId}`;\n\n    if (!tableRow.timestamp) {\n      return {\n        pathname: `/organizations/${organization.slug}/replays/${replaySlug}/`,\n        query: {\n          referrer,\n        },\n      };\n    }\n\n    const transactionTimestamp = new Date(tableRow.timestamp).getTime();\n\n    const transactionStartTimestamp =\n      transactionTimestamp - (tableRow['transaction.duration'] as number);\n\n    return {\n      pathname: `/organizations/${organization.slug}/replays/${replaySlug}/`,\n      query: {\n        event_t: transactionStartTimestamp,\n        referrer,\n      },\n    };\n  };\n}\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"],"names":["getBucketWidth","data","length","bin","computeBuckets","width","map","item","bucket","start","end","formatHistogramData","precision","type","additionalFieldsFn","formatter","value","decimalPlaces","getDuration","factor","Math","round","Number","EPSILON","toLocaleString","Error","count","name","EventsDisplayFilterName","getEventsFilterOptions","spanOperationBreakdownFilter","percentileValues","p99","p95","p75","p50","query","toFixed","undefined","sort","kind","field","filterToField","label","t","p100","eventsRouteWithQuery","orgSlug","transaction","projectID","pathname","project","environment","statsPeriod","decodeEventsDisplayFilterFromLocation","location","option","decodeScalar","showTransactions","Object","values","includes","filterEventsDisplayToLocationQuery","eventsFilterOptions","mapShowTransactionToPercentile","showTransaction","TransactionFilterOptions","mapPercentileValues","percentileData","getPercentilesEventView","eventView","withColumns","function","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","MutableSearch","transactionSummaryRouteWithQuery","unselectedSeries","display","trendFunction","trendColumn","additionalQuery","subPath","generateTransactionSummaryRoute","searchFilter","formatString","referrer","generateTraceLink","dateSelection","organization","tableRow","_query","traceId","trace","getTraceDetailsUrl","generateTransactionLink","transactionName","spanId","eventSlug","generateEventSlug","getTransactionDetailsUrl","slug","generateReplayLink","routes","getRouteStringFromRoutes","replayId","replaySlug","timestamp","transactionStartTimestamp","Date","getTime","event_t","SidebarSpacer","space","module","exports","predicate","TypeError","args","arguments","call","this","apply","baseIteratee","negate","pickBy","object"],"sourceRoot":""}