Metadata-Version: 2.1
Name: ludvig
Version: 0.2.6
Summary: A simple vulnerability scanner
Project-URL: Homepage, https://github.com/frodehus/ludvig
Project-URL: Bug Tracker, https://github.com/frodehus/ludvig/issues
Author-email: Frode Hus <frode@frodehus.dev>
License-File: LICENSE
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Requires-Dist: cyclonedx-python-lib==3.1.5
Requires-Dist: jschema-to-python==1.2.3
Requires-Dist: knack==0.10.1
Requires-Dist: packageurl-python==0.10.4
Requires-Dist: requests==2.28.2
Requires-Dist: sarif-om==1.0.4
Requires-Dist: urllib3==1.26.14
Requires-Dist: yara-python==4.2.3
Description-Content-Type: text/markdown

# Ludvig

[![Ludvig scan](https://github.com/FrodeHus/ludvig/actions/workflows/main.yml/badge.svg)](https://github.com/FrodeHus/ludvig/actions/workflows/main.yml)

> Want to use Ludvig with your CI pipeline? Mosey on over to the [Ludvig Action](https://github.com/marketplace/actions/ludvig-security-scanner) :)

Security scanner

Named after Kjell Aukrust's character Ludvig who thinks everything is dangerous and is scared of the dark during the day.

Why yet another scanner?

Mostly because I thought it was a fun way to use YARA rules for something in addition to malware hunting and to learn how these kind of tools are made.

## Usage

The general usage of the tool can be found by running `python -m ludvig --help`

### Container scan

Scan container: `python -m ludvig image scan --repository <repository>`

```
ludvig image scan --help

Command
    ludvig image scan : Scans a container image.

Arguments
    --repository [Required] : Container image to scan (ex: myimage:1.1).
    --custom-rules          : Path to any custom YARA rules (need to have .yar extension).
    --deobfuscated          : Returns any secrets found in plaintext. Defaults to False.
    --output-sarif          : Generates SARIF report if filename is specified.
    --severity-level        : Set severity level for reporting.  Allowed values: CRITICAL, HIGH,
                              LOW, MEDIUM, UNKNOWN.  Default: MEDIUM.
```

### Filesystem scan

Scan the filesystem: `python -m ludvig fs scan --path <path>`

```
ludvig fs scan --help

Command
    ludvig fs scan : Scans a filesystem path.

Arguments
    --path  [Required] : Path to scan.
    --custom-rules     : Path to any custom YARA rules (need to have .yar extension).
    --deobfuscated     : Returns any secrets found in plaintext. Defaults to False.
    --output-sarif     : Generates SARIF report if filename is specified.
    --severity-level   : Set severity level for reporting.  Allowed values: CRITICAL, HIGH, LOW,
                         MEDIUM, UNKNOWN.  Default: MEDIUM.
```

### Adding files/directories to ignore list

Create a `.ludvignore` file such as:

```
*.yar
debug/
```
