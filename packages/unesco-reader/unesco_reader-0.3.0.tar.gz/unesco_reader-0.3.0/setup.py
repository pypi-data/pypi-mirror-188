# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['unesco_reader']

package_data = \
{'': ['*'], 'unesco_reader': ['glossaries/*']}

install_requires = \
['pandas>=1.5.3,<2.0.0', 'requests>=2.28.2,<3.0.0', 'tabulate>=0.9.0,<0.10.0']

setup_kwargs = {
    'name': 'unesco-reader',
    'version': '0.3.0',
    'description': 'Pythonic access to UNESCO data',
    'long_description': '# unesco_reader\n\n[![PyPI](https://img.shields.io/pypi/v/unesco_reader.svg)](https://pypi.org/project/unesco_reader/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/unesco_reader.svg)](https://pypi.org/project/unesco_reader/)\n[![Documentation Status](https://readthedocs.org/projects/unesco-reader/badge/?version=latest)](https://unesco-reader.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/lpicci96/unesco_reader/branch/main/graph/badge.svg)](https://codecov.io/gh/lpicci96/unesco_reader)\n![Black](https://img.shields.io/badge/code%20style-black-000000.svg)\n\n\nPythonic access to UNESCO data\n\n`unesco_reader` is a Python package providing a simple interface to access UNESCO data. \nUNESCO does not currently provide an API to access its data, particularly the widely used \nUNESCO Institute for Statistics (UIS) data. Users must download the data from the UIS bulk download\nservices as a zipped file, and then extract the data from the zip file. This requires several manual steps,\nand some of the datasets are too large to be read easily with a standard spreadsheet program\nand must be read programmatically. UNESCO provides some guidance on how to do this in their \n[python tutorial](https://apiportal.uis.unesco.org/bdds-tutorial).\n\nWith `unesco_reader`, users don\'t need to worry about downloading the data, extracting it from the zip file,\nand following the python tutorial - this is all taken care of. This package handles accessing the data directly from the UNESCO website, and provides a simple interface to\nexplore the data.\n\n<b>Note</b>:\n\nThis package is currently in development, and only supports UIS datasets.\nIt contains basic functionality to extract and interact with the data, \nand will be expanded to include more analytical functionality in the future.\nAll feedback, suggestions, and contributions are welcome!\n\n\n## Installation\n\n```bash\n$ pip install unesco-reader\n```\n\n## Usage\n\nTo access UIS data, import the `uis` module from `unesco_reader`\n```python\nfrom unesco_reader import uis\n```\n\n\nYou can see available datasets or retrieve information for a particular dataset. \nTo see all available datasets from UIS, run the following function:\n\n```python\nuis.available_datasets()\n```\nThe output will be a list of available dataset codes `[\'SDG\', \'OPRI\', \'SCI\', \'SDG11\', \'DEM\']`.\n\nOptionally you can return available datasets as names, and see available \ndatasets that belong to a particular category.\n\n```python\nuis.available_datasets(as_names=True, category=\'education\')\n```\n\nTo see details about a particular dataset, call the `dataset_info()` \nfunction passing in either the dataset code or name.\n\n```python\nuis.dataset_info(\'SDG\')\n```\n\nInformation about the dataset will be printed:\n```\n----------------  -----------------------------------------------\ndataset_name      SDG Global and Thematic Indicators\ndataset_code      SDG\ndataset_category  education\n----------------  -----------------------------------------------\n```\n\nTo extract and explore the data in a particular dataset, use the `UIS` class. \nA `UIS` object allows a user to extract the data, either from directly from\nUIS bulk download services, or from a zipped file downloaded locally, \nand explore and analyze the data easily.\n\nTo use, first create an instance of `UIS`, passing either the dataset code or name. \nHere we create an object for the "SDG" dataset.\n\n```python\nsdg = uis.UIS("SDG")\n```\n\nOnce instantiated, you can retrieve relevant information about the dataset\n\n```python\nsdg.dataset_name # SDG Global and Thematic Indicators\nsdg.dataset_code # SDG\nsdg.dataset_category # education\nsdg.link # https://apimgmtstzgjpfeq2u763lag.blob.core.windows.net/uisdatastore/SDG.zip\n```\n\nTo access and start exploring the data, you need to load the data to the object\nusing the `load_data` method. This will download the data from the UNESCO website,\nclean it, and format it as a pandas DataFrame stored in the object. Optionally,\nif you have downloaded the zipped file locally, you can pass the path to the file.\n\n```python\nsdg = UIS("SDG")\nsdg.load_data()\n```\n\nOnce the data is loaded, you can access it using the `get_data` method.\n\n```python\ndf = sdg.get_data()\nprint(df)\n```\nThe result will be a pandas DataFrame with the data. Here is a sample what the data looks like:\n\n| INDICATOR_ID           | INDICATOR_NAME                                   | COUNTRY_ID | COUNTRY_NAME | YEAR | VALUE |\n| ---------------------- | ------------------------------------------------ | ---------- | ------------ | ---- | ----- |\n| ADMI.ENDOFLOWERSEC.MAT | Administration of a nationally-representative... | ABW        | Aruba        | 2014 | 0.0   |\n| ADMI.ENDOFLOWERSEC.MAT | Administration of a nationally-representative... | ABW        | Aruba        | 2015 | 0.0   |\n| ADMI.ENDOFLOWERSEC.MAT | Administration of a nationally-representative... | ABW        | Aruba        | 2016 | 0.0   |\n| ADMI.ENDOFLOWERSEC.MAT | Administration of a nationally-representative... | ABW        | Aruba        | 2017 | 0.0   |\n| ADMI.ENDOFLOWERSEC.MAT | Administration of a nationally-representative... | ABW        | Aruba        | 2018 | 0.0   |\n\nIn the `get_data` you can specify whether you want to return country or regional (if available) data,\nand whether to include metadata in the dataframe. \n\nSeveral other tools are available to explore the data. \nPlease see the [documentation](https://unesco-reader.readthedocs.io/en/latest/) for more details.\n\n\n## Contributing\n\nAll contributions are welcome! If you find a bug, \nor have a suggestion for a new feature, or an \nimprovement on the documentation please open an issue.\nSince this project is under current development, \nplease check open issues and make sure the issue has \nnot been raised already.\n\nA detailed overview of the contribution process can be found\n[here](https://github.com/lpicci96/unesco_reader/blob/main/CONTRIBUTING.md).\nBy contributing to this project, you agree to abide by its terms.\n\n## License\n\n`unesco_reader` was created by Luca Picci. It is licensed under the terms of the MIT license.\n\n## Credits\n\n`unesco_reader` was created with [`cookiecutter`](https://cookiecutter.readthedocs.io/en/latest/) and the\n`py-pkgs-cookiecutter` [template](https://github.com/py-pkgs/py-pkgs-cookiecutter).\n',
    'author': 'Luca Picci',
    'author_email': 'None',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'None',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4',
}


setup(**setup_kwargs)
