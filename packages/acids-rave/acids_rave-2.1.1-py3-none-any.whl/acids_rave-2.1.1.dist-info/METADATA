Metadata-Version: 2.1
Name: acids-rave
Version: 2.1.1
Summary: RAVE: a Realtime Audio Variatione autoEncoder
Author: Antoine CAILLON
Author-email: caillon@ircam.fr
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: absl-py (>=1.2.0)
Requires-Dist: einops (>=0.5.0)
Requires-Dist: gin-config
Requires-Dist: GPUtil (>=1.4.0)
Requires-Dist: librosa (>=0.9.2)
Requires-Dist: numpy (>=1.23.3)
Requires-Dist: pytorch-lightning (>=1.7.7)
Requires-Dist: PyYAML (>=6.0)
Requires-Dist: scikit-learn (>=1.1.2)
Requires-Dist: scipy (>=1.9.1)
Requires-Dist: torch (>=1.12.1)
Requires-Dist: tqdm (>=4.64.1)
Requires-Dist: udls (>=1.0.1)
Requires-Dist: cached-conv (>=2.4.0)
Requires-Dist: nn-tilde (>=1.3.4)

![rave_logo](docs/rave.png)

# RAVE: Realtime Audio Variational autoEncoder

Official implementation of _RAVE: A variational autoencoder for fast and high-quality neural audio synthesis_ ([article link](https://arxiv.org/abs/2111.05011)) by Antoine Caillon and Philippe Esling.

If you use RAVE as a part of a music performance or installation, be sure to cite either this repository or the article !

## Previous versions

The original implementation of the RAVE model can be restored using

```bash
git checkout v1
```

## Installation

Install RAVE using

```bash
pip install acids-rave
```

<!-- Detailed instructions to setup a training station for this project are available [here](docs/training_setup.md). -->


## Usage

Training a RAVE model usually involves 3 separate steps, namely _dataset preparation_, _training_ and _export_.

### Dataset preparation

### Training

### Export



## Discussion

If you have questions, want to share your experience with RAVE or share musical pieces done with the model, you can use the [Discussion tab](https://github.com/acids-ircam/RAVE/discussions) !

## Demonstration

### RAVE x nn~

Demonstration of what you can do with RAVE and the nn~ external for maxmsp !

[![RAVE x nn~](http://img.youtube.com/vi/dMZs04TzxUI/mqdefault.jpg)](https://www.youtube.com/watch?v=dMZs04TzxUI)

### embedded RAVE

Using nn~ for puredata, RAVE can be used in realtime on embedded platforms !

[![RAVE x nn~](http://img.youtube.com/vi/jAIRf4nGgYI/mqdefault.jpg)](https://www.youtube.com/watch?v=jAIRf4nGgYI)
