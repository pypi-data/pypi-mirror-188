Metadata-Version: 2.1
Name: tentacletk
Version: 0.5.1
Summary: A Python3/PySide2 marking menu style toolkit for Maya, 3ds Max, and Blender.
Home-page: https://github.com/m3trik/tentacle
Author: Ryan Simpson
Author-email: m3trik@outlook.com
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown

###### \*A Python3/PySide2 marking menu style toolkit for Maya, 3ds Max, and Blender.

*personal project. work in progress..*

## Design:

###### 

*This is a dynamic ui toolkit with a marking menu style ui (derived from a QStackedWidget) at it's core. The switchboard module (derived from QUiLoader) provides properties and convenience methods that allow quick and easy getting/setting of relevant ui and widget data across modules.*

![alt text](https://raw.githubusercontent.com/m3trik/tentacle/master/docs/toolkit_demo.gif) \*Example re-opening the last scene, renaming a material, and selecting geometry by that material.

## 

---

## Structure:

![alt text](https://raw.githubusercontent.com/m3trik/tentacle/master/docs/dependancy_graph.jpg)

#### tcl:

###### *handles main gui construction for the marking menu.*

#### events:

###### *event handling for dynamic ui.*

#### overlay:

###### *tracks cursor position and ui hierarchy to generate paint events that overlay the main widget.*

#### switchboard:

###### *loads dynamic ui with custom widgets. Contains properties and convenience methods for interacting with the ui.*

#### slots:

###### *parent class housing methods that are inherited across all app specific slot class modules.*

## 

---

## Installation:

###### 

To install:
Add the tentacle folder to a directory on your python path, or
install via pip in a command line window using:
```
python -m pip install tentacletk
```

To launch the marking menu:
For Maya:
Add a macro to a hotkey similar to the following:
```
from tentacle import tcl_maya
tcl_maya.getInstance(key_show='Key_F12').show()
```

For 3ds Max:
Add a macro to a hotkey similar to the following:
```
macroScript main_max
category: "_macros.ui"
silentErrors: false
autoUndoEnabled: false
(
	python.Execute "from tentacle import tcl_max"
	python.Execute "tcl_max.getInstance(key_show='Key_F12').show()"
)
```

See the switchboard module for a demo on how to launch a stand alone dynamic ui.
