"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import arg_services.graph.v1.graph_pb2
import arg_services.nlp.v1.nlp_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class RetrieveRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class CaseGraphsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> arg_services.graph.v1.graph_pb2.Graph: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: arg_services.graph.v1.graph_pb2.Graph | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CASE_GRAPHS_FIELD_NUMBER: builtins.int
    CASEBASE_NAMES_FIELD_NUMBER: builtins.int
    QUERY_GRAPH_FIELD_NUMBER: builtins.int
    QUERY_TEXT_FIELD_NUMBER: builtins.int
    NLP_CONFIG_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SEMANTIC_RETRIEVAL_FIELD_NUMBER: builtins.int
    STRUCTURAL_RETRIEVAL_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    @property
    def case_graphs(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, arg_services.graph.v1.graph_pb2.Graph]: ...
    @property
    def casebase_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def query_graph(self) -> arg_services.graph.v1.graph_pb2.Graph: ...
    query_text: builtins.str
    @property
    def nlp_config(self) -> arg_services.nlp.v1.nlp_pb2.NlpConfig: ...
    limit: builtins.int
    semantic_retrieval: builtins.bool
    structural_retrieval: builtins.bool
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        case_graphs: collections.abc.Mapping[builtins.str, arg_services.graph.v1.graph_pb2.Graph] | None = ...,
        casebase_names: collections.abc.Iterable[builtins.str] | None = ...,
        query_graph: arg_services.graph.v1.graph_pb2.Graph | None = ...,
        query_text: builtins.str = ...,
        nlp_config: arg_services.nlp.v1.nlp_pb2.NlpConfig | None = ...,
        limit: builtins.int = ...,
        semantic_retrieval: builtins.bool = ...,
        structural_retrieval: builtins.bool = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras", b"extras", "nlp_config", b"nlp_config", "query", b"query", "query_graph", b"query_graph", "query_text", b"query_text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["case_graphs", b"case_graphs", "casebase_names", b"casebase_names", "extras", b"extras", "limit", b"limit", "nlp_config", b"nlp_config", "query", b"query", "query_graph", b"query_graph", "query_text", b"query_text", "semantic_retrieval", b"semantic_retrieval", "structural_retrieval", b"structural_retrieval"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["query", b"query"]) -> typing_extensions.Literal["query_graph", "query_text"] | None: ...

global___RetrieveRequest = RetrieveRequest

@typing_extensions.final
class RetrieveResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEMANTIC_RANKING_FIELD_NUMBER: builtins.int
    STRUCTURAL_RANKING_FIELD_NUMBER: builtins.int
    STRUCTURAL_MAPPING_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    @property
    def semantic_ranking(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RetrievedCase]: ...
    @property
    def structural_ranking(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RetrievedCase]: ...
    @property
    def structural_mapping(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RetrievedMapping]: ...
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        semantic_ranking: collections.abc.Iterable[global___RetrievedCase] | None = ...,
        structural_ranking: collections.abc.Iterable[global___RetrievedCase] | None = ...,
        structural_mapping: collections.abc.Iterable[global___RetrievedMapping] | None = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras", b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extras", b"extras", "semantic_ranking", b"semantic_ranking", "structural_mapping", b"structural_mapping", "structural_ranking", b"structural_ranking"]) -> None: ...

global___RetrieveResponse = RetrieveResponse

@typing_extensions.final
class RetrievedCase(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    SIMILARITY_FIELD_NUMBER: builtins.int
    id: builtins.str
    similarity: builtins.float
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        similarity: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "similarity", b"similarity"]) -> None: ...

global___RetrievedCase = RetrievedCase

@typing_extensions.final
class RetrievedMapping(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CASE_FIELD_NUMBER: builtins.int
    NODE_MAPPINGS_FIELD_NUMBER: builtins.int
    @property
    def case(self) -> global___RetrievedCase: ...
    @property
    def node_mappings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Mapping]: ...
    def __init__(
        self,
        *,
        case: global___RetrievedCase | None = ...,
        node_mappings: collections.abc.Iterable[global___Mapping] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["case", b"case"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["case", b"case", "node_mappings", b"node_mappings"]) -> None: ...

global___RetrievedMapping = RetrievedMapping

@typing_extensions.final
class Mapping(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUERY_ID_FIELD_NUMBER: builtins.int
    CASE_ID_FIELD_NUMBER: builtins.int
    SIMILARITY_FIELD_NUMBER: builtins.int
    query_id: builtins.str
    case_id: builtins.str
    similarity: builtins.float
    def __init__(
        self,
        *,
        query_id: builtins.str = ...,
        case_id: builtins.str = ...,
        similarity: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["case_id", b"case_id", "query_id", b"query_id", "similarity", b"similarity"]) -> None: ...

global___Mapping = Mapping
