{"version":3,"sources":["OnProgress.tsx","index.tsx"],"names":["OnProgress","state","isUploading","progress","onUpload","setState","setInterval","prev","Math","floor","setTimeout","render","style","background","width","height","centered","open","footer","closable","display","justifyContent","padding","type","percent","strokeColor","trailColor","format","color","textAlign","fontSize","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"6QAUMA,E,4MACGC,MAAQ,CACbC,aAAa,EACbC,SAAS,EACTC,SAAS,WACP,EAAKC,SAAS,CAACH,aAAY,IAE3BI,aAAY,WACP,EAAKL,MAAME,SAAS,KACrB,EAAKE,UAAS,SAACE,GAAD,MAAa,CAACJ,SAASK,KAAKC,MAAMF,EAAKJ,SAAU,IAAI,UAEpE,KACHO,YAAW,WACL,EAAKL,SAAS,CAACH,aAAY,EAAOC,SAAS,MAC9C,O,EAIAQ,OAAS,WASd,OARAL,aAAY,WACP,EAAKL,MAAME,SAAS,IACrB,EAAKE,UAAS,SAACE,GAAD,MAAa,CAACJ,SAASK,KAAKC,MAAMF,EAAKJ,SAAS,SAE/D,KAMC,yBAAKS,MAAO,CAACC,WAAW,UAAWC,MAAM,MAAOC,OAAO,MACrD,kBAAC,IAAD,CAEEC,UAAQ,EACRC,KAAM,EAAKhB,MAAMC,YACjBgB,OAAQ,KACRC,UAAU,GAEV,kBAAC,IAAD,CAAUP,MAAO,CAACQ,QAAQ,OAAQC,eAAe,SAAUC,QAAQ,QAASC,KAAK,SAASC,QAAS,EAAKvB,MAAME,SAAUsB,YAAY,UAAUC,WAAW,UAAUC,OAAQ,SAACH,GAAD,OAAa,0BAAMZ,MAAO,CAACgB,MAAO,SAAUJ,EAA/B,QACxL,uBAAGZ,MAAO,CAACiB,UAAU,SAAUC,SAAS,KAAxC,mD,yBAtCaC,KA8CVC,cAAwBhC,GCrDvCiC,IAAStB,OACP,kBAAC,IAAMuB,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.0ee0b23e.chunk.js","sourcesContent":["import {\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport './CardComponent.css'\r\nimport Modal from \"antd/es/modal\";\r\nimport Progress from \"antd/es/progress\";\r\n\r\nclass OnProgress extends StreamlitComponentBase<any> {\r\n  public state = { \r\n    isUploading: true, \r\n    progress:1, \r\n    onUpload:()=>{\r\n      this.setState({isUploading:true})\r\n\r\n      setInterval(()=>{\r\n        if(this.state.progress<100){\r\n          this.setState((prev:any)=>({progress:Math.floor(prev.progress+(100/30))}))\r\n        }\r\n      }, 100)\r\n      setTimeout(()=>{\r\n            this.setState({isUploading:false, progress:1})\r\n      }, 2000);\r\n    },\r\n }\r\n\r\n  public render = (): ReactNode => {\r\n    setInterval(()=>{\r\n      if(this.state.progress<99){\r\n        this.setState((prev:any)=>({progress:Math.floor(prev.progress+1)}))\r\n      }\r\n    }, 300)\r\n    // setTimeout(()=>{\r\n    //       this.setState({isUploading:false, progress:1})\r\n    // }, 2000);\r\n    return (\r\n      // <div style={{background:\"#11111\", width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\r\n        <div style={{background:\"#111111\", width:'70%', height:600, }}>\r\n          <Modal\r\n           \r\n            centered\r\n            open={this.state.isUploading}\r\n            footer={null}\r\n            closable={false}\r\n          >\r\n            <Progress style={{display:\"flex\", justifyContent:\"center\", padding:\"20px\"}} type=\"circle\" percent={this.state.progress} strokeColor='#FF4B4B' trailColor=\"#888C9C\" format={(percent) => <span style={{color: '#fff'}}>{percent}%</span>} />\r\n            <p style={{textAlign:'center', fontSize:16}}>We are processing the data you have uploaded</p>\r\n          </Modal>\r\n       </div>\r\n      // </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(OnProgress)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport OnProgress from \"./OnProgress\"\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <OnProgress/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}