{"version":3,"sources":["OnHoverTabs.tsx","index.tsx"],"names":["OnHoverTabs","props","render","labelName","args","iconName","styles","data","forEach","v","i","results","map","item","index","className","style","key","id","onClick","onClicked","icon","label","console","log","setState","prevState","isMoney","Streamlit","setComponentValue","state","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"0TAeMA,G,8DAEJ,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAODC,OAAS,WAEd,IAAMC,EAAqB,EAAKF,MAAMG,KAAX,QACrBC,EAAoB,EAAKJ,MAAMG,KAAX,SACpBE,EAAc,EAAKL,MAAMG,KAAX,QAA6B,GAE7CG,EAAa,GACjBF,EAASG,SAAQ,SAACC,EAAEC,GAAH,OACfH,EAAK,GAAD,mBAAMA,GAAN,CAAY,CAAC,GAAKG,EAAE,EAAG,MAASP,EAAUO,GAAI,KAAOD,EAAG,SAAU,QAGxE,IAAME,EAAUJ,EAAKK,KAAI,SAACC,EAAMC,GAAP,OACT,wCAAMC,UAAU,iBAAoBC,gBAAMV,EAAM,kBAC9C,sCAAIS,UAAU,OACRC,gBAAMV,EAAM,UADlB,CAEEW,IAAKJ,EAAKK,GACVC,QAAS,kBAAM,EAAKC,UAAUP,MAAO,qCAAGE,UAAU,kBAAqBC,gBAAMV,EAAM,YAAiBO,EAAKQ,MAAS,0BAAMN,UAAU,aAAaF,EAAKS,YAItJ,OACE,iCAYE,uCAAKP,UAAU,UAAaC,gBAAMV,EAAM,SACtC,wBAAIS,UAAU,oBACXJ,MA3CL,EAsDhBS,UAAY,SAACP,GAEjBU,QAAQC,IAAI,EAAKvB,OAEjB,EAAKwB,UACH,SAAAC,GAAS,MAAK,CAACL,KAAKR,EAAKQ,KAAMC,MAAMT,EAAKS,MAAOK,SAAQ,MAC3C,kBAAMC,IAAUC,kBAAkBhB,EAAKS,WA1DzD,EAAKQ,MAAQ,CAACT,KAAK,GACjBC,MAAM,GACNK,SAAS,GAJW,E,uBAFAI,MAuETC,cAAwBhC,G,MCjFzCiC,IAAS/B,OACP,kBAAC,IAAMgC,WAAP,KAEI,kBAAC,EAAD,OAGJC,SAASC,eAAe,W","file":"static/js/main.65f94142.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\nimport { style } from 'glamor';\r\nimport \"./component.css\"\r\nimport \"./icons/icon.css\"\r\ninterface State {\r\n  label: string,\r\n  icon: string,\r\n  isMoney: boolean,\r\n}\r\n\r\nclass OnHoverTabs extends StreamlitComponentBase<State> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {icon:\"\",\r\n      label:\"\",\r\n      isMoney: false\r\n    }\r\n  }\r\n\r\n  public render = (): ReactNode => {\r\n\r\n    const labelName:string[] = this.props.args[\"tabName\"]\r\n    const iconName:string[] = this.props.args[\"iconName\"]\r\n    const styles: any = this.props.args['styles'] || {}\r\n\r\n    let data:any[] = [];\r\n    iconName.forEach((v,i) => \r\n      data= [...data, {\"id\":i+1, \"label\": labelName[i], \"icon\":v, \"isMoney\":false}]\r\n    )\r\n   \r\n    const results = data.map((item, index) => (\r\n                    <span className=\"tab-container\" {...style(styles['tabOptionsStyle'])}>\r\n                      <li className=\"tab\"\r\n                        {...style(styles['tabStyle'])}                                   \r\n                        key={item.id}\r\n                        onClick={() => this.onClicked(item)}><i className=\"material-icons\" {...style(styles['iconStyle'])}>{item.icon}</i><span className=\"labelName\">{item.label}</span></li></span>\r\n                    ))\r\n                   \r\n\r\n                      return (\r\n                        <section>\r\n                        {/* {\r\n                          this.state.isMoney ?\r\n                          <div className=\" offcanvas-bottom drawer\" id=\"offcanvasBottom\" onClick={()=>this.setState({isMoney:false})} style={{background:'#0E1117', height:'100vh'}}>\r\n                            <div className=\"offcanvas-header\" style={{padding:10, margin:10, float:'right', cursor: 'pointer'}}>\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"black\" className=\"bi bi-x-circle\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n                              </svg>\r\n                            </div>\r\n                          </div>\r\n                          : */}\r\n                          <div className=\"navtab\" {...style(styles['navtab'])}> \r\n                            <ul className=\"all-tabs-options\">\r\n                              {results}\r\n                            </ul> \r\n                          </div>\r\n                        {/* } */}\r\n                      </section>\r\n                      )\r\n                    \r\n\r\n  \r\n  }\r\n\r\n  private onClicked = (item: any): void => {\r\n   \r\n      console.log(this.props)\r\n\r\n      this.setState(\r\n        prevState => ({icon:item.icon, label:item.label, isMoney:true}),\r\n                      () => Streamlit.setComponentValue(item.label)\r\n      )\r\n   \r\n    }\r\n   \r\n  }\r\n   \r\n\r\n\r\n  export default withStreamlitConnection(OnHoverTabs)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport OnHoverTabs from \"./OnHoverTabs\"\r\nimport 'antd/dist/reset.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   \r\n      <OnHoverTabs/>\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}