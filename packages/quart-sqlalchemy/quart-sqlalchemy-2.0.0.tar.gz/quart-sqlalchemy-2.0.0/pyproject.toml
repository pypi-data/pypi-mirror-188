[project]
name = "quart-sqlalchemy"
version = "2.0.0"
description = "A Quart port of Flask SQLAlchemy."
authors = [
    {name = "Joe Black", email = "me@joeblack.nyc"},
]
dependencies = [
    "quart~=0.18.3",
    "SQLAlchemy>=1.4.35, <2.1.0",
    "anyio~=3.3.4",
]
requires-python = ">=3.7"
readme = "README.rst"
license = {text = "MIT"}

[project.urls]
"Homepage" = "https://github.com/joeblackwaslike/quart-sqlalchemy"
"Bug Tracker" = "https://github.com/joeblackwaslike/quart-sqlalchemy/issues"

# switch to setuptools due to recent issues with pdm versions
[build-system]
# requires = ["pdm-pep517>=1.0"]
# build-backend = "pdm.pep517.api"
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

# [tool.pdm]
# version = { source = "file", path = "src/quart_sqlalchemy/__init__.py" }

[tool.pdm.dev-dependencies]
tests = [
    "pytest~=7.2.1",
    "pytest-asyncio~=0.20.3",
    "pytest-mock~=3.10.0",
    "pytest-cov",
    "coverage[toml]",
]
dev = [
    "pre-commit",
    "tox",
    "tox-pdm",
    "mypy",
    "sqlalchemy[mypy]",
]
docs = [
    "sphinx",
    "pallets-sphinx-themes",
    "sphinx-issues",
    "sphinxcontrib-log-cabinet",
]


[tool.pdm.build]
source-includes = [
    "docs/",
    # "examples/",
    "tests/",
    "CHANGES.rst",
    "pdm.lock",
    "tox.ini",
]
excludes = [
    "docs/_build",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["error"]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["src", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.isort]
profile = "black"
src_paths = ["src", "tests", "examples"]
force_single_line = true
use_parentheses = true
atomic = true
lines_after_imports = 2
line_length = 100
order_by_type = false
known_first_party = ["quart_sqlalchemy", "tests"]

[tool.mypy]
python_version = "3.7"
files = ["src/quart_sqlalchemy", "tests"]
show_error_codes = true
pretty = true
strict = true
# db.Model attribute doesn't recognize subclassing
disable_error_code = ["name-defined"]
# db.Model is Any
disallow_subclassing_any = false

[[tool.mypy.overrides]]
module = [
    "cryptography.*",
    "importlib_metadata.*",
]
ignore_missing_imports = true
