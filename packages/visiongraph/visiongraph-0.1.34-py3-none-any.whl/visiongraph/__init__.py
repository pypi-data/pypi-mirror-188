# This file has been auto-generated by setup.py.
import logging
from .AsyncGraphNode import AsyncGraphNode
from .BaseGraph import BaseGraph
from .GraphNode import GraphNode
from .Processable import Processable
from .VisionGraph import VisionGraph
from .VisionGraphBuilder import add_breakpoint
from .VisionGraphBuilder import create_graph
from .VisionGraphBuilder import custom
from .VisionGraphBuilder import extract
from .VisionGraphBuilder import passthrough
from .VisionGraphBuilder import sequence
from .data.Asset import Asset
from .data.LocalAsset import LocalAsset
from .data.RepositoryAsset import RepositoryAsset
from .dsp.BaseFilterNumpy import BaseFilterNumpy
from .dsp.LandmarkSmoothFilter import LandmarkSmoothFilter
from .dsp.OneEuroFilter import OneEuroFilter
from .dsp.OneEuroFilterNumpy import OneEuroFilterNumpy
from .dsp.VectorNumpySmoothFilter import VectorNumpySmoothFilter
from .estimator.BaseClassifier import BaseClassifier
from .estimator.BaseEstimator import BaseEstimator
from .estimator.BaseVisionEngine import BaseVisionEngine
from .estimator.ChainEstimator import ChainEstimator
from .estimator.ScoreThresholdEstimator import ScoreThresholdEstimator
from .estimator.VisionClassifier import VisionClassifier
from .estimator.VisionEstimator import VisionEstimator
from .estimator.calculator.UndistortionCalculator import UndistortionCalculator
from .estimator.inpaint.BaseInpainter import BaseInpainter
try:
    from .estimator.inpaint.GMCNNInpainter import GMCNNConfig
except ImportError as ex:
    logging.debug(f"Could not import GMCNNConfig")
try:
    from .estimator.inpaint.GMCNNInpainter import GMCNNInpainter
except ImportError as ex:
    logging.debug(f"Could not import GMCNNInpainter")
try:
    from .estimator.onnx.ONNXVisionEngine import ONNXVisionEngine
except ImportError as ex:
    logging.debug(f"Could not import ONNXVisionEngine")
try:
    from .estimator.openvino.OpenVinoEngine import OpenVinoEngine
except ImportError as ex:
    logging.debug(f"Could not import OpenVinoEngine")
try:
    from .estimator.openvino.OpenVinoObjectDetector import OpenVinoObjectDetector
except ImportError as ex:
    logging.debug(f"Could not import OpenVinoObjectDetector")
try:
    from .estimator.openvino.SyncInferencePipeline import SyncInferencePipeline
except ImportError as ex:
    logging.debug(f"Could not import SyncInferencePipeline")
try:
    from .estimator.openvino.VisionInferenceEngine import VisionInferenceEngine
except ImportError as ex:
    logging.debug(f"Could not import VisionInferenceEngine")
try:
    from .estimator.spatial.CenterNetDetector import CenterNetConfig
except ImportError as ex:
    logging.debug(f"Could not import CenterNetConfig")
try:
    from .estimator.spatial.CenterNetDetector import CenterNetDetector
except ImportError as ex:
    logging.debug(f"Could not import CenterNetDetector")
try:
    from .estimator.spatial.DETRDetector import DETRConfig
except ImportError as ex:
    logging.debug(f"Could not import DETRConfig")
try:
    from .estimator.spatial.DETRDetector import DETRDetector
except ImportError as ex:
    logging.debug(f"Could not import DETRDetector")
from .estimator.spatial.InstanceSegmentationEstimator import InstanceSegmentationEstimator
from .estimator.spatial.LandmarkEstimator import LandmarkEstimator
from .estimator.spatial.ObjectDetector import ObjectDetector
from .estimator.spatial.RoiEstimator import RoiEstimator
try:
    from .estimator.spatial.SSDDetector import SSDConfig
except ImportError as ex:
    logging.debug(f"Could not import SSDConfig")
try:
    from .estimator.spatial.SSDDetector import SSDDetector
except ImportError as ex:
    logging.debug(f"Could not import SSDDetector")
from .estimator.spatial.SlidingWindowEstimator import SlidingWindowEstimator
from .estimator.spatial.SpatialCascadeEstimator import SpatialCascadeEstimator
try:
    from .estimator.spatial.YOLODetector import YOLOArchitecture
except ImportError as ex:
    logging.debug(f"Could not import YOLOArchitecture")
try:
    from .estimator.spatial.YOLODetector import YOLOConfig
except ImportError as ex:
    logging.debug(f"Could not import YOLOConfig")
try:
    from .estimator.spatial.YOLODetector import YOLODetector
except ImportError as ex:
    logging.debug(f"Could not import YOLODetector")
try:
    from .estimator.spatial.camera.ArUcoCameraPoseEstimator import ArUcoCameraPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import ArUcoCameraPoseEstimator")
from .estimator.spatial.camera.BoardCameraCalibrator import BoardCameraCalibrator
try:
    from .estimator.spatial.camera.ChArUcoCalibrator import ChArUcoCalibrator
except ImportError as ex:
    logging.debug(f"Could not import ChArUcoCalibrator")
from .estimator.spatial.camera.ChessboardCalibrator import ChessboardCalibrator
try:
    from .estimator.spatial.face.AdasFaceDetector import AdasFaceConfig
except ImportError as ex:
    logging.debug(f"Could not import AdasFaceConfig")
try:
    from .estimator.spatial.face.AdasFaceDetector import AdasFaceDetector
except ImportError as ex:
    logging.debug(f"Could not import AdasFaceDetector")
from .estimator.spatial.face.FaceDetector import FaceDetector
try:
    from .estimator.spatial.face.OpenVinoFaceDetector import OpenVinoFaceConfig
except ImportError as ex:
    logging.debug(f"Could not import OpenVinoFaceConfig")
try:
    from .estimator.spatial.face.OpenVinoFaceDetector import OpenVinoFaceDetector
except ImportError as ex:
    logging.debug(f"Could not import OpenVinoFaceDetector")
from .estimator.spatial.face.landmark.FaceLandmarkEstimator import FaceLandmarkEstimator
try:
    from .estimator.spatial.face.landmark.MediaPipeFaceDetector import MediaPipeFaceDetector
except ImportError as ex:
    logging.debug(f"Could not import MediaPipeFaceDetector")
try:
    from .estimator.spatial.face.landmark.MediaPipeFaceDetector import MediaPipeFaceModel
except ImportError as ex:
    logging.debug(f"Could not import MediaPipeFaceModel")
try:
    from .estimator.spatial.face.landmark.RegressionLandmarkEstimator import RegressionLandmarkEstimator
except ImportError as ex:
    logging.debug(f"Could not import RegressionLandmarkEstimator")
try:
    from .estimator.spatial.face.pose.AdasHeadPoseEstimator import AdasHeadPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import AdasHeadPoseEstimator")
from .estimator.spatial.face.pose.HeadPoseEstimator import HeadPoseEstimator
from .estimator.spatial.face.recognition.FaceRecognitionEstimator import FaceRecognitionEstimator
try:
    from .estimator.spatial.face.recognition.FaceReidentificationEstimator import FaceReidentificationConfig
except ImportError as ex:
    logging.debug(f"Could not import FaceReidentificationConfig")
try:
    from .estimator.spatial.face.recognition.FaceReidentificationEstimator import FaceReidentificationEstimator
except ImportError as ex:
    logging.debug(f"Could not import FaceReidentificationEstimator")
from .estimator.spatial.hand.HandDetector import FaceDetector
from .estimator.spatial.hand.landmark.HandLandmarkEstimator import HandLandmarkEstimator
try:
    from .estimator.spatial.hand.landmark.MediaPipeHandEstimator import HandModelComplexity
except ImportError as ex:
    logging.debug(f"Could not import HandModelComplexity")
try:
    from .estimator.spatial.hand.landmark.MediaPipeHandEstimator import MediaPipeHandEstimator
except ImportError as ex:
    logging.debug(f"Could not import MediaPipeHandEstimator")
try:
    from .estimator.spatial.hand.landmark.OpenPoseHandEstimator import OpenPoseHandEstimator
except ImportError as ex:
    logging.debug(f"Could not import OpenPoseHandEstimator")
try:
    from .estimator.spatial.pose.AEPoseEstimator import AEPoseConfig
except ImportError as ex:
    logging.debug(f"Could not import AEPoseConfig")
try:
    from .estimator.spatial.pose.AEPoseEstimator import AEPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import AEPoseEstimator")
try:
    from .estimator.spatial.pose.EfficientPoseEstimator import EfficientPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import EfficientPoseEstimator")
try:
    from .estimator.spatial.pose.EfficientPoseEstimator import EfficientPoseEstimatorConfig
except ImportError as ex:
    logging.debug(f"Could not import EfficientPoseEstimatorConfig")
try:
    from .estimator.spatial.pose.LiteHRNetEstimator import LiteHRNetConfig
except ImportError as ex:
    logging.debug(f"Could not import LiteHRNetConfig")
try:
    from .estimator.spatial.pose.LiteHRNetEstimator import LiteHRNetPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import LiteHRNetPoseEstimator")
try:
    from .estimator.spatial.pose.LitePoseEstimator import LitePoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import LitePoseEstimator")
try:
    from .estimator.spatial.pose.LitePoseEstimator import LitePoseEstimatorConfig
except ImportError as ex:
    logging.debug(f"Could not import LitePoseEstimatorConfig")
try:
    from .estimator.spatial.pose.MediaPipePoseEstimator import MediaPipePoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import MediaPipePoseEstimator")
try:
    from .estimator.spatial.pose.MediaPipePoseEstimator import PoseModelComplexity
except ImportError as ex:
    logging.debug(f"Could not import PoseModelComplexity")
try:
    from .estimator.spatial.pose.MobileHumanPoseEstimator import MobileHumanPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import MobileHumanPoseEstimator")
try:
    from .estimator.spatial.pose.MobileNetV2PoseEstimator import MobileNetV2PoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import MobileNetV2PoseEstimator")
try:
    from .estimator.spatial.pose.MobileNetV2PoseEstimator import MobileNetV2PoseEstimatorConfig
except ImportError as ex:
    logging.debug(f"Could not import MobileNetV2PoseEstimatorConfig")
try:
    from .estimator.spatial.pose.MoveNetPoseEstimator import MoveNetConfig
except ImportError as ex:
    logging.debug(f"Could not import MoveNetConfig")
try:
    from .estimator.spatial.pose.MoveNetPoseEstimator import MoveNetPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import MoveNetPoseEstimator")
try:
    from .estimator.spatial.pose.OpenPoseEstimator import OpenPoseConfig
except ImportError as ex:
    logging.debug(f"Could not import OpenPoseConfig")
try:
    from .estimator.spatial.pose.OpenPoseEstimator import OpenPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import OpenPoseEstimator")
from .estimator.spatial.pose.PoseEstimator import PoseEstimator
try:
    from .estimator.spatial.pose.TopDownPoseEstimator import TopDownPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import TopDownPoseEstimator")
from .estimator.spatial.pose.__init__ import add_pose_estimation_step_choices
try:
    from .estimator.spatial.segmentation.MaskRCNNEstimator import MaskRCNNConfig
except ImportError as ex:
    logging.debug(f"Could not import MaskRCNNConfig")
try:
    from .estimator.spatial.segmentation.MaskRCNNEstimator import MaskRCNNEstimator
except ImportError as ex:
    logging.debug(f"Could not import MaskRCNNEstimator")
try:
    from .estimator.spatial.segmentation.MediaPipeSelfieSegmentation import MediaPipeSelfieSegmentation
except ImportError as ex:
    logging.debug(f"Could not import MediaPipeSelfieSegmentation")
try:
    from .estimator.spatial.segmentation.MediaPipeSelfieSegmentation import SelfieSegmentationModel
except ImportError as ex:
    logging.debug(f"Could not import SelfieSegmentationModel")
try:
    from .estimator.spatial.segmentation.YolactEstimator import YolactConfig
except ImportError as ex:
    logging.debug(f"Could not import YolactConfig")
try:
    from .estimator.spatial.segmentation.YolactEstimator import YolcatEstimator
except ImportError as ex:
    logging.debug(f"Could not import YolcatEstimator")
try:
    from .estimator.translation.DeblurGANv2 import DeblurGANv2
except ImportError as ex:
    logging.debug(f"Could not import DeblurGANv2")
try:
    from .estimator.translation.DeblurGANv2 import DeblurGANv2Config
except ImportError as ex:
    logging.debug(f"Could not import DeblurGANv2Config")
from .estimator.translation.DepthEstimator import DepthEstimator
try:
    from .estimator.translation.MidasDepthEstimator import MidasConfig
except ImportError as ex:
    logging.debug(f"Could not import MidasConfig")
try:
    from .estimator.translation.MidasDepthEstimator import MidasDepthEstimator
except ImportError as ex:
    logging.debug(f"Could not import MidasDepthEstimator")
try:
    from .input.AzureKinectInput import AzureKinectInput
except ImportError as ex:
    logging.debug(f"Could not import AzureKinectInput")
from .input.BaseDepthCamera import BaseDepthCamera
from .input.BaseDepthInput import BaseDepthInput
from .input.BaseInput import BaseInput
try:
    from .input.CamGearInput import CamGearInput
except ImportError as ex:
    logging.debug(f"Could not import CamGearInput")
from .input.ImageInput import ImageInput
try:
    from .input.RealSenseInput import RealSenseInput
except ImportError as ex:
    logging.debug(f"Could not import RealSenseInput")
from .input.VideoCaptureInput import VideoCaptureInput
from .model.CameraIntrinsics import CameraIntrinsics
from .model.CameraStreamType import CameraStreamType
from .model.DepthBuffer import DepthBuffer
from .model.VisionEngineOutput import VisionEngineOutput
from .model.geometry.BoundingBox2D import BoundingBox2D
from .model.geometry.Size2D import Size2D
from .model.parameter.ArgumentConfigurable import ArgumentConfigurable
from .model.tracker.Trackable import Trackable
from .model.types.RealSenseColorScheme import RealSenseColorScheme
from .node.ApplyNode import ApplyNode
from .node.BreakpointNode import BreakpointNode
from .node.CustomNode import CustomNode
from .node.ExtractNode import ExtractNode
from .node.PassThroughNode import PassThroughNode
from .node.SequenceNode import SequenceNode
from .output.ImagePreview import ImagePreview
from .output.fbs.FrameBufferSharingServer import FrameBufferSharingServer
try:
    from .output.fbs.SpoutServer import SpoutServer
except ImportError as ex:
    logging.debug(f"Could not import SpoutServer")
try:
    from .output.fbs.SyphonServer import SyphonServer
except ImportError as ex:
    logging.debug(f"Could not import SyphonServer")
from .recorder.AsyncFrameSetRecorder import AsyncFrameSetRecorder
from .recorder.BaseFrameRecorder import BaseFrameRecorder
from .recorder.CV2VideoRecorder import CV2VideoRecorder
from .recorder.FrameSetRecorder import FrameSetRecorder
try:
    from .recorder.MoviePyVideoRecorder import MoviePyVideoRecorder
except ImportError as ex:
    logging.debug(f"Could not import MoviePyVideoRecorder")
try:
    from .recorder.VidGearVideoRecorder import VidGearVideoRecorder
except ImportError as ex:
    logging.debug(f"Could not import VidGearVideoRecorder")
from .result.ArUcoCameraPose import ArUcoCameraPose
from .result.ArUcoMarkerDetection import ArUcoMarkerDetection
from .result.BaseResult import BaseResult
from .result.CameraPoseResult import CameraPoseResult
from .result.ClassificationResult import ClassificationResult
from .result.DepthMap import DepthMap
from .result.EmbeddingResult import EmbeddingResult
from .result.HeadPoseResult import HeadPoseResult
from .result.ImageResult import ImageResult
from .result.ResultAnnotator import ResultAnnotator
from .result.ResultDict import ResultDict
from .result.ResultList import ResultList
from .result.spatial.InstanceSegmentationResult import InstanceSegmentationResult
from .result.spatial.LandmarkDetectionResult import LandmarkDetectionResult
from .result.spatial.ObjectDetectionResult import ObjectDetectionResult
from .result.spatial.SpatialCascadeResult import SpatialCascadeResult
from .result.spatial.face.BlazeFace import BlazeFace
try:
    from .result.spatial.face.BlazeFaceMesh import BlazeFaceMesh
except ImportError as ex:
    logging.debug(f"Could not import BlazeFaceMesh")
from .result.spatial.face.FaceDetectionResult import FaceDetectionResult
from .result.spatial.face.FaceLandmarkResult import FaceLandmarkResult
from .result.spatial.face.RegressionFace import RegressionFace
try:
    from .result.spatial.hand.BlazeHand import BlazeHand
except ImportError as ex:
    logging.debug(f"Could not import BlazeHand")
from .result.spatial.hand.HandDetectionResult import HandDetectionResult
from .result.spatial.hand.HandLandmarkResult import HandLandmarkResult
from .result.spatial.hand.Handedness import Handedness
try:
    from .result.spatial.hand.OpenPoseHand import OpenPoseHand
except ImportError as ex:
    logging.debug(f"Could not import OpenPoseHand")
try:
    from .result.spatial.pose.BlazePose import BlazePose
except ImportError as ex:
    logging.debug(f"Could not import BlazePose")
try:
    from .result.spatial.pose.BlazePoseSegmentation import BlazePoseSegmentation
except ImportError as ex:
    logging.debug(f"Could not import BlazePoseSegmentation")
from .result.spatial.pose.COCOOpenPose import COCOOpenPose
from .result.spatial.pose.COCOPose import COCOPose
from .result.spatial.pose.EfficientPose import EfficientPose
from .result.spatial.pose.MobileHumanPose import MobileHumanPose
from .result.spatial.pose.PoseLandmarkResult import PoseLandmarkResult
from .tracker.BaseObjectDetectionTracker import BaseObjectDetectionTracker
from .tracker.CentroidTracker import CentroidTracker
from .tracker.FlateTracker import FlateTracker
from .tracker.MotpyTracker import MotpyTracker
from .util.ArgUtils import PipelineNodeFactory
from .util.ArgUtils import add_dict_choice_argument
from .util.ArgUtils import add_enum_choice_argument
from .util.ArgUtils import add_step_choice_argument
from .util.ArgUtils import dict_choice
from .util.ArgUtils import float_range
from .util.CodeUtils import deprecated
from .util.CollectionUtils import default_value_dict
from .util.DrawingUtils import draw_axis
from .util.DrawingUtils import draw_bbox
from .util.DrawingUtils import draw_landmark
from .util.ImageUtils import align_image
from .util.ImageUtils import apply_mask
from .util.ImageUtils import extract_roi_safe
from .util.ImageUtils import resize_and_letter_box
from .util.ImageUtils import resize_and_pad
from .util.ImageUtils import roi
from .util.LinalgUtils import project_pixel_to_point
from .util.LinalgUtils import project_pixels_to_points
from .util.LinalgUtils import project_point_to_pixel
from .util.LinalgUtils import project_points_to_pixels
from .util.LoggingUtils import add_logging_parameter
from .util.LoggingUtils import setup_logging
from .util.MathUtils import StreamingMovingAverage
from .util.MathUtils import constrain
from .util.MathUtils import map_value
from .util.MathUtils import rotate_2d
from .util.MathUtils import transform_coordinates
from .util.NetworkUtils import download_file
from .util.NetworkUtils import prepare_data_file
from .util.NetworkUtils import prepare_openvino_model
try:
    from .util.OpenVinoUtils import get_inference_engine_device
except ImportError as ex:
    logging.debug(f"Could not import get_inference_engine_device")
from .util.ResultUtils import extract_object_detection_roi
from .util.ResultUtils import non_maximum_suppression
from .util.TimeUtils import FPSTracer
from .util.TimeUtils import ProfileWatch
from .util.TimeUtils import Watch
from .util.TimeUtils import current_millis
from .util.VectorUtils import array_to_vector
from .util.VectorUtils import landmarks_center_by_indices
from .util.VectorUtils import lerp4d
from .util.VectorUtils import list_of_vector2D
from .util.VectorUtils import list_of_vector3D
from .util.VectorUtils import list_of_vector4D
from .util.VectorUtils import vector_as_list
from .util.VectorUtils import vector_to_array
try:
    from .dsp.OneEuroFilterNumba import OneEuroFilterNumba
except ImportError as ex:
    logging.debug(f"Could not import OneEuroFilterNumba")
try:
    from .estimator.openvino.OpenVinoPoseEstimator import OpenVinoPoseEstimator
except ImportError as ex:
    logging.debug(f"Could not import OpenVinoPoseEstimator")
try:
    from .estimator.spatial.face.landmark.MediaPipeFaceMeshEstimator import MediaPipeFaceMeshEstimator
except ImportError as ex:
    logging.debug(f"Could not import MediaPipeFaceMeshEstimator")


def __getattr__(name):
    from .model._ImportStub import _ImportStub
    logging.debug(f"{name} has not been imported!")
    stub = type(name, _ImportStub.__bases__, dict(_ImportStub.__dict__))
    stub.name = name
    return stub
