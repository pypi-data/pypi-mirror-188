Metadata-Version: 2.1
Name: deltalake
Version: 0.7.0
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Dist: pyarrow>=7
Requires-Dist: typing-extensions;python_version<"3.8"
Requires-Dist: mypy; extra == 'devel'
Requires-Dist: black; extra == 'devel'
Requires-Dist: isort; extra == 'devel'
Requires-Dist: packaging>=20; extra == 'devel'
Requires-Dist: pytest; extra == 'devel'
Requires-Dist: pytest-mock; extra == 'devel'
Requires-Dist: pytest-cov; extra == 'devel'
Requires-Dist: pytest-timeout; extra == 'devel'
Requires-Dist: sphinx<=4.5; extra == 'devel'
Requires-Dist: sphinx-rtd-theme; extra == 'devel'
Requires-Dist: toml; extra == 'devel'
Requires-Dist: wheel; extra == 'devel'
Requires-Dist: pytest-benchmark; extra == 'devel'
Requires-Dist: pyspark; extra == 'pyspark'
Requires-Dist: delta-spark; extra == 'pyspark'
Requires-Dist: numpy==1.22.2; extra == 'pyspark'
Requires-Dist: pandas; extra == 'pandas'
Provides-Extra: devel
Provides-Extra: pyspark
Provides-Extra: pandas
License-File: LICENSE.txt
Summary: Native Delta Lake Python binding based on delta-rs with Pandas integration
Keywords: deltalake,delta,datalake,pandas,arrow
Home-Page: https://github.com/delta-io/delta-rs
Author: Qingping Hou <dave2008713@gmail.com>
Author-email: Qingping Hou <dave2008713@gmail.com>
License: Apache-2.0
Requires-Python: >=3.7
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
Project-URL: documentation, https://delta-io.github.io/delta-rs/python/
Project-URL: repository, https://github.com/delta-io/delta-rs

Deltalake-python
================

[![PyPI](https://img.shields.io/pypi/v/deltalake.svg?style=flat-square)](https://pypi.org/project/deltalake/)
[![userdoc](https://img.shields.io/badge/docs-user-blue)](https://delta-io.github.io/delta-rs/python/)
[![apidoc](https://img.shields.io/badge/docs-api-blue)](https://delta-io.github.io/delta-rs/python/api_reference.html)

Native [Delta Lake](https://delta.io/) Python binding based on
[delta-rs](https://github.com/delta-io/delta-rs) with
[Pandas](https://pandas.pydata.org/) integration.


Installation
------------

```bash
pip install deltalake
```

NOTE: official binary wheels are linked against openssl statically for remote
objection store communication. Please file Github issue to request for critical
openssl upgrade.


Develop
-------

#### Setup your local environment with virtualenv
```bash
$ make setup-venv
```

#### Activate it
```bash
$ source ./venv/bin/activate
```

#### Ready to develop with maturin

[maturin](https://github.com/PyO3/maturin) is used to build the python package.
Install delta-rs in the current virtualenv

```bash
$ make develop
```

Then, list all the available tasks

```bash
$ make help
```

Build manylinux wheels
----------------------

```bash
docker run -e PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig -it -v `pwd`:/io apache/arrow-dev:amd64-centos-6.10-python-manylinux2010 bash
curl https://sh.rustup.rs -sSf | sh -s -- -y
source $HOME/.cargo/env
rustup default stable
cargo install --git https://github.com/PyO3/maturin.git --rev 98636cea89c328b3eba4ebb548124f75c8018200 maturin
cd /io/python
export PATH=/opt/python/cp37-cp37m/bin:/opt/python/cp38-cp38/bin:$PATH
maturin publish -b pyo3 --target x86_64-unknown-linux-gnu --no-sdist
```

#### PyPI release

Publish a new GitHub release with name and tag version set to `python-vx.y.z`.
This will trigger our automated release pipeline.

