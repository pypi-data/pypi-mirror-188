Metadata-Version: 2.1
Name: qimage2ndarray
Version: 1.10.0
Summary: Conversion between QImages and numpy.ndarrays.
Home-page: https://github.com/hmeine/qimage2ndarray
Download-URL: https://github.com/hmeine/qimage2ndarray/releases
Author: Hans Meine
Author-email: hans_meine@gmx.net
Keywords: QImage,numpy,ndarray,image,convert,PyQt4,PyQt5,PyQt6,PySide,PySide6
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Multimedia :: Graphics
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: User Interfaces
Provides-Extra: PyQt4
Provides-Extra: PyQt5
Provides-Extra: PyQt6
Provides-Extra: PySide
Provides-Extra: PySide2
Provides-Extra: PySide6
License-File: LICENSE.txt

qimage2ndarray is a small python extension for quickly converting
between QImages and numpy.ndarrays (in both directions).  These are
very common tasks when programming e.g. scientific visualizations in
Python using PyQt4 as the GUI library.

* Supports conversion of scalar and RGB data, with arbitrary dtypes
  and memory layout, with and without alpha channels, into QImages
  (e.g. for display or saving using Qt).

* qimage2ndarray makes it possible to create ndarrays that are
  *views* into a given QImage's memory.

  This allows for very efficient data handling and makes it possible
  to modify Qt image data in-place (e.g. for brightness/gamma or alpha
  mask modifications).

* Masked arrays are also supported and are converted into QImages
  with transparent pixels.

* Supports recarrays (and comes with an appropriate dtype) for
  convenient access to RGB(A) channels.

* Supports value scaling / normalization to 0..255 for convenient
  display of arbitrary NumPy arrays.

* qimage2ndarray is stable and unit-tested.
