import{d as g,$ as v,al as b,a0 as k,c as m,u as t,a as D,w as p,e as S,a2 as F,a3 as x,o as B,b as d,aY as T,aZ as $,a_ as I,a$ as K,K as i}from"./index-3e9b5a4f-22e45b7a.js";import{u as N}from"./usePageTitle-9cf51495.js";import"./index-8ec704cb.js";import{r as y}from"./routes-f61735ce.js";import"./meta-26546594.js";const Y=g({__name:"FlowRunCreate",setup(V){const u=v(),a=b("deploymentId"),n=x(),f=k(u.deployments.getDeployment,[a]),e=m(()=>f.response),_=async s=>{var r,o;try{const l=await u.deployments.createDeploymentFlowRun(a.value,s),c=((o=(r=s.state)==null?void 0:r.stateDetails)==null?void 0:o.scheduledTime)??void 0,h=!c,C=I(K,{flowRun:l,flowRunRoute:y.flowRun,router:n,immediate:h,startTime:c});i(C,"success"),n.push(y.deployment(a.value))}catch(l){i("Something went wrong trying to create a flow run","error"),console.error(l)}},w=()=>{n.back()},R=m(()=>e.value?`Create Flow Run for Deployment: ${e.value.name}`:"Create Flow Run for Deployment");return N(R),(s,r)=>{const o=F("p-layout-default");return t(e)?(B(),D(o,{key:0},{header:p(()=>[d(t(T),{deployment:t(e)},null,8,["deployment"])]),default:p(()=>[d(t($),{deployment:t(e),onSubmit:_,onCancel:w},null,8,["deployment"])]),_:1})):S("",!0)}}});export{Y as default};
