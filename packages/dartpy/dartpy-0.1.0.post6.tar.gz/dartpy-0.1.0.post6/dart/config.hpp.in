/*
 * Copyright (c) 2011-2023, The DART development contributors
 * All rights reserved.
 *
 * The list of contributors can be found at:
 *   https://github.com/dartsim/dart/blob/master/LICENSE
 *
 * This file is provided under the following "BSD-style" License:
 *   Redistribution and use in source and binary forms, with or
 *   without modification, are permitted provided that the following
 *   conditions are met:
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions and the following
 *     disclaimer in the documentation and/or other materials provided
 *     with the distribution.
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 *   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 *   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 *   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 *   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 *   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 *   AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *   LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *   ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *   POSSIBILITY OF SUCH DAMAGE.
 */

/* config.hpp. Generated by CMake for @PROJECT_NAME@. */

#pragma once

/* Version number */
#define DART_MAJOR_VERSION @DART_MAJOR_VERSION@
#define DART_MINOR_VERSION @DART_MINOR_VERSION@
#define DART_PATCH_VERSION @DART_PATCH_VERSION@

#define DART_VERSION "@DART_VERSION@"
#define DART_DESCRIPTION "@DART_PKG_DESC@"

#define DART_VERSION_AT_LEAST(x,y,z) \
  (DART_MAJOR_VERSION > x || (DART_MAJOR_VERSION >= x && \
  (DART_MINOR_VERSION > y || (DART_MINOR_VERSION >= y && \
  DART_PATCH_VERSION >= z))))

#define DART_MAJOR_MINOR_VERSION_AT_LEAST(x,y) \
  (DART_MAJOR_VERSION > x || (DART_MAJOR_VERSION >= x && \
  (DART_MINOR_VERSION > y || (DART_MINOR_VERSION >= y))))

#define DART_VERSION_AT_MOST(x,y,z) \
  (DART_MAJOR_VERSION < x || (DART_MAJOR_VERSION <= x && \
  (DART_MINOR_VERSION < y || (DART_MINOR_VERSION <= y && \
  DART_PATCH_VERSION <= z))))

#define DART_MAJOR_MINOR_VERSION_AT_MOST(x,y) \
  (DART_MAJOR_VERSION < x || (DART_MAJOR_VERSION <= x && \
  (DART_MINOR_VERSION < y || (DART_MINOR_VERSION <= y))))

#cmakedefine01 BUILD_TYPE_DEBUG
#cmakedefine01 BUILD_TYPE_RELEASE
#cmakedefine01 BUILD_TYPE_RELWITHDEBINFO
#cmakedefine01 BUILD_TYPE_MINSIZEREL

#cmakedefine01 DART_ENABLE_SIMD

#define DART_DATA_LOCAL_PATH "@DART_SOURCE_DIR@/data/"
#define DART_DATA_GLOBAL_PATH "@CMAKE_INSTALL_PREFIX@/@DART_ADDITIONAL_DOCUMENTATION_INSTALL_PATH@/data/"

// Workaround for the fact that Bullet does not add the definition to
// BULLET_DEFINITIONS or generate a #cmakedefine header.
#cmakedefine BT_USE_DOUBLE_PRECISION

#if defined(__clang__)
  #define DART_COMPILER_CLANG 1

#elif defined(__GNUC__) || defined(__GNUG__)
  #define DART_COMPILER_GCC 1

#elif defined(_MSC_VER)
  // MSVC stands for Microsoft Visual C++
  #define DART_COMPILER_MSVC _MSC_VER

#elif defined(__EMSCRIPTEN__)
  #define DART_COMPILER_EMSCRIPTEN 1

#elif defined(__llvm__)
  #define DART_COMPILER_LLVM 1

#elif defined(__INTEL_COMPILER)
  #define DART_COMPILER_ICC 1

#elif defined(__MINGW32__)
  #define DART_COMPILER_MINGW32 1

#elif defined(__SUNPRO_CC)
  #define DART_COMPILER_SUNPRO 1

#elif defined(__IBMCPP__)
  #define DART_COMPILER_IBM 1

#elif defined(__PGI)
  #define DART_COMPILER_PGI 1

#elif defined(__CC_ARM) || defined(__ARMCC_VERSION)
  #define DART_COMPILER_ARM 1

#elif defined(__BORLANDC__)
  #define DART_COMPILER_BORLAND 1

#elif defined(__TINYC__)
  #define DART_COMPILER_TINY 1

#elif defined(__WATCOMC__)
  #define DART_COMPILER_WATCOM 1

#else
  // Raise an error if the compiler type is not recognized
  #error Unknown compiler
#endif

// Define undefined preprocessors as 0
#ifndef DART_COMPILER_CLANG
  #define DART_COMPILER_CLANG 0
#endif

#ifndef DART_COMPILER_GCC
  #define DART_COMPILER_GCC 0
#endif

#ifndef DART_COMPILER_MSVC
  #define DART_COMPILER_MSVC 0
#endif

#ifndef DART_COMPILER_EMSCRIPTEN
  #define DART_COMPILER_EMSCRIPTEN 0
#endif

#ifndef DART_COMPILER_LLVM
  #define DART_COMPILER_LLVM 0
#endif

#ifndef DART_COMPILER_ICC
  #define DART_COMPILER_ICC 0
#endif

#ifndef DART_COMPILER_MINGW32
  #define DART_COMPILER_MINGW32 0
#endif

#ifndef DART_COMPILER_SUNPRO
  #define DART_COMPILER_SUNPRO 0
#endif

#ifndef DART_COMPILER_IBM
  #define DART_COMPILER_IBM 0
#endif

#ifndef DART_COMPILER_PGI
  #define DART_COMPILER_PGI 0
#endif

#ifndef DART_COMPILER_ARM
  #define DART_COMPILER_ARM 0
#endif

#ifndef DART_COMPILER_BOLAND
  #define DART_COMPILER_BOLAND 0
#endif

#ifndef DART_COMPILER_TINY
  #define DART_COMPILER_TINY 0
#endif

#ifndef DART_COMPILER_WATCOM
  #define DART_COMPILER_WATCOM 0
#endif
